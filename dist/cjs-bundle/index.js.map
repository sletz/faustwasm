{
  "version": 3,
  "sources": ["../../libfaust-wasm/libfaust-wasm.cjs", "../../src/exports-bundle.ts", "../../src/instantiateFaustModule.ts", "../../src/instantiateFaustModuleFromFile.ts", "../../src/FaustAudioWorkletProcessor.ts", "../../src/FaustFFTAudioWorkletProcessor.ts", "../../node_modules/tslib/tslib.es6.mjs", "../../node_modules/@aws-crypto/sha256-js/src/constants.ts", "../../node_modules/@aws-crypto/sha256-js/src/RawSha256.ts", "../../node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js", "../../node_modules/@aws-crypto/util/src/convertToBuffer.ts", "../../node_modules/@aws-crypto/util/src/isEmptyData.ts", "../../node_modules/@aws-crypto/sha256-js/src/jsSha256.ts", "../../src/FaustCompiler.ts", "../../src/FaustDspInstance.ts", "../../src/FaustWasmInstantiator.ts", "../../src/FaustSensors.ts", "../../src/FaustWebAudioDsp.ts", "../../src/FaustOfflineProcessor.ts", "../../src/FaustSvgDiagrams.ts", "../../src/FaustCmajor.ts", "../../src/LibFaust.ts", "../../src/WavEncoder.ts", "../../src/WavDecoder.ts", "../../src/SoundfileReader.ts", "../../src/FaustAudioWorkletCommunicator.ts", "../../src/FaustAudioWorkletNode.ts", "../../src/FaustScriptProcessorNode.ts", "../../src/FaustDspGenerator.ts", "../../src/index-bundle-iife.ts"],
  "sourcesContent": ["\nvar FaustModule = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(FaustModule = {})  {\n\nvar Module=typeof FaustModule!=\"undefined\"?FaustModule:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject});[\"_main\",\"___getTypeName\",\"__embind_initialize_bindings\",\"_fflush\",\"onRuntimeInitialized\"].forEach(prop=>{if(!Object.getOwnPropertyDescriptor(Module[\"ready\"],prop)){Object.defineProperty(Module[\"ready\"],prop,{get:()=>abort(\"You are getting \"+prop+\" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\"),set:()=>abort(\"You are setting \"+prop+\" on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js\")})}});if(!Module.expectedDataFileDownloads){Module.expectedDataFileDownloads=0}Module.expectedDataFileDownloads++;(function(){if(Module[\"ENVIRONMENT_IS_PTHREAD\"])return;var loadPackage=function(metadata){var PACKAGE_PATH=\"\";if(typeof window===\"object\"){PACKAGE_PATH=window[\"encodeURIComponent\"](window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf(\"/\"))+\"/\")}else if(typeof process===\"undefined\"&&typeof location!==\"undefined\"){PACKAGE_PATH=encodeURIComponent(location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf(\"/\"))+\"/\")}var PACKAGE_NAME=\"libfaust-wasm.data\";var REMOTE_PACKAGE_BASE=\"libfaust-wasm.data\";if(typeof Module[\"locateFilePackage\"]===\"function\"&&!Module[\"locateFile\"]){Module[\"locateFile\"]=Module[\"locateFilePackage\"];err(\"warning: you defined Module.locateFilePackage, that has been renamed to Module.locateFile (using your locateFilePackage for now)\")}var REMOTE_PACKAGE_NAME=Module[\"locateFile\"]?Module[\"locateFile\"](REMOTE_PACKAGE_BASE,\"\"):REMOTE_PACKAGE_BASE;var REMOTE_PACKAGE_SIZE=metadata[\"remote_package_size\"];function fetchRemotePackage(packageName,packageSize,callback,errback){if(typeof process===\"object\"&&typeof process.versions===\"object\"&&typeof process.versions.node===\"string\"){require(\"fs\").readFile(packageName,function(err,contents){if(err){errback(err)}else{callback(contents.buffer)}});return}var xhr=new XMLHttpRequest;xhr.open(\"GET\",packageName,true);xhr.responseType=\"arraybuffer\";xhr.onprogress=function(event){var url=packageName;var size=packageSize;if(event.total)size=event.total;if(event.loaded){if(!xhr.addedTotal){xhr.addedTotal=true;if(!Module.dataFileDownloads)Module.dataFileDownloads={};Module.dataFileDownloads[url]={loaded:event.loaded,total:size}}else{Module.dataFileDownloads[url].loaded=event.loaded}var total=0;var loaded=0;var num=0;for(var download in Module.dataFileDownloads){var data=Module.dataFileDownloads[download];total+=data.total;loaded+=data.loaded;num++}total=Math.ceil(total*Module.expectedDataFileDownloads/num);if(Module[\"setStatus\"])Module[\"setStatus\"](\"Downloading data... (\"+loaded+\"/\"+total+\")\")}else if(!Module.dataFileDownloads){if(Module[\"setStatus\"])Module[\"setStatus\"](\"Downloading data...\")}};xhr.onerror=function(event){throw new Error(\"NetworkError for: \"+packageName)};xhr.onload=function(event){if(xhr.status==200||xhr.status==304||xhr.status==206||xhr.status==0&&xhr.response){var packageData=xhr.response;callback(packageData)}else{throw new Error(xhr.statusText+\" : \"+xhr.responseURL)}};xhr.send(null)}function handleError(error){console.error(\"package error:\",error)}var fetchedCallback=null;var fetched=Module[\"getPreloadedPackage\"]?Module[\"getPreloadedPackage\"](REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE):null;if(!fetched)fetchRemotePackage(REMOTE_PACKAGE_NAME,REMOTE_PACKAGE_SIZE,function(data){if(fetchedCallback){fetchedCallback(data);fetchedCallback=null}else{fetched=data}},handleError);function runWithFS(){function assert(check,msg){if(!check)throw msg+(new Error).stack}Module[\"FS_createPath\"](\"/\",\"usr\",true,true);Module[\"FS_createPath\"](\"/usr\",\"rsrc\",true,true);Module[\"FS_createPath\"](\"/usr\",\"share\",true,true);Module[\"FS_createPath\"](\"/usr/share\",\"faust\",true,true);function DataRequest(start,end,audio){this.start=start;this.end=end;this.audio=audio}DataRequest.prototype={requests:{},open:function(mode,name){this.name=name;this.requests[name]=this;Module[\"addRunDependency\"](\"fp \"+this.name)},send:function(){},onload:function(){var byteArray=this.byteArray.subarray(this.start,this.end);this.finish(byteArray)},finish:function(byteArray){var that=this;Module[\"FS_createDataFile\"](this.name,null,byteArray,true,true,true);Module[\"removeRunDependency\"](\"fp \"+that.name);this.requests[this.name]=null}};var files=metadata[\"files\"];for(var i=0;i<files.length;++i){new DataRequest(files[i][\"start\"],files[i][\"end\"],files[i][\"audio\"]||0).open(\"GET\",files[i][\"filename\"])}function processPackageData(arrayBuffer){assert(arrayBuffer,\"Loading data file failed.\");assert(arrayBuffer.constructor.name===ArrayBuffer.name,\"bad input to processPackageData\");var byteArray=new Uint8Array(arrayBuffer);DataRequest.prototype.byteArray=byteArray;var files=metadata[\"files\"];for(var i=0;i<files.length;++i){DataRequest.prototype.requests[files[i].filename].onload()}Module[\"removeRunDependency\"](\"datafile_libfaust-wasm.data\")}Module[\"addRunDependency\"](\"datafile_libfaust-wasm.data\");if(!Module.preloadResults)Module.preloadResults={};Module.preloadResults[PACKAGE_NAME]={fromCache:false};if(fetched){processPackageData(fetched);fetched=null}else{fetchedCallback=processPackageData}}if(Module[\"calledRun\"]){runWithFS()}else{if(!Module[\"preRun\"])Module[\"preRun\"]=[];Module[\"preRun\"].push(runWithFS)}};loadPackage({\"files\":[{\"filename\":\"/usr/rsrc/mixer32.wasm\",\"start\":0,\"end\":502},{\"filename\":\"/usr/rsrc/mixer64.wasm\",\"start\":502,\"end\":1016},{\"filename\":\"/usr/share/faust/aanl.lib\",\"start\":1016,\"end\":30502},{\"filename\":\"/usr/share/faust/all.lib\",\"start\":30502,\"end\":31547},{\"filename\":\"/usr/share/faust/analyzers.lib\",\"start\":31547,\"end\":69518},{\"filename\":\"/usr/share/faust/basics.lib\",\"start\":69518,\"end\":166488},{\"filename\":\"/usr/share/faust/compressors.lib\",\"start\":166488,\"end\":233014},{\"filename\":\"/usr/share/faust/delays.lib\",\"start\":233014,\"end\":248149},{\"filename\":\"/usr/share/faust/demos.lib\",\"start\":248149,\"end\":328964},{\"filename\":\"/usr/share/faust/dx7.lib\",\"start\":328964,\"end\":398233},{\"filename\":\"/usr/share/faust/effect.lib\",\"start\":398233,\"end\":467263},{\"filename\":\"/usr/share/faust/envelopes.lib\",\"start\":467263,\"end\":489216},{\"filename\":\"/usr/share/faust/fds.lib\",\"start\":489216,\"end\":509777},{\"filename\":\"/usr/share/faust/filter.lib\",\"start\":509777,\"end\":575163},{\"filename\":\"/usr/share/faust/filters.lib\",\"start\":575163,\"end\":710936},{\"filename\":\"/usr/share/faust/hoa.lib\",\"start\":710936,\"end\":753737},{\"filename\":\"/usr/share/faust/instruments.lib\",\"start\":753737,\"end\":763134},{\"filename\":\"/usr/share/faust/interpolators.lib\",\"start\":763134,\"end\":790517},{\"filename\":\"/usr/share/faust/linearalgebra.lib\",\"start\":790517,\"end\":799175},{\"filename\":\"/usr/share/faust/math.lib\",\"start\":799175,\"end\":820436},{\"filename\":\"/usr/share/faust/maths.lib\",\"start\":820436,\"end\":854911},{\"filename\":\"/usr/share/faust/maxmsp.lib\",\"start\":854911,\"end\":863087},{\"filename\":\"/usr/share/faust/mi.lib\",\"start\":863087,\"end\":880470},{\"filename\":\"/usr/share/faust/misceffects.lib\",\"start\":880470,\"end\":918178},{\"filename\":\"/usr/share/faust/music.lib\",\"start\":918178,\"end\":937696},{\"filename\":\"/usr/share/faust/noises.lib\",\"start\":937696,\"end\":953806},{\"filename\":\"/usr/share/faust/oscillator.lib\",\"start\":953806,\"end\":973657},{\"filename\":\"/usr/share/faust/oscillators.lib\",\"start\":973657,\"end\":1036038},{\"filename\":\"/usr/share/faust/phaflangers.lib\",\"start\":1036038,\"end\":1046064},{\"filename\":\"/usr/share/faust/physmodels.lib\",\"start\":1046064,\"end\":1222554},{\"filename\":\"/usr/share/faust/platform.lib\",\"start\":1222554,\"end\":1226067},{\"filename\":\"/usr/share/faust/quantizers.lib\",\"start\":1226067,\"end\":1235905},{\"filename\":\"/usr/share/faust/reducemaps.lib\",\"start\":1235905,\"end\":1245075},{\"filename\":\"/usr/share/faust/reverbs.lib\",\"start\":1245075,\"end\":1290260},{\"filename\":\"/usr/share/faust/routes.lib\",\"start\":1290260,\"end\":1298826},{\"filename\":\"/usr/share/faust/sf.lib\",\"start\":1298826,\"end\":1299892},{\"filename\":\"/usr/share/faust/signals.lib\",\"start\":1299892,\"end\":1321985},{\"filename\":\"/usr/share/faust/soundfiles.lib\",\"start\":1321985,\"end\":1331348},{\"filename\":\"/usr/share/faust/spats.lib\",\"start\":1331348,\"end\":1341669},{\"filename\":\"/usr/share/faust/stdfaust.lib\",\"start\":1341669,\"end\":1342974},{\"filename\":\"/usr/share/faust/synths.lib\",\"start\":1342974,\"end\":1354335},{\"filename\":\"/usr/share/faust/tonestacks.lib\",\"start\":1354335,\"end\":1366691},{\"filename\":\"/usr/share/faust/tubes.lib\",\"start\":1366691,\"end\":1716506},{\"filename\":\"/usr/share/faust/vaeffects.lib\",\"start\":1716506,\"end\":1755744},{\"filename\":\"/usr/share/faust/version.lib\",\"start\":1755744,\"end\":1756675},{\"filename\":\"/usr/share/faust/wdmodels.lib\",\"start\":1756675,\"end\":1846628},{\"filename\":\"/usr/share/faust/webaudio.lib\",\"start\":1846628,\"end\":1858749}],\"remote_package_size\":1858749})})();if(Module[\"ENVIRONMENT_IS_PTHREAD\"])Module[\"preRun\"]=[];var necessaryPreJSTasks=Module[\"preRun\"].slice();if(!Module[\"preRun\"])throw\"Module.preRun should exist because file support used it; did a pre-js delete it?\";necessaryPreJSTasks.forEach(function(task){if(Module[\"preRun\"].indexOf(task)<0)throw\"All preRun tasks that exist before user pre-js code should remain after; did you replace Module or modify Module.preRun?\"});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(Module[\"ENVIRONMENT\"]){throw new Error(\"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)\")}var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;if(e&&typeof e==\"object\"&&e.stack){toLog=[e,e.stack]}err(\"exiting due to exception: \"+toLog)}if(ENVIRONMENT_IS_NODE){if(typeof process==\"undefined\"||!process.release||process.release.name!==\"node\")throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");var fs=require(\"fs\");var nodePath=require(\"path\");if(ENVIRONMENT_IS_WORKER){scriptDirectory=nodePath.dirname(scriptDirectory)+\"/\"}else{scriptDirectory=__dirname+\"/\"}read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};readAsync=(filename,onload,onerror)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer)})};if(process[\"argv\"].length>1){thisProgram=process[\"argv\"][1].replace(/\\\\/g,\"/\")}arguments_=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});var nodeMajor=process.version.match(/^v(\\d+)\\./)[1];if(nodeMajor<15){process[\"on\"](\"unhandledRejection\",function(reason){throw reason})}quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process[\"exitCode\"]=status;throw toThrow}logExceptionOnExit(toThrow);process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof process==\"object\"&&typeof require===\"function\"||typeof window==\"object\"||typeof importScripts==\"function\")throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");if(typeof read!=\"undefined\"){read_=function shell_read(f){return read(f)}}readBinary=function readBinary(f){let data;if(typeof readbuffer==\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data==\"object\");return data};readAsync=function readAsync(f,onload,onerror){setTimeout(()=>onload(readBinary(f)),0)};if(typeof clearTimeout==\"undefined\"){globalThis.clearTimeout=id=>{}}if(typeof scriptArgs!=\"undefined\"){arguments_=scriptArgs}else if(typeof arguments!=\"undefined\"){arguments_=arguments}if(typeof quit==\"function\"){quit_=(status,toThrow)=>{logExceptionOnExit(toThrow);quit(status)}}if(typeof print!=\"undefined\"){if(typeof console==\"undefined\")console={};console.log=print;console.warn=console.error=typeof printErr!=\"undefined\"?printErr:print}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}if(!(typeof window==\"object\"||typeof importScripts==\"function\"))throw new Error(\"not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)\");{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{throw new Error(\"environment detection error\")}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;checkIncomingModuleAPI();if(Module[\"arguments\"])arguments_=Module[\"arguments\"];legacyModuleProp(\"arguments\",\"arguments_\");if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];legacyModuleProp(\"thisProgram\",\"thisProgram\");if(Module[\"quit\"])quit_=Module[\"quit\"];legacyModuleProp(\"quit\",\"quit_\");assert(typeof Module[\"memoryInitializerPrefixURL\"]==\"undefined\",\"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"pthreadMainPrefixURL\"]==\"undefined\",\"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"cdInitializerPrefixURL\"]==\"undefined\",\"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"filePackagePrefixURL\"]==\"undefined\",\"Module.filePackagePrefixURL option was removed, use Module.locateFile instead\");assert(typeof Module[\"read\"]==\"undefined\",\"Module.read option was removed (modify read_ in JS)\");assert(typeof Module[\"readAsync\"]==\"undefined\",\"Module.readAsync option was removed (modify readAsync in JS)\");assert(typeof Module[\"readBinary\"]==\"undefined\",\"Module.readBinary option was removed (modify readBinary in JS)\");assert(typeof Module[\"setWindowTitle\"]==\"undefined\",\"Module.setWindowTitle option was removed (modify setWindowTitle in JS)\");assert(typeof Module[\"TOTAL_MEMORY\"]==\"undefined\",\"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY\");legacyModuleProp(\"read\",\"read_\");legacyModuleProp(\"readAsync\",\"readAsync\");legacyModuleProp(\"readBinary\",\"readBinary\");legacyModuleProp(\"setWindowTitle\",\"setWindowTitle\");assert(!ENVIRONMENT_IS_SHELL,\"shell environment detected but not enabled at build time.  Add 'shell' to `-sENVIRONMENT` to enable.\");var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];legacyModuleProp(\"wasmBinary\",\"wasmBinary\");var noExitRuntime=Module[\"noExitRuntime\"]||true;legacyModuleProp(\"noExitRuntime\",\"noExitRuntime\");if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;function assert(condition,text){if(!condition){abort(\"Assertion failed\"+(text?\": \"+text:\"\"))}}var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{if((u0&248)!=240)warnOnce(\"Invalid UTF-8 leading byte \"+ptrToString(u0)+\" encountered when deserializing a UTF-8 string in wasm memory to a JS string!\");u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;if(u>1114111)warnOnce(\"Invalid Unicode code point \"+ptrToString(u)+\" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).\");heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){assert(typeof maxBytesToWrite==\"number\",\"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len}var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}assert(!Module[\"STACK_SIZE\"],\"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time\");assert(typeof Int32Array!=\"undefined\"&&typeof Float64Array!==\"undefined\"&&Int32Array.prototype.subarray!=undefined&&Int32Array.prototype.set!=undefined,\"JS engine does not provide full typed array support\");assert(!Module[\"wasmMemory\"],\"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally\");assert(!Module[\"INITIAL_MEMORY\"],\"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically\");var wasmTable;function writeStackCookie(){var max=_emscripten_stack_get_end();assert((max&3)==0);if(max==0){max+=4}HEAPU32[max>>2]=34821223;HEAPU32[max+4>>2]=2310721022;HEAPU32[0]=1668509029}function checkStackCookie(){if(ABORT)return;var max=_emscripten_stack_get_end();if(max==0){max+=4}var cookie1=HEAPU32[max>>2];var cookie2=HEAPU32[max+4>>2];if(cookie1!=34821223||cookie2!=2310721022){abort(\"Stack overflow! Stack cookie has been overwritten at \"+ptrToString(max)+\", expected hex dwords 0x89BACDFE and 0x2135467, but received \"+ptrToString(cookie2)+\" \"+ptrToString(cookie1))}if(HEAPU32[0]!==1668509029){abort(\"Runtime error: The application has corrupted its heap memory area (address zero)!\")}}(function(){var h16=new Int16Array(1);var h8=new Int8Array(h16.buffer);h16[0]=25459;if(h8[0]!==115||h8[1]!==99)throw\"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)\"})();var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){assert(!runtimeInitialized);runtimeInitialized=true;checkStackCookie();if(!Module[\"noFSInit\"]&&!FS.init.initialized)FS.init();FS.ignorePermissions=false;TTY.init();SOCKFS.root=FS.mount(SOCKFS,{},null);callRuntimeCallbacks(__ATINIT__)}function postRun(){checkStackCookie();if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}assert(Math.imul,\"This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.fround,\"This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.clz32,\"This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");assert(Math.trunc,\"This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill\");var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;var runDependencyTracking={};function getUniqueRunDependency(id){var orig=id;while(1){if(!runDependencyTracking[id])return id;id=orig+Math.random()}}function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(id){assert(!runDependencyTracking[id]);runDependencyTracking[id]=1;if(runDependencyWatcher===null&&typeof setInterval!=\"undefined\"){runDependencyWatcher=setInterval(function(){if(ABORT){clearInterval(runDependencyWatcher);runDependencyWatcher=null;return}var shown=false;for(var dep in runDependencyTracking){if(!shown){shown=true;err(\"still waiting on run dependencies:\")}err(\"dependency: \"+dep)}if(shown){err(\"(end of list)\")}},1e4)}}else{err(\"warning: run dependency added without ID\")}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(id){assert(runDependencyTracking[id]);delete runDependencyTracking[id]}else{err(\"warning: run dependency removed without ID\")}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith(\"file://\")}function createExportWrapper(name,fixedasm){return function(){var displayName=name;var asm=fixedasm;if(!fixedasm){asm=Module[\"asm\"]}assert(runtimeInitialized,\"native function `\"+displayName+\"` called before runtime initialization\");if(!asm[name]){assert(asm[name],\"exported native function `\"+displayName+\"` not found\")}return asm[name].apply(null,arguments)}}var wasmBinaryFile;wasmBinaryFile=\"libfaust-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else{if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response))},reject)})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={\"env\":wasmImports,\"wasi_snapshot_preview1\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"memory\"];assert(wasmMemory,\"memory not found in wasm exports\");updateMemoryViews();wasmTable=Module[\"asm\"][\"__indirect_function_table\"];assert(wasmTable,\"table not found in wasm exports\");addOnInit(Module[\"asm\"][\"__wasm_call_ctors\"]);removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");var trueModule=Module;function receiveInstantiationResult(result){assert(Module===trueModule,\"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?\");trueModule=null;receiveInstance(result[\"instance\"])}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);if(isFileURI(wasmBinaryFile)){err(\"warning: Loading from a file URI (\"+wasmBinaryFile+\") is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing\")}abort(reason)})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(receiveInstantiationResult)})})}else{return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module[\"instantiateWasm\"]){try{var exports=Module[\"instantiateWasm\"](info,receiveInstance);return exports}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync().catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function legacyModuleProp(prop,newName){if(!Object.getOwnPropertyDescriptor(Module,prop)){Object.defineProperty(Module,prop,{configurable:true,get:function(){abort(\"Module.\"+prop+\" has been replaced with plain \"+newName+\" (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)\")}})}}function ignoredModuleProp(prop){if(Object.getOwnPropertyDescriptor(Module,prop)){abort(\"`Module.\"+prop+\"` was supplied but `\"+prop+\"` not included in INCOMING_MODULE_JS_API\")}}function isExportedByForceFilesystem(name){return name===\"FS_createPath\"||name===\"FS_createDataFile\"||name===\"FS_createPreloadedFile\"||name===\"FS_unlink\"||name===\"addRunDependency\"||name===\"FS_createLazyFile\"||name===\"FS_createDevice\"||name===\"removeRunDependency\"}function missingGlobal(sym,msg){if(typeof globalThis!==\"undefined\"){Object.defineProperty(globalThis,sym,{configurable:true,get:function(){warnOnce(\"`\"+sym+\"` is not longer defined by emscripten. \"+msg);return undefined}})}}missingGlobal(\"buffer\",\"Please use HEAP8.buffer or wasmMemory.buffer\");function missingLibrarySymbol(sym){if(typeof globalThis!==\"undefined\"&&!Object.getOwnPropertyDescriptor(globalThis,sym)){Object.defineProperty(globalThis,sym,{configurable:true,get:function(){var msg=\"`\"+sym+\"` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line\";var librarySymbol=sym;if(!librarySymbol.startsWith(\"_\")){librarySymbol=\"$\"+sym}msg+=\" (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE=\"+librarySymbol+\")\";if(isExportedByForceFilesystem(sym)){msg+=\". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\"}warnOnce(msg);return undefined}})}unexportedRuntimeSymbol(sym)}function unexportedRuntimeSymbol(sym){if(!Object.getOwnPropertyDescriptor(Module,sym)){Object.defineProperty(Module,sym,{configurable:true,get:function(){var msg=\"'\"+sym+\"' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the FAQ)\";if(isExportedByForceFilesystem(sym)){msg+=\". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you\"}abort(msg)}})}}var ASM_CONSTS={179128:$0=>{var dsp_code=\"\";try{var xmlhttp=new XMLHttpRequest;xmlhttp.open(\"GET\",Module.UTF8ToString($0),false);xmlhttp.send();if(xmlhttp.status==200){dsp_code=xmlhttp.responseText}}catch(e){console.log(e)}return allocate(intArrayFromString(dsp_code),\"i8\",ALLOC_STACK)}};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function ptrToString(ptr){assert(typeof ptr===\"number\");return\"0x\"+ptr.toString(16).padStart(8,\"0\")}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;if(ENVIRONMENT_IS_NODE)text=\"warning: \"+text;err(text)}}function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+UTF8ToString(condition)+\", at: \"+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false)};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;assert(prev>0);return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -sNO_DISABLE_EXCEPTION_CATCHING or -sEXCEPTION_CATCHING_ALLOWED=[..] to catch.\"}var PATH={isAbs:path=>path.charAt(0)===\"/\",splitPath:filename=>{var splitPathRe=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;return splitPathRe.exec(filename).slice(1)},normalizeArray:(parts,allowAboveRoot)=>{var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last===\".\"){parts.splice(i,1)}else if(last===\"..\"){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\"..\")}}return parts},normalize:path=>{var isAbsolute=PATH.isAbs(path),trailingSlash=path.substr(-1)===\"/\";path=PATH.normalizeArray(path.split(\"/\").filter(p=>!!p),!isAbsolute).join(\"/\");if(!path&&!isAbsolute){path=\".\"}if(path&&trailingSlash){path+=\"/\"}return(isAbsolute?\"/\":\"\")+path},dirname:path=>{var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\".\"}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir},basename:path=>{if(path===\"/\")return\"/\";path=PATH.normalize(path);path=path.replace(/\\/$/,\"\");var lastSlash=path.lastIndexOf(\"/\");if(lastSlash===-1)return path;return path.substr(lastSlash+1)},join:function(){var paths=Array.prototype.slice.call(arguments);return PATH.normalize(paths.join(\"/\"))},join2:(l,r)=>{return PATH.normalize(l+\"/\"+r)}};function getRandomDevice(){if(typeof crypto==\"object\"&&typeof crypto[\"getRandomValues\"]==\"function\"){var randomBuffer=new Uint8Array(1);return()=>{crypto.getRandomValues(randomBuffer);return randomBuffer[0]}}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=require(\"crypto\");return()=>crypto_module[\"randomBytes\"](1)[0]}catch(e){}}return()=>abort(\"no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };\")}var PATH_FS={resolve:function(){var resolvedPath=\"\",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=\"string\"){throw new TypeError(\"Arguments to path.resolve must be strings\")}else if(!path){return\"\"}resolvedPath=path+\"/\"+resolvedPath;resolvedAbsolute=PATH.isAbs(path)}resolvedPath=PATH.normalizeArray(resolvedPath.split(\"/\").filter(p=>!!p),!resolvedAbsolute).join(\"/\");return(resolvedAbsolute?\"/\":\"\")+resolvedPath||\".\"},relative:(from,to)=>{from=PATH_FS.resolve(from).substr(1);to=PATH_FS.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!==\"\")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\"\")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split(\"/\"));var toParts=trim(to.split(\"/\"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push(\"..\")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join(\"/\")}};function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}var TTY={ttys:[],init:function(){},shutdown:function(){},register:function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)},stream_ops:{open:function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(43)}stream.tty=tty;stream.seekable=false},close:function(stream){stream.tty.ops.fsync(stream.tty)},fsync:function(stream){stream.tty.ops.fsync(stream.tty)},read:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(60)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(60)}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i])}}catch(e){throw new FS.ErrnoError(29)}if(length){stream.node.timestamp=Date.now()}return i}},default_tty_ops:{get_char:function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=Buffer.alloc(BUFSIZE);var bytesRead=0;try{bytesRead=fs.readSync(process.stdin.fd,buf,0,BUFSIZE,-1)}catch(e){if(e.toString().includes(\"EOF\"))bytesRead=0;else throw e}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\"utf-8\")}else{result=null}}else if(typeof window!=\"undefined\"&&typeof window.prompt==\"function\"){result=window.prompt(\"Input: \");if(result!==null){result+=\"\\n\"}}else if(typeof readline==\"function\"){result=readline();if(result!==null){result+=\"\\n\"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()},put_char:function(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync:function(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[]}}},default_tty1_ops:{put_char:function(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}},fsync:function(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[]}}}};function mmapAlloc(size){abort(\"internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported\")}var MEMFS={ops_table:null,mount:function(mount){return MEMFS.createNode(null,\"/\",16384|511,0)},createNode:function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(63)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node;parent.timestamp=node.timestamp}return node},getFileDataAsTypedArray:function(node){if(!node.contents)return new Uint8Array(0);if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)},expandFileStorage:function(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)>>>0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0)},resizeFileStorage:function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0}else{var oldContents=node.contents;node.contents=new Uint8Array(newSize);if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize}},node_ops:{getattr:function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr},setattr:function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}},lookup:function(parent,name){throw FS.genericErrors[44]},mknod:function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)},rename:function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(55)}}}delete old_node.parent.contents[old_node.name];old_node.parent.timestamp=Date.now();old_node.name=new_name;new_dir.contents[new_name]=old_node;new_dir.timestamp=old_node.parent.timestamp;old_node.parent=new_dir},unlink:function(parent,name){delete parent.contents[name];parent.timestamp=Date.now()},rmdir:function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(55)}delete parent.contents[name];parent.timestamp=Date.now()},readdir:function(node){var entries=[\".\",\"..\"];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries},symlink:function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node},readlink:function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(28)}return node.link}},stream_ops:{read:function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size},write:function(stream,buffer,offset,length,position,canOwn){assert(!(buffer instanceof ArrayBuffer));if(buffer.buffer===HEAP8.buffer){canOwn=false}if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){assert(position===0,\"canOwn must imply no weird position inside the file\");node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=buffer.slice(offset,offset+length);node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray){node.contents.set(buffer.subarray(offset,offset+length),position)}else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length},llseek:function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(28)}return position},allocate:function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)},mmap:function(stream,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&contents.buffer===HEAP8.buffer){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<contents.length){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}HEAP8.set(contents,ptr)}return{ptr:ptr,allocated:allocated}},msync:function(stream,buffer,offset,length,mmapFlags){MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0}}};function asyncLoad(url,onload,onerror,noRunDep){var dep=!noRunDep?getUniqueRunDependency(\"al \"+url):\"\";readAsync(url,arrayBuffer=>{assert(arrayBuffer,'Loading data file \"'+url+'\" failed (no arrayBuffer).');onload(new Uint8Array(arrayBuffer));if(dep)removeRunDependency(dep)},event=>{if(onerror){onerror()}else{throw'Loading data file \"'+url+'\" failed.'}});if(dep)addRunDependency(dep)}var ERRNO_MESSAGES={0:\"Success\",1:\"Arg list too long\",2:\"Permission denied\",3:\"Address already in use\",4:\"Address not available\",5:\"Address family not supported by protocol family\",6:\"No more processes\",7:\"Socket already connected\",8:\"Bad file number\",9:\"Trying to read unreadable message\",10:\"Mount device busy\",11:\"Operation canceled\",12:\"No children\",13:\"Connection aborted\",14:\"Connection refused\",15:\"Connection reset by peer\",16:\"File locking deadlock error\",17:\"Destination address required\",18:\"Math arg out of domain of func\",19:\"Quota exceeded\",20:\"File exists\",21:\"Bad address\",22:\"File too large\",23:\"Host is unreachable\",24:\"Identifier removed\",25:\"Illegal byte sequence\",26:\"Connection already in progress\",27:\"Interrupted system call\",28:\"Invalid argument\",29:\"I/O error\",30:\"Socket is already connected\",31:\"Is a directory\",32:\"Too many symbolic links\",33:\"Too many open files\",34:\"Too many links\",35:\"Message too long\",36:\"Multihop attempted\",37:\"File or path name too long\",38:\"Network interface is not configured\",39:\"Connection reset by network\",40:\"Network is unreachable\",41:\"Too many open files in system\",42:\"No buffer space available\",43:\"No such device\",44:\"No such file or directory\",45:\"Exec format error\",46:\"No record locks available\",47:\"The link has been severed\",48:\"Not enough core\",49:\"No message of desired type\",50:\"Protocol not available\",51:\"No space left on device\",52:\"Function not implemented\",53:\"Socket is not connected\",54:\"Not a directory\",55:\"Directory not empty\",56:\"State not recoverable\",57:\"Socket operation on non-socket\",59:\"Not a typewriter\",60:\"No such device or address\",61:\"Value too large for defined data type\",62:\"Previous owner died\",63:\"Not super-user\",64:\"Broken pipe\",65:\"Protocol error\",66:\"Unknown protocol\",67:\"Protocol wrong type for socket\",68:\"Math result not representable\",69:\"Read only file system\",70:\"Illegal seek\",71:\"No such process\",72:\"Stale file handle\",73:\"Connection timed out\",74:\"Text file busy\",75:\"Cross-device link\",100:\"Device not a stream\",101:\"Bad font file fmt\",102:\"Invalid slot\",103:\"Invalid request code\",104:\"No anode\",105:\"Block device required\",106:\"Channel number out of range\",107:\"Level 3 halted\",108:\"Level 3 reset\",109:\"Link number out of range\",110:\"Protocol driver not attached\",111:\"No CSI structure available\",112:\"Level 2 halted\",113:\"Invalid exchange\",114:\"Invalid request descriptor\",115:\"Exchange full\",116:\"No data (for no delay io)\",117:\"Timer expired\",118:\"Out of streams resources\",119:\"Machine is not on the network\",120:\"Package not installed\",121:\"The object is remote\",122:\"Advertise error\",123:\"Srmount error\",124:\"Communication error on send\",125:\"Cross mount point (not really error)\",126:\"Given log. name not unique\",127:\"f.d. invalid for this operation\",128:\"Remote address changed\",129:\"Can   access a needed shared lib\",130:\"Accessing a corrupted shared lib\",131:\".lib section in a.out corrupted\",132:\"Attempting to link in too many libs\",133:\"Attempting to exec a shared library\",135:\"Streams pipe error\",136:\"Too many users\",137:\"Socket type not supported\",138:\"Not supported\",139:\"Protocol family not supported\",140:\"Can't send after socket shutdown\",141:\"Too many references\",142:\"Host is down\",148:\"No medium (in tape drive)\",156:\"Level 2 not synchronized\"};var ERRNO_CODES={};function demangle(func){warnOnce(\"warning: build with -sDEMANGLE_SUPPORT to link in libcxxabi demangling\");return func}function demangleAll(text){var regex=/\\b_Z[\\w\\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+\" [\"+x+\"]\"})}var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:\"/\",initialized:false,ignorePermissions:true,ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,lookupPath:(path,opts={})=>{path=PATH_FS.resolve(path);if(!path)return{path:\"\",node:null};var defaults={follow_mount:true,recurse_count:0};opts=Object.assign(defaults,opts);if(opts.recurse_count>8){throw new FS.ErrnoError(32)}var parts=path.split(\"/\").filter(p=>!!p);var current=FS.root;var current_path=\"/\";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH_FS.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count+1});current=lookup.node;if(count++>40){throw new FS.ErrnoError(32)}}}}return{path:current_path,node:current}},getPath:node=>{var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!==\"/\"?mount+\"/\"+path:mount+path}path=path?node.name+\"/\"+path:node.name;node=node.parent}},hashName:(parentid,name)=>{var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length},hashAddNode:node=>{var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node},hashRemoveNode:node=>{var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}},lookupNode:(parent,name)=>{var errCode=FS.mayLookup(parent);if(errCode){throw new FS.ErrnoError(errCode,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)},createNode:(parent,name,mode,rdev)=>{assert(typeof parent==\"object\");var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node},destroyNode:node=>{FS.hashRemoveNode(node)},isRoot:node=>{return node===node.parent},isMountpoint:node=>{return!!node.mounted},isFile:mode=>{return(mode&61440)===32768},isDir:mode=>{return(mode&61440)===16384},isLink:mode=>{return(mode&61440)===40960},isChrdev:mode=>{return(mode&61440)===8192},isBlkdev:mode=>{return(mode&61440)===24576},isFIFO:mode=>{return(mode&61440)===4096},isSocket:mode=>{return(mode&49152)===49152},flagModes:{\"r\":0,\"r+\":2,\"w\":577,\"w+\":578,\"a\":1089,\"a+\":1090},modeStringToFlags:str=>{var flags=FS.flagModes[str];if(typeof flags==\"undefined\"){throw new Error(\"Unknown file open mode: \"+str)}return flags},flagsToPermissionString:flag=>{var perms=[\"r\",\"w\",\"rw\"][flag&3];if(flag&512){perms+=\"w\"}return perms},nodePermissions:(node,perms)=>{if(FS.ignorePermissions){return 0}if(perms.includes(\"r\")&&!(node.mode&292)){return 2}else if(perms.includes(\"w\")&&!(node.mode&146)){return 2}else if(perms.includes(\"x\")&&!(node.mode&73)){return 2}return 0},mayLookup:dir=>{var errCode=FS.nodePermissions(dir,\"x\");if(errCode)return errCode;if(!dir.node_ops.lookup)return 2;return 0},mayCreate:(dir,name)=>{try{var node=FS.lookupNode(dir,name);return 20}catch(e){}return FS.nodePermissions(dir,\"wx\")},mayDelete:(dir,name,isdir)=>{var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var errCode=FS.nodePermissions(dir,\"wx\");if(errCode){return errCode}if(isdir){if(!FS.isDir(node.mode)){return 54}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 10}}else{if(FS.isDir(node.mode)){return 31}}return 0},mayOpen:(node,flags)=>{if(!node){return 44}if(FS.isLink(node.mode)){return 32}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\"r\"||flags&512){return 31}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))},MAX_OPEN_FDS:4096,nextfd:(fd_start=0,fd_end=FS.MAX_OPEN_FDS)=>{for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(33)},getStream:fd=>FS.streams[fd],createStream:(stream,fd_start,fd_end)=>{if(!FS.FSStream){FS.FSStream=function(){this.shared={}};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(val){this.node=val}},isRead:{get:function(){return(this.flags&2097155)!==1}},isWrite:{get:function(){return(this.flags&2097155)!==0}},isAppend:{get:function(){return this.flags&1024}},flags:{get:function(){return this.shared.flags},set:function(val){this.shared.flags=val}},position:{get:function(){return this.shared.position},set:function(val){this.shared.position=val}}})}stream=Object.assign(new FS.FSStream,stream);var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream},closeStream:fd=>{FS.streams[fd]=null},chrdev_stream_ops:{open:stream=>{var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}},llseek:()=>{throw new FS.ErrnoError(70)}},major:dev=>dev>>8,minor:dev=>dev&255,makedev:(ma,mi)=>ma<<8|mi,registerDevice:(dev,ops)=>{FS.devices[dev]={stream_ops:ops}},getDevice:dev=>FS.devices[dev],getMounts:mount=>{var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts},syncfs:(populate,callback)=>{if(typeof populate==\"function\"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){err(\"warning: \"+FS.syncFSRequests+\" FS.syncfs operations in flight at once, probably just doing extra work\")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(errCode){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(errCode)}function done(errCode){if(errCode){if(!done.errored){done.errored=true;return doCallback(errCode)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach(mount=>{if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)})},mount:(type,opts,mountpoint)=>{if(typeof type==\"string\"){throw type}var root=mountpoint===\"/\";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(10)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot},unmount:mountpoint=>{var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(28)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(hash=>{var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.includes(current.mount)){FS.destroyNode(current)}current=next}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)},lookup:(parent,name)=>{return parent.node_ops.lookup(parent,name)},mknod:(path,mode,dev)=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name===\".\"||name===\"..\"){throw new FS.ErrnoError(28)}var errCode=FS.mayCreate(parent,name);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(63)}return parent.node_ops.mknod(parent,name,mode,dev)},create:(path,mode)=>{mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)},mkdir:(path,mode)=>{mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)},mkdirTree:(path,mode)=>{var dirs=path.split(\"/\");var d=\"\";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\"/\"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=20)throw e}}},mkdev:(path,mode,dev)=>{if(typeof dev==\"undefined\"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)},symlink:(oldpath,newpath)=>{if(!PATH_FS.resolve(oldpath)){throw new FS.ErrnoError(44)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var newname=PATH.basename(newpath);var errCode=FS.mayCreate(parent,newname);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(63)}return parent.node_ops.symlink(parent,newname,oldpath)},rename:(old_path,new_path)=>{var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;if(!old_dir||!new_dir)throw new FS.ErrnoError(44);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(75)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH_FS.relative(old_path,new_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(28)}relative=PATH_FS.relative(new_path,old_dirname);if(relative.charAt(0)!==\".\"){throw new FS.ErrnoError(55)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var errCode=FS.mayDelete(old_dir,old_name,isdir);if(errCode){throw new FS.ErrnoError(errCode)}errCode=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(errCode){throw new FS.ErrnoError(errCode)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(63)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(10)}if(new_dir!==old_dir){errCode=FS.nodePermissions(old_dir,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}},rmdir:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,true);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node)},readdir:path=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(54)}return node.node_ops.readdir(node)},unlink:path=>{var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(44)}var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var errCode=FS.mayDelete(parent,name,false);if(errCode){throw new FS.ErrnoError(errCode)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(63)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(10)}parent.node_ops.unlink(parent,name);FS.destroyNode(node)},readlink:path=>{var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(44)}if(!link.node_ops.readlink){throw new FS.ErrnoError(28)}return PATH_FS.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))},stat:(path,dontFollow)=>{var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(44)}if(!node.node_ops.getattr){throw new FS.ErrnoError(63)}return node.node_ops.getattr(node)},lstat:path=>{return FS.stat(path,true)},chmod:(path,mode,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})},lchmod:(path,mode)=>{FS.chmod(path,mode,true)},fchmod:(fd,mode)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chmod(stream.node,mode)},chown:(path,uid,gid,dontFollow)=>{var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}node.node_ops.setattr(node,{timestamp:Date.now()})},lchown:(path,uid,gid)=>{FS.chown(path,uid,gid,true)},fchown:(fd,uid,gid)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}FS.chown(stream.node,uid,gid)},truncate:(path,len)=>{if(len<0){throw new FS.ErrnoError(28)}var node;if(typeof path==\"string\"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(63)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(31)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(28)}var errCode=FS.nodePermissions(node,\"w\");if(errCode){throw new FS.ErrnoError(errCode)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})},ftruncate:(fd,len)=>{var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(28)}FS.truncate(stream.node,len)},utime:(path,atime,mtime)=>{var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})},open:(path,flags,mode)=>{if(path===\"\"){throw new FS.ErrnoError(44)}flags=typeof flags==\"string\"?FS.modeStringToFlags(flags):flags;mode=typeof mode==\"undefined\"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==\"object\"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(20)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(44)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(54)}if(!created){var errCode=FS.mayOpen(node,flags);if(errCode){throw new FS.ErrnoError(errCode)}}if(flags&512&&!created){FS.truncate(node,0)}flags&=~(128|512|131072);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false});if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\"logReadFiles\"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1}}return stream},close:stream=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null},isClosed:stream=>{return stream.fd===null},llseek:(stream,offset,whence)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(70)}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(28)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position},read:(stream,buffer,offset,length,position)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.read){throw new FS.ErrnoError(28)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead},write:(stream,buffer,offset,length,position,canOwn)=>{if(length<0||position<0){throw new FS.ErrnoError(28)}if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(31)}if(!stream.stream_ops.write){throw new FS.ErrnoError(28)}if(stream.seekable&&stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=\"undefined\";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(70)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;return bytesWritten},allocate:(stream,offset,length)=>{if(FS.isClosed(stream)){throw new FS.ErrnoError(8)}if(offset<0||length<=0){throw new FS.ErrnoError(28)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(8)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(43)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(138)}stream.stream_ops.allocate(stream,offset,length)},mmap:(stream,length,position,prot,flags)=>{if((prot&2)!==0&&(flags&2)===0&&(stream.flags&2097155)!==2){throw new FS.ErrnoError(2)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(2)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(43)}return stream.stream_ops.mmap(stream,length,position,prot,flags)},msync:(stream,buffer,offset,length,mmapFlags)=>{if(!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)},munmap:stream=>0,ioctl:(stream,cmd,arg)=>{if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(59)}return stream.stream_ops.ioctl(stream,cmd,arg)},readFile:(path,opts={})=>{opts.flags=opts.flags||0;opts.encoding=opts.encoding||\"binary\";if(opts.encoding!==\"utf8\"&&opts.encoding!==\"binary\"){throw new Error('Invalid encoding type \"'+opts.encoding+'\"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\"utf8\"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding===\"binary\"){ret=buf}FS.close(stream);return ret},writeFile:(path,data,opts={})=>{opts.flags=opts.flags||577;var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==\"string\"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error(\"Unsupported data type\")}FS.close(stream)},cwd:()=>FS.currentPath,chdir:path=>{var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(44)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(54)}var errCode=FS.nodePermissions(lookup.node,\"x\");if(errCode){throw new FS.ErrnoError(errCode)}FS.currentPath=lookup.path},createDefaultDirectories:()=>{FS.mkdir(\"/tmp\");FS.mkdir(\"/home\");FS.mkdir(\"/home/web_user\")},createDefaultDevices:()=>{FS.mkdir(\"/dev\");FS.registerDevice(FS.makedev(1,3),{read:()=>0,write:(stream,buffer,offset,length,pos)=>length});FS.mkdev(\"/dev/null\",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\"/dev/tty\",FS.makedev(5,0));FS.mkdev(\"/dev/tty1\",FS.makedev(6,0));var random_device=getRandomDevice();FS.createDevice(\"/dev\",\"random\",random_device);FS.createDevice(\"/dev\",\"urandom\",random_device);FS.mkdir(\"/dev/shm\");FS.mkdir(\"/dev/shm/tmp\")},createSpecialDirectories:()=>{FS.mkdir(\"/proc\");var proc_self=FS.mkdir(\"/proc/self\");FS.mkdir(\"/proc/self/fd\");FS.mount({mount:()=>{var node=FS.createNode(proc_self,\"fd\",16384|511,73);node.node_ops={lookup:(parent,name)=>{var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);var ret={parent:null,mount:{mountpoint:\"fake\"},node_ops:{readlink:()=>stream.path}};ret.parent=ret;return ret}};return node}},{},\"/proc/self/fd\")},createStandardStreams:()=>{if(Module[\"stdin\"]){FS.createDevice(\"/dev\",\"stdin\",Module[\"stdin\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdin\")}if(Module[\"stdout\"]){FS.createDevice(\"/dev\",\"stdout\",null,Module[\"stdout\"])}else{FS.symlink(\"/dev/tty\",\"/dev/stdout\")}if(Module[\"stderr\"]){FS.createDevice(\"/dev\",\"stderr\",null,Module[\"stderr\"])}else{FS.symlink(\"/dev/tty1\",\"/dev/stderr\")}var stdin=FS.open(\"/dev/stdin\",0);var stdout=FS.open(\"/dev/stdout\",1);var stderr=FS.open(\"/dev/stderr\",1);assert(stdin.fd===0,\"invalid handle for stdin (\"+stdin.fd+\")\");assert(stdout.fd===1,\"invalid handle for stdout (\"+stdout.fd+\")\");assert(stderr.fd===2,\"invalid handle for stderr (\"+stderr.fd+\")\")},ensureErrnoError:()=>{if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}};this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack){Object.defineProperty(this,\"stack\",{value:(new Error).stack,writable:true});this.stack=demangleAll(this.stack)}};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[44].forEach(code=>{FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack=\"<generic error, no stack>\"})},staticInit:()=>{FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},\"/\");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\"MEMFS\":MEMFS}},init:(input,output,error)=>{assert(!FS.init.initialized,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");FS.init.initialized=true;FS.ensureErrnoError();Module[\"stdin\"]=input||Module[\"stdin\"];Module[\"stdout\"]=output||Module[\"stdout\"];Module[\"stderr\"]=error||Module[\"stderr\"];FS.createStandardStreams()},quit:()=>{FS.init.initialized=false;_fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}},getMode:(canRead,canWrite)=>{var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode},findObject:(path,dontResolveLastLink)=>{var ret=FS.analyzePath(path,dontResolveLastLink);if(!ret.exists){return null}return ret.object},analyzePath:(path,dontResolveLastLink)=>{try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\"/\"}catch(e){ret.error=e.errno}return ret},createPath:(parent,path,canRead,canWrite)=>{parent=typeof parent==\"string\"?parent:FS.getPath(parent);var parts=path.split(\"/\").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current},createFile:(parent,name,properties,canRead,canWrite)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)},createDataFile:(parent,name,data,canRead,canWrite,canOwn)=>{var path=name;if(parent){parent=typeof parent==\"string\"?parent:FS.getPath(parent);path=name?PATH.join2(parent,name):parent}var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==\"string\"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,577);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node},createDevice:(parent,name,input,output)=>{var path=PATH.join2(typeof parent==\"string\"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:stream=>{stream.seekable=false},close:stream=>{if(output&&output.buffer&&output.buffer.length){output(10)}},read:(stream,buffer,offset,length,pos)=>{var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(29)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(6)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead},write:(stream,buffer,offset,length,pos)=>{for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(29)}}if(length){stream.node.timestamp=Date.now()}return i}});return FS.mkdev(path,mode,dev)},forceLoadFile:obj=>{if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;if(typeof XMLHttpRequest!=\"undefined\"){throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\")}else if(read_){try{obj.contents=intArrayFromString(read_(obj.url),true);obj.usedBytes=obj.contents.length}catch(e){throw new FS.ErrnoError(29)}}else{throw new Error(\"Cannot load without read() or XMLHttpRequest.\")}},createLazyFile:(parent,name,url,canRead,canWrite)=>{function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open(\"HEAD\",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);var datalength=Number(xhr.getResponseHeader(\"Content-length\"));var header;var hasByteServing=(header=xhr.getResponseHeader(\"Accept-Ranges\"))&&header===\"bytes\";var usesGzip=(header=xhr.getResponseHeader(\"Content-Encoding\"))&&header===\"gzip\";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(from,to)=>{if(from>to)throw new Error(\"invalid range (\"+from+\", \"+to+\") or no bytes requested!\");if(to>datalength-1)throw new Error(\"only \"+datalength+\" bytes available! programmer error!\");var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\"Range\",\"bytes=\"+from+\"-\"+to);xhr.responseType=\"arraybuffer\";if(xhr.overrideMimeType){xhr.overrideMimeType(\"text/plain; charset=x-user-defined\")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error(\"Couldn't load \"+url+\". Status: \"+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}return intArrayFromString(xhr.responseText||\"\",true)};var lazyArray=this;lazyArray.setDataGetter(chunkNum=>{var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==\"undefined\"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==\"undefined\")throw new Error(\"doXHR failed!\");return lazyArray.chunks[chunkNum]});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;out(\"LazyFiles on gzip forces download of the whole file when length is accessed\")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=\"undefined\"){if(!ENVIRONMENT_IS_WORKER)throw\"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._length}},chunkSize:{get:function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize}}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:function(){return this.contents.length}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(key=>{var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){FS.forceLoadFile(node);return fn.apply(null,arguments)}});function writeChunks(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size}stream_ops.read=(stream,buffer,offset,length,position)=>{FS.forceLoadFile(node);return writeChunks(stream,buffer,offset,length,position)};stream_ops.mmap=(stream,length,position,prot,flags)=>{FS.forceLoadFile(node);var ptr=mmapAlloc(length);if(!ptr){throw new FS.ErrnoError(48)}writeChunks(stream,HEAP8,ptr,length,position);return{ptr:ptr,allocated:true}};node.stream_ops=stream_ops;return node},createPreloadedFile:(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish)=>{var fullname=name?PATH_FS.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency(\"cp \"+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}if(Browser.handledByPreloadPlugin(byteArray,fullname,finish,()=>{if(onerror)onerror();removeRunDependency(dep)})){return}finish(byteArray)}addRunDependency(dep);if(typeof url==\"string\"){asyncLoad(url,byteArray=>processData(byteArray),onerror)}else{processData(url)}},indexedDB:()=>{return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:()=>{return\"EM_FS_\"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:\"FILE_DATA\",saveFilesToDB:(paths,onload=(()=>{}),onerror=(()=>{}))=>{var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=()=>{out(\"creating db\");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=()=>{var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],\"readwrite\");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=()=>{ok++;if(ok+fail==total)finish()};putRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},loadFilesFromDB:(paths,onload=(()=>{}),onerror=(()=>{}))=>{var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=()=>{var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],\"readonly\")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach(path=>{var getRequest=files.get(path);getRequest.onsuccess=()=>{if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=()=>{fail++;if(ok+fail==total)finish()}});transaction.onerror=onerror};openRequest.onerror=onerror},absolutePath:()=>{abort(\"FS.absolutePath has been removed; use PATH_FS.resolve instead\")},createFolder:()=>{abort(\"FS.createFolder has been removed; use FS.mkdir instead\")},createLink:()=>{abort(\"FS.createLink has been removed; use FS.symlink instead\")},joinPath:()=>{abort(\"FS.joinPath has been removed; use PATH.join instead\")},mmapAlloc:()=>{abort(\"FS.mmapAlloc has been replaced by the top level function mmapAlloc\")},standardizePath:()=>{abort(\"FS.standardizePath has been removed; use PATH.normalize instead\")}};var SYSCALLS={DEFAULT_POLLMASK:5,calculateAt:function(dirfd,path,allowEmpty){if(PATH.isAbs(path)){return path}var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=SYSCALLS.getStreamFromFD(dirfd);dir=dirstream.path}if(path.length==0){if(!allowEmpty){throw new FS.ErrnoError(44)}return dir}return PATH.join2(dir,path)},doStat:function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-54}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAPU32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;var atime=stat.atime.getTime();var mtime=stat.mtime.getTime();var ctime=stat.ctime.getTime();tempI64=[Math.floor(atime/1e3)>>>0,(tempDouble=Math.floor(atime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+56>>2]=tempI64[0],HEAP32[buf+60>>2]=tempI64[1];HEAPU32[buf+64>>2]=atime%1e3*1e3;tempI64=[Math.floor(mtime/1e3)>>>0,(tempDouble=Math.floor(mtime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+72>>2]=tempI64[0],HEAP32[buf+76>>2]=tempI64[1];HEAPU32[buf+80>>2]=mtime%1e3*1e3;tempI64=[Math.floor(ctime/1e3)>>>0,(tempDouble=Math.floor(ctime/1e3),+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+88>>2]=tempI64[0],HEAP32[buf+92>>2]=tempI64[1];HEAPU32[buf+96>>2]=ctime%1e3*1e3;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[buf+104>>2]=tempI64[0],HEAP32[buf+108>>2]=tempI64[1];return 0},doMsync:function(addr,stream,len,flags,offset){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(43)}if(flags&2){return 0}var buffer=HEAPU8.slice(addr,addr+len);FS.msync(stream,buffer,offset,len,flags)},varargs:undefined,get:function(){assert(SYSCALLS.varargs!=undefined);SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret},getStreamFromFD:function(fd){var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(8);return stream}};function ___syscall__newselect(nfds,readfds,writefds,exceptfds,timeout){try{assert(nfds<=64,\"nfds must be less than or equal to 64\");assert(!exceptfds,\"exceptfds not supported\");var total=0;var srcReadLow=readfds?HEAP32[readfds>>2]:0,srcReadHigh=readfds?HEAP32[readfds+4>>2]:0;var srcWriteLow=writefds?HEAP32[writefds>>2]:0,srcWriteHigh=writefds?HEAP32[writefds+4>>2]:0;var srcExceptLow=exceptfds?HEAP32[exceptfds>>2]:0,srcExceptHigh=exceptfds?HEAP32[exceptfds+4>>2]:0;var dstReadLow=0,dstReadHigh=0;var dstWriteLow=0,dstWriteHigh=0;var dstExceptLow=0,dstExceptHigh=0;var allLow=(readfds?HEAP32[readfds>>2]:0)|(writefds?HEAP32[writefds>>2]:0)|(exceptfds?HEAP32[exceptfds>>2]:0);var allHigh=(readfds?HEAP32[readfds+4>>2]:0)|(writefds?HEAP32[writefds+4>>2]:0)|(exceptfds?HEAP32[exceptfds+4>>2]:0);var check=function(fd,low,high,val){return fd<32?low&val:high&val};for(var fd=0;fd<nfds;fd++){var mask=1<<fd%32;if(!check(fd,allLow,allHigh,mask)){continue}var stream=SYSCALLS.getStreamFromFD(fd);var flags=SYSCALLS.DEFAULT_POLLMASK;if(stream.stream_ops.poll){flags=stream.stream_ops.poll(stream)}if(flags&1&&check(fd,srcReadLow,srcReadHigh,mask)){fd<32?dstReadLow=dstReadLow|mask:dstReadHigh=dstReadHigh|mask;total++}if(flags&4&&check(fd,srcWriteLow,srcWriteHigh,mask)){fd<32?dstWriteLow=dstWriteLow|mask:dstWriteHigh=dstWriteHigh|mask;total++}if(flags&2&&check(fd,srcExceptLow,srcExceptHigh,mask)){fd<32?dstExceptLow=dstExceptLow|mask:dstExceptHigh=dstExceptHigh|mask;total++}}if(readfds){HEAP32[readfds>>2]=dstReadLow;HEAP32[readfds+4>>2]=dstReadHigh}if(writefds){HEAP32[writefds>>2]=dstWriteLow;HEAP32[writefds+4>>2]=dstWriteHigh}if(exceptfds){HEAP32[exceptfds>>2]=dstExceptLow;HEAP32[exceptfds+4>>2]=dstExceptHigh}return total}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_chdir(path){try{path=SYSCALLS.getStr(path);FS.chdir(path);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}var SOCKFS={mount:function(mount){Module[\"websocket\"]=Module[\"websocket\"]&&\"object\"===typeof Module[\"websocket\"]?Module[\"websocket\"]:{};Module[\"websocket\"]._callbacks={};Module[\"websocket\"][\"on\"]=function(event,callback){if(\"function\"===typeof callback){this._callbacks[event]=callback}return this};Module[\"websocket\"].emit=function(event,param){if(\"function\"===typeof this._callbacks[event]){this._callbacks[event].call(this,param)}};return FS.createNode(null,\"/\",16384|511,0)},createSocket:function(family,type,protocol){type&=~526336;var streaming=type==1;if(streaming&&protocol&&protocol!=6){throw new FS.ErrnoError(66)}var sock={family:family,type:type,protocol:protocol,server:null,error:null,peers:{},pending:[],recv_queue:[],sock_ops:SOCKFS.websocket_sock_ops};var name=SOCKFS.nextname();var node=FS.createNode(SOCKFS.root,name,49152,0);node.sock=sock;var stream=FS.createStream({path:name,node:node,flags:2,seekable:false,stream_ops:SOCKFS.stream_ops});sock.stream=stream;return sock},getSocket:function(fd){var stream=FS.getStream(fd);if(!stream||!FS.isSocket(stream.node.mode)){return null}return stream.node.sock},stream_ops:{poll:function(stream){var sock=stream.node.sock;return sock.sock_ops.poll(sock)},ioctl:function(stream,request,varargs){var sock=stream.node.sock;return sock.sock_ops.ioctl(sock,request,varargs)},read:function(stream,buffer,offset,length,position){var sock=stream.node.sock;var msg=sock.sock_ops.recvmsg(sock,length);if(!msg){return 0}buffer.set(msg.buffer,offset);return msg.buffer.length},write:function(stream,buffer,offset,length,position){var sock=stream.node.sock;return sock.sock_ops.sendmsg(sock,buffer,offset,length)},close:function(stream){var sock=stream.node.sock;sock.sock_ops.close(sock)}},nextname:function(){if(!SOCKFS.nextname.current){SOCKFS.nextname.current=0}return\"socket[\"+SOCKFS.nextname.current+++\"]\"},websocket_sock_ops:{createPeer:function(sock,addr,port){var ws;if(typeof addr==\"object\"){ws=addr;addr=null;port=null}if(ws){if(ws._socket){addr=ws._socket.remoteAddress;port=ws._socket.remotePort}else{var result=/ws[s]?:\\/\\/([^:]+):(\\d+)/.exec(ws.url);if(!result){throw new Error(\"WebSocket URL must be in the format ws(s)://address:port\")}addr=result[1];port=parseInt(result[2],10)}}else{try{var runtimeConfig=Module[\"websocket\"]&&\"object\"===typeof Module[\"websocket\"];var url=\"ws:#\".replace(\"#\",\"//\");if(runtimeConfig){if(\"string\"===typeof Module[\"websocket\"][\"url\"]){url=Module[\"websocket\"][\"url\"]}}if(url===\"ws://\"||url===\"wss://\"){var parts=addr.split(\"/\");url=url+parts[0]+\":\"+port+\"/\"+parts.slice(1).join(\"/\")}var subProtocols=\"binary\";if(runtimeConfig){if(\"string\"===typeof Module[\"websocket\"][\"subprotocol\"]){subProtocols=Module[\"websocket\"][\"subprotocol\"]}}var opts=undefined;if(subProtocols!==\"null\"){subProtocols=subProtocols.replace(/^ +| +$/g,\"\").split(/ *, */);opts=subProtocols}if(runtimeConfig&&null===Module[\"websocket\"][\"subprotocol\"]){subProtocols=\"null\";opts=undefined}var WebSocketConstructor;if(ENVIRONMENT_IS_NODE){WebSocketConstructor=require(\"ws\")}else{WebSocketConstructor=WebSocket}ws=new WebSocketConstructor(url,opts);ws.binaryType=\"arraybuffer\"}catch(e){throw new FS.ErrnoError(23)}}var peer={addr:addr,port:port,socket:ws,dgram_send_queue:[]};SOCKFS.websocket_sock_ops.addPeer(sock,peer);SOCKFS.websocket_sock_ops.handlePeerEvents(sock,peer);if(sock.type===2&&typeof sock.sport!=\"undefined\"){peer.dgram_send_queue.push(new Uint8Array([255,255,255,255,\"p\".charCodeAt(0),\"o\".charCodeAt(0),\"r\".charCodeAt(0),\"t\".charCodeAt(0),(sock.sport&65280)>>8,sock.sport&255]))}return peer},getPeer:function(sock,addr,port){return sock.peers[addr+\":\"+port]},addPeer:function(sock,peer){sock.peers[peer.addr+\":\"+peer.port]=peer},removePeer:function(sock,peer){delete sock.peers[peer.addr+\":\"+peer.port]},handlePeerEvents:function(sock,peer){var first=true;var handleOpen=function(){Module[\"websocket\"].emit(\"open\",sock.stream.fd);try{var queued=peer.dgram_send_queue.shift();while(queued){peer.socket.send(queued);queued=peer.dgram_send_queue.shift()}}catch(e){peer.socket.close()}};function handleMessage(data){if(typeof data==\"string\"){var encoder=new TextEncoder;data=encoder.encode(data)}else{assert(data.byteLength!==undefined);if(data.byteLength==0){return}data=new Uint8Array(data)}var wasfirst=first;first=false;if(wasfirst&&data.length===10&&data[0]===255&&data[1]===255&&data[2]===255&&data[3]===255&&data[4]===\"p\".charCodeAt(0)&&data[5]===\"o\".charCodeAt(0)&&data[6]===\"r\".charCodeAt(0)&&data[7]===\"t\".charCodeAt(0)){var newport=data[8]<<8|data[9];SOCKFS.websocket_sock_ops.removePeer(sock,peer);peer.port=newport;SOCKFS.websocket_sock_ops.addPeer(sock,peer);return}sock.recv_queue.push({addr:peer.addr,port:peer.port,data:data});Module[\"websocket\"].emit(\"message\",sock.stream.fd)}if(ENVIRONMENT_IS_NODE){peer.socket.on(\"open\",handleOpen);peer.socket.on(\"message\",function(data,isBinary){if(!isBinary){return}handleMessage(new Uint8Array(data).buffer)});peer.socket.on(\"close\",function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd)});peer.socket.on(\"error\",function(error){sock.error=14;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"ECONNREFUSED: Connection refused\"])})}else{peer.socket.onopen=handleOpen;peer.socket.onclose=function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd)};peer.socket.onmessage=function peer_socket_onmessage(event){handleMessage(event.data)};peer.socket.onerror=function(error){sock.error=14;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"ECONNREFUSED: Connection refused\"])}}},poll:function(sock){if(sock.type===1&&sock.server){return sock.pending.length?64|1:0}var mask=0;var dest=sock.type===1?SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport):null;if(sock.recv_queue.length||!dest||dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=64|1}if(!dest||dest&&dest.socket.readyState===dest.socket.OPEN){mask|=4}if(dest&&dest.socket.readyState===dest.socket.CLOSING||dest&&dest.socket.readyState===dest.socket.CLOSED){mask|=16}return mask},ioctl:function(sock,request,arg){switch(request){case 21531:var bytes=0;if(sock.recv_queue.length){bytes=sock.recv_queue[0].data.length}HEAP32[arg>>2]=bytes;return 0;default:return 28}},close:function(sock){if(sock.server){try{sock.server.close()}catch(e){}sock.server=null}var peers=Object.keys(sock.peers);for(var i=0;i<peers.length;i++){var peer=sock.peers[peers[i]];try{peer.socket.close()}catch(e){}SOCKFS.websocket_sock_ops.removePeer(sock,peer)}return 0},bind:function(sock,addr,port){if(typeof sock.saddr!=\"undefined\"||typeof sock.sport!=\"undefined\"){throw new FS.ErrnoError(28)}sock.saddr=addr;sock.sport=port;if(sock.type===2){if(sock.server){sock.server.close();sock.server=null}try{sock.sock_ops.listen(sock,0)}catch(e){if(!(e instanceof FS.ErrnoError))throw e;if(e.errno!==138)throw e}}},connect:function(sock,addr,port){if(sock.server){throw new FS.ErrnoError(138)}if(typeof sock.daddr!=\"undefined\"&&typeof sock.dport!=\"undefined\"){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(dest){if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(7)}else{throw new FS.ErrnoError(30)}}}var peer=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port);sock.daddr=peer.addr;sock.dport=peer.port;throw new FS.ErrnoError(26)},listen:function(sock,backlog){if(!ENVIRONMENT_IS_NODE){throw new FS.ErrnoError(138)}if(sock.server){throw new FS.ErrnoError(28)}var WebSocketServer=require(\"ws\").Server;var host=sock.saddr;sock.server=new WebSocketServer({host:host,port:sock.sport});Module[\"websocket\"].emit(\"listen\",sock.stream.fd);sock.server.on(\"connection\",function(ws){if(sock.type===1){var newsock=SOCKFS.createSocket(sock.family,sock.type,sock.protocol);var peer=SOCKFS.websocket_sock_ops.createPeer(newsock,ws);newsock.daddr=peer.addr;newsock.dport=peer.port;sock.pending.push(newsock);Module[\"websocket\"].emit(\"connection\",newsock.stream.fd)}else{SOCKFS.websocket_sock_ops.createPeer(sock,ws);Module[\"websocket\"].emit(\"connection\",sock.stream.fd)}});sock.server.on(\"close\",function(){Module[\"websocket\"].emit(\"close\",sock.stream.fd);sock.server=null});sock.server.on(\"error\",function(error){sock.error=23;Module[\"websocket\"].emit(\"error\",[sock.stream.fd,sock.error,\"EHOSTUNREACH: Host is unreachable\"])})},accept:function(listensock){if(!listensock.server||!listensock.pending.length){throw new FS.ErrnoError(28)}var newsock=listensock.pending.shift();newsock.stream.flags=listensock.stream.flags;return newsock},getname:function(sock,peer){var addr,port;if(peer){if(sock.daddr===undefined||sock.dport===undefined){throw new FS.ErrnoError(53)}addr=sock.daddr;port=sock.dport}else{addr=sock.saddr||0;port=sock.sport||0}return{addr:addr,port:port}},sendmsg:function(sock,buffer,offset,length,addr,port){if(sock.type===2){if(addr===undefined||port===undefined){addr=sock.daddr;port=sock.dport}if(addr===undefined||port===undefined){throw new FS.ErrnoError(17)}}else{addr=sock.daddr;port=sock.dport}var dest=SOCKFS.websocket_sock_ops.getPeer(sock,addr,port);if(sock.type===1){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){throw new FS.ErrnoError(53)}else if(dest.socket.readyState===dest.socket.CONNECTING){throw new FS.ErrnoError(6)}}if(ArrayBuffer.isView(buffer)){offset+=buffer.byteOffset;buffer=buffer.buffer}var data;data=buffer.slice(offset,offset+length);if(sock.type===2){if(!dest||dest.socket.readyState!==dest.socket.OPEN){if(!dest||dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){dest=SOCKFS.websocket_sock_ops.createPeer(sock,addr,port)}dest.dgram_send_queue.push(data);return length}}try{dest.socket.send(data);return length}catch(e){throw new FS.ErrnoError(28)}},recvmsg:function(sock,length){if(sock.type===1&&sock.server){throw new FS.ErrnoError(53)}var queued=sock.recv_queue.shift();if(!queued){if(sock.type===1){var dest=SOCKFS.websocket_sock_ops.getPeer(sock,sock.daddr,sock.dport);if(!dest){throw new FS.ErrnoError(53)}if(dest.socket.readyState===dest.socket.CLOSING||dest.socket.readyState===dest.socket.CLOSED){return null}throw new FS.ErrnoError(6)}throw new FS.ErrnoError(6)}var queuedLength=queued.data.byteLength||queued.data.length;var queuedOffset=queued.data.byteOffset||0;var queuedBuffer=queued.data.buffer||queued.data;var bytesRead=Math.min(length,queuedLength);var res={buffer:new Uint8Array(queuedBuffer,queuedOffset,bytesRead),addr:queued.addr,port:queued.port};if(sock.type===1&&bytesRead<queuedLength){var bytesRemaining=queuedLength-bytesRead;queued.data=new Uint8Array(queuedBuffer,queuedOffset+bytesRead,bytesRemaining);sock.recv_queue.unshift(queued)}return res}}};function getSocketFromFD(fd){var socket=SOCKFS.getSocket(fd);if(!socket)throw new FS.ErrnoError(8);return socket}function setErrNo(value){HEAP32[___errno_location()>>2]=value;return value}function inetNtop4(addr){return(addr&255)+\".\"+(addr>>8&255)+\".\"+(addr>>16&255)+\".\"+(addr>>24&255)}function inetNtop6(ints){var str=\"\";var word=0;var longest=0;var lastzero=0;var zstart=0;var len=0;var i=0;var parts=[ints[0]&65535,ints[0]>>16,ints[1]&65535,ints[1]>>16,ints[2]&65535,ints[2]>>16,ints[3]&65535,ints[3]>>16];var hasipv4=true;var v4part=\"\";for(i=0;i<5;i++){if(parts[i]!==0){hasipv4=false;break}}if(hasipv4){v4part=inetNtop4(parts[6]|parts[7]<<16);if(parts[5]===-1){str=\"::ffff:\";str+=v4part;return str}if(parts[5]===0){str=\"::\";if(v4part===\"0.0.0.0\")v4part=\"\";if(v4part===\"0.0.0.1\")v4part=\"1\";str+=v4part;return str}}for(word=0;word<8;word++){if(parts[word]===0){if(word-lastzero>1){len=0}lastzero=word;len++}if(len>longest){longest=len;zstart=word-longest+1}}for(word=0;word<8;word++){if(longest>1){if(parts[word]===0&&word>=zstart&&word<zstart+longest){if(word===zstart){str+=\":\";if(zstart===0)str+=\":\"}continue}}str+=Number(_ntohs(parts[word]&65535)).toString(16);str+=word<7?\":\":\"\"}return str}function readSockaddr(sa,salen){var family=HEAP16[sa>>1];var port=_ntohs(HEAPU16[sa+2>>1]);var addr;switch(family){case 2:if(salen!==16){return{errno:28}}addr=HEAP32[sa+4>>2];addr=inetNtop4(addr);break;case 10:if(salen!==28){return{errno:28}}addr=[HEAP32[sa+8>>2],HEAP32[sa+12>>2],HEAP32[sa+16>>2],HEAP32[sa+20>>2]];addr=inetNtop6(addr);break;default:return{errno:5}}return{family:family,addr:addr,port:port}}function inetPton4(str){var b=str.split(\".\");for(var i=0;i<4;i++){var tmp=Number(b[i]);if(isNaN(tmp))return null;b[i]=tmp}return(b[0]|b[1]<<8|b[2]<<16|b[3]<<24)>>>0}function jstoi_q(str){return parseInt(str)}function inetPton6(str){var words;var w,offset,z;var valid6regx=/^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/i;var parts=[];if(!valid6regx.test(str)){return null}if(str===\"::\"){return[0,0,0,0,0,0,0,0]}if(str.startsWith(\"::\")){str=str.replace(\"::\",\"Z:\")}else{str=str.replace(\"::\",\":Z:\")}if(str.indexOf(\".\")>0){str=str.replace(new RegExp(\"[.]\",\"g\"),\":\");words=str.split(\":\");words[words.length-4]=jstoi_q(words[words.length-4])+jstoi_q(words[words.length-3])*256;words[words.length-3]=jstoi_q(words[words.length-2])+jstoi_q(words[words.length-1])*256;words=words.slice(0,words.length-2)}else{words=str.split(\":\")}offset=0;z=0;for(w=0;w<words.length;w++){if(typeof words[w]==\"string\"){if(words[w]===\"Z\"){for(z=0;z<8-words.length+1;z++){parts[w+z]=0}offset=z-1}else{parts[w+offset]=_htons(parseInt(words[w],16))}}else{parts[w+offset]=words[w]}}return[parts[1]<<16|parts[0],parts[3]<<16|parts[2],parts[5]<<16|parts[4],parts[7]<<16|parts[6]]}var DNS={address_map:{id:1,addrs:{},names:{}},lookup_name:function(name){var res=inetPton4(name);if(res!==null){return name}res=inetPton6(name);if(res!==null){return name}var addr;if(DNS.address_map.addrs[name]){addr=DNS.address_map.addrs[name]}else{var id=DNS.address_map.id++;assert(id<65535,\"exceeded max address mappings of 65535\");addr=\"172.29.\"+(id&255)+\".\"+(id&65280);DNS.address_map.names[addr]=name;DNS.address_map.addrs[name]=addr}return addr},lookup_addr:function(addr){if(DNS.address_map.names[addr]){return DNS.address_map.names[addr]}return null}};function getSocketAddress(addrp,addrlen,allowNull){if(allowNull&&addrp===0)return null;var info=readSockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}function ___syscall_connect(fd,addr,addrlen){try{var sock=getSocketFromFD(fd);var info=getSocketAddress(addr,addrlen);sock.sock_ops.connect(sock,info.addr,info.port);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_fcntl64(fd,cmd,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(cmd){case 0:{var arg=SYSCALLS.get();if(arg<0){return-28}var newStream;newStream=FS.createStream(stream,arg);return newStream.fd}case 1:case 2:return 0;case 3:return stream.flags;case 4:{var arg=SYSCALLS.get();stream.flags|=arg;return 0}case 5:{var arg=SYSCALLS.get();var offset=0;HEAP16[arg+offset>>1]=2;return 0}case 6:case 7:return 0;case 16:case 8:return-28;case 9:setErrNo(28);return-1;default:{return-28}}}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_getcwd(buf,size){try{if(size===0)return-28;var cwd=FS.cwd();var cwdLengthInBytes=lengthBytesUTF8(cwd)+1;if(size<cwdLengthInBytes)return-68;stringToUTF8(cwd,buf,size);return cwdLengthInBytes}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_ioctl(fd,op,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(fd);switch(op){case 21509:case 21505:{if(!stream.tty)return-59;return 0}case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-59;return 0}case 21519:{if(!stream.tty)return-59;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0}case 21520:{if(!stream.tty)return-59;return-28}case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)}case 21523:{if(!stream.tty)return-59;return 0}case 21524:{if(!stream.tty)return-59;return 0}default:return-28}}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_mkdirat(dirfd,path,mode){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);path=PATH.normalize(path);if(path[path.length-1]===\"/\")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_openat(dirfd,path,flags,varargs){SYSCALLS.varargs=varargs;try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);var mode=varargs?SYSCALLS.get():0;return FS.open(path,flags,mode).fd}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_readlinkat(dirfd,path,buf,bufsize){try{path=SYSCALLS.getStr(path);path=SYSCALLS.calculateAt(dirfd,path);if(bufsize<=0)return-28;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}function ___syscall_socket(domain,type,protocol){try{var sock=SOCKFS.createSocket(domain,type,protocol);assert(sock.stream.fd<64);return sock.stream.fd}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return-e.errno}}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAP32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}return name}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return function(){\"use strict\";return body.apply(this,arguments)}}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(field=>field.getterReturnType).concat(fieldRecords.map(field=>field.setterArgumentType));whenDependentTypesAreResolved([structType],fieldTypes,fieldTypes=>{var fields={};fieldRecords.forEach((field,i)=>{var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:ptr=>{return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:(ptr,o)=>{var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError('Missing field:  \"'+fieldName+'\"')}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function __embind_register_bigint(primitiveType,name,size,minRange,maxRange){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options={}){if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}var finalizationRegistry=false;function detachFinalizer(handle){}function runDestructor($$){if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function releaseClassHandle($$){$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}var registeredPointers={};function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}var delayFunction=undefined;function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record}}))}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function attachFinalizer(handle){if(\"undefined\"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{console.warn(info.leakWarning.stack.replace(/^Error: /,\"\"));releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$:$$};var cls=$$.ptrType.registeredClass;info.leakWarning=new Error(\"Embind found a leaked C++ instance \"+cls.name+\" <\"+ptrToString($$.ptr)+\">.\\n\"+\"We'll free it automatically in this case, but this functionality is not reliable across various environments.\\n\"+\"Make sure to invoke .delete() manually once you're done with the instance instead.\\n\"+\"Originally allocated\");if(\"captureStackTrace\"in Error){Error.captureStackTrace(info.leakWarning,RegisteredPointer_fromWireType)}finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,Emval.toHandle(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+embindRepr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function dynCallLegacy(sig,ptr,args){assert(\"dynCall_\"+sig in Module,\"bad function pointer type - dynCall function not found for sig '\"+sig+\"'\");if(args&&args.length){assert(args.length===sig.substring(1).replace(/j/g,\"--\").length)}else{assert(sig.length==1)}var f=Module[\"dynCall_\"+sig];return args&&args.length?f.apply(null,[ptr].concat(args)):f.call(null,ptr)}var wasmTableMirror=[];function getWasmTableEntry(funcPtr){var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}assert(wasmTable.get(funcPtr)==func,\"JavaScript-side Wasm function table mirror is out of date!\");return func}function dynCall(sig,ptr,args){if(sig.includes(\"j\")){return dynCallLegacy(sig,ptr,args)}assert(getWasmTableEntry(ptr),\"missing table entry in dynCall: \"+ptr);var rtn=getWasmTableEntry(ptr).apply(null,args);return rtn}function getDynCaller(sig,ptr){assert(sig.includes(\"j\")||sig.includes(\"p\"),\"getDynCaller should only be called with i64 sigs\");var argCache=[];return function(){argCache.length=0;Object.assign(argCache,arguments);return dynCall(sig,ptr,argCache)}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes(\"j\")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!=\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var expectedArgCount=argCount-2;var argsWired=new Array(expectedArgCount);var invokerFuncArgs=[];var destructors=[];return function(){if(arguments.length!==expectedArgCount){throwBindingError(\"function \"+humanName+\" called with \"+arguments.length+\" arguments, expected \"+expectedArgCount+\" args!\")}destructors.length=0;var thisWired;invokerFuncArgs.length=isClassMethodFunc?2:1;invokerFuncArgs[0]=cppTargetFunc;if(isClassMethodFunc){thisWired=argTypes[1][\"toWireType\"](destructors,this);invokerFuncArgs[1]=thisWired}for(var i=0;i<expectedArgCount;++i){argsWired[i]=argTypes[i+2][\"toWireType\"](destructors,arguments[i]);invokerFuncArgs.push(argsWired[i])}var rv=cppInvokerFunc.apply(null,invokerFuncArgs);function onDone(rv){if(needsDestructorStack){runDestructors(destructors)}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;i++){var param=i===1?thisWired:argsWired[i-2];if(argTypes[i].destructorFunction!==null){argTypes[i].destructorFunction(param)}}}if(returns){return argTypes[0][\"fromWireType\"](rv)}}return onDone(rv)}}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array}function __embind_register_class_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,fn){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}var proto=classType.registeredClass.constructor;if(undefined===proto[methodName]){unboundTypesHandler.argCount=argCount-1;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-1]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));var func=craftInvokerFunction(humanName,invokerArgsArray,null,rawInvoker,fn);if(undefined===proto[methodName].overloadTable){func.argCount=argCount-1;proto[methodName]=func}else{proto[methodName].overloadTable[argCount-1]=func}return[]});return[]})}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){assert(argCount>0);var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(methodName.startsWith(\"@@\")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}var Emval={toValue:handle=>{if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value},toHandle:value=>{switch(value){case undefined:return 1;case null:return 2;case true:return 3;case false:return 4;default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}};function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=Emval.toValue(handle);__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return Emval.toHandle(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function embindRepr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!=\"number\"&&typeof value!=\"boolean\"){throw new TypeError('Cannot convert \"'+embindRepr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes(\"unsigned\");var checkAssertions=(value,toTypeName)=>{if(typeof value!=\"number\"&&typeof value!=\"boolean\"){throw new TypeError('Cannot convert \"'+embindRepr(value)+'\" to '+toTypeName)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+embindRepr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":toWireType,\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value==\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}var UTF16Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;function UTF16ToString(ptr,maxBytesToRead){assert(ptr%2==0,\"Pointer passed to UTF16ToString must be aligned to two bytes!\");var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str=\"\";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str}function stringToUTF16(str,outPtr,maxBytesToWrite){assert(outPtr%2==0,\"Pointer passed to stringToUTF16 must be aligned to two bytes!\");assert(typeof maxBytesToWrite==\"number\",\"stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr}function lengthBytesUTF16(str){return str.length*2}function UTF32ToString(ptr,maxBytesToRead){assert(ptr%4==0,\"Pointer passed to UTF32ToString must be aligned to four bytes!\");var i=0;var str=\"\";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str}function stringToUTF32(str,outPtr,maxBytesToWrite){assert(outPtr%4==0,\"Pointer passed to stringToUTF32 must be aligned to four bytes!\");assert(typeof maxBytesToWrite==\"number\",\"stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!\");if(maxBytesToWrite===undefined){maxBytesToWrite=2147483647}if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr}function lengthBytesUTF32(str){var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var decodeString,encodeString,getHeap,lengthBytesUTF,shift;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;getHeap=()=>HEAPU16;shift=1}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;getHeap=()=>HEAPU32;shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var HEAP=getHeap();var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||HEAP[currentBytePtr>>shift]==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},\"toWireType\":function(destructors,value){if(!(typeof value==\"string\")){throwBindingError(\"Cannot pass non-string to C++ string type \"+name)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length>>shift;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,arg){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](arg);return Emval.toHandle(v)}function readI53FromI64(ptr){return HEAPU32[ptr>>2]+HEAP32[ptr+4>>2]*4294967296}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}var __MONTH_DAYS_LEAP_CUMULATIVE=[0,31,60,91,121,152,182,213,244,274,305,335];var __MONTH_DAYS_REGULAR_CUMULATIVE=[0,31,59,90,120,151,181,212,243,273,304,334];function __yday_from_date(date){var isLeapYear=__isLeapYear(date.getFullYear());var monthDaysCumulative=isLeapYear?__MONTH_DAYS_LEAP_CUMULATIVE:__MONTH_DAYS_REGULAR_CUMULATIVE;var yday=monthDaysCumulative[date.getMonth()]+date.getDate()-1;return yday}function __localtime_js(time,tmPtr){var date=new Date(readI53FromI64(time)*1e3);HEAP32[tmPtr>>2]=date.getSeconds();HEAP32[tmPtr+4>>2]=date.getMinutes();HEAP32[tmPtr+8>>2]=date.getHours();HEAP32[tmPtr+12>>2]=date.getDate();HEAP32[tmPtr+16>>2]=date.getMonth();HEAP32[tmPtr+20>>2]=date.getFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getDay();var yday=__yday_from_date(date)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+36>>2]=-(date.getTimezoneOffset()*60);var start=new Date(date.getFullYear(),0,1);var summerOffset=new Date(date.getFullYear(),6,1).getTimezoneOffset();var winterOffset=start.getTimezoneOffset();var dst=(summerOffset!=winterOffset&&date.getTimezoneOffset()==Math.min(winterOffset,summerOffset))|0;HEAP32[tmPtr+32>>2]=dst}function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function __tzset_js(timezone,daylight,tzname){var currentYear=(new Date).getFullYear();var winter=new Date(currentYear,0,1);var summer=new Date(currentYear,6,1);var winterOffset=winter.getTimezoneOffset();var summerOffset=summer.getTimezoneOffset();var stdTimezoneOffset=Math.max(winterOffset,summerOffset);HEAPU32[timezone>>2]=stdTimezoneOffset*60;HEAP32[daylight>>2]=Number(winterOffset!=summerOffset);function extractZone(date){var match=date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);return match?match[1]:\"GMT\"}var winterName=extractZone(winter);var summerName=extractZone(summer);var winterNamePtr=allocateUTF8(winterName);var summerNamePtr=allocateUTF8(summerName);if(summerOffset<winterOffset){HEAPU32[tzname>>2]=winterNamePtr;HEAPU32[tzname+4>>2]=summerNamePtr}else{HEAPU32[tzname>>2]=summerNamePtr;HEAPU32[tzname+4>>2]=winterNamePtr}}function _abort(){abort(\"native code called abort()\")}var readEmAsmArgsArray=[];function readEmAsmArgs(sigPtr,buf){assert(Array.isArray(readEmAsmArgsArray));assert(buf%16==0);readEmAsmArgsArray.length=0;var ch;buf>>=2;while(ch=HEAPU8[sigPtr++]){var chr=String.fromCharCode(ch);var validChars=[\"d\",\"f\",\"i\"];assert(validChars.includes(chr),\"Invalid character \"+ch+'(\"'+chr+'\") in readEmAsmArgs! Use only ['+validChars+'], and do not specify \"v\" for void return argument.');buf+=ch!=105&buf;readEmAsmArgsArray.push(ch==105?HEAP32[buf]:HEAPF64[buf++>>1]);++buf}return readEmAsmArgsArray}function runEmAsmFunction(code,sigPtr,argbuf){var args=readEmAsmArgs(sigPtr,argbuf);if(!ASM_CONSTS.hasOwnProperty(code))abort(\"No EM_ASM constant found at address \"+code);return ASM_CONSTS[code].apply(null,args)}function _emscripten_asm_const_int(code,sigPtr,argbuf){return runEmAsmFunction(code,sigPtr,argbuf)}function _emscripten_date_now(){return Date.now()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){var b=wasmMemory.buffer;try{wasmMemory.grow(size-b.byteLength+65535>>>16);updateMemoryViews();return 1}catch(e){err(\"emscripten_realloc_buffer: Attempted to grow heap from \"+b.byteLength+\" bytes to \"+size+\" bytes, but got error: \"+e)}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;assert(requestedSize>oldSize);var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){err(\"Cannot enlarge memory, asked to go up to \"+requestedSize+\" bytes, but the limit is \"+maxHeapSize+\" bytes!\");return false}let alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}err(\"Failed to grow the heap from \"+oldSize+\" bytes to \"+newSize+\" bytes, not enough memory!\");return false}var ENV={};function getExecutableName(){return thisProgram||\"./this.program\"}function getEnvStrings(){if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={\"USER\":\"web_user\",\"LOGNAME\":\"web_user\",\"PATH\":\"/\",\"PWD\":\"/\",\"HOME\":\"/home/web_user\",\"LANG\":lang,\"_\":getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(x+\"=\"+env[x])}getEnvStrings.strings=strings}return getEnvStrings.strings}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){assert(str.charCodeAt(i)===(str.charCodeAt(i)&255));HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}function _environ_get(__environ,environ_buf){var bufSize=0;getEnvStrings().forEach(function(string,i){var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;writeAsciiToMemory(string,ptr);bufSize+=string.length+1});return 0}function _environ_sizes_get(penviron_count,penviron_buf_size){var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(function(string){bufSize+=string.length+1});HEAPU32[penviron_buf_size>>2]=bufSize;return 0}function _fd_close(fd){try{var stream=SYSCALLS.getStreamFromFD(fd);FS.close(stream);return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function _fd_fdstat_get(fd,pbuf){try{var stream=SYSCALLS.getStreamFromFD(fd);var type=stream.tty?2:FS.isDir(stream.mode)?3:FS.isLink(stream.mode)?7:4;HEAP8[pbuf>>0]=type;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doReadv(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break;if(typeof offset!==\"undefined\"){offset+=curr}}return ret}function _fd_read(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doReadv(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function convertI32PairToI53Checked(lo,hi){assert(lo==lo>>>0||lo==(lo|0));assert(hi===(hi|0));return hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN}function _fd_seek(fd,offset_low,offset_high,whence,newOffset){try{var offset=convertI32PairToI53Checked(offset_low,offset_high);if(isNaN(offset))return 61;var stream=SYSCALLS.getStreamFromFD(fd);FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math.abs(tempDouble)>=1?tempDouble>0?(Math.min(+Math.floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[newOffset>>2]=tempI64[0],HEAP32[newOffset+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function doWritev(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(typeof offset!==\"undefined\"){offset+=curr}}return ret}function _fd_write(fd,iov,iovcnt,pnum){try{var stream=SYSCALLS.getStreamFromFD(fd);var num=doWritev(stream,iov,iovcnt);HEAPU32[pnum>>2]=num;return 0}catch(e){if(typeof FS==\"undefined\"||!(e instanceof FS.ErrnoError))throw e;return e.errno}}function getHostByName(name){var ret=_malloc(20);var nameBuf=_malloc(name.length+1);stringToUTF8(name,nameBuf,name.length+1);HEAPU32[ret>>2]=nameBuf;var aliasesBuf=_malloc(4);HEAPU32[aliasesBuf>>2]=0;HEAPU32[ret+4>>2]=aliasesBuf;var afinet=2;HEAP32[ret+8>>2]=afinet;HEAP32[ret+12>>2]=4;var addrListBuf=_malloc(12);HEAPU32[addrListBuf>>2]=addrListBuf+8;HEAPU32[addrListBuf+4>>2]=0;HEAP32[addrListBuf+8>>2]=inetPton4(DNS.lookup_name(name));HEAPU32[ret+16>>2]=addrListBuf;return ret}function _gethostbyname(name){return getHostByName(UTF8ToString(name))}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){}return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function writeArrayToMemory(array,buffer){assert(array.length>=0,\"writeArrayToMemory array must have a length (should be an array or typed array)\");HEAP8.set(array,buffer)}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):\"\"};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_1[rule])}var WEEKDAYS=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var MONTHS=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];function leadingSomething(value,digits,character){var str=typeof value==\"number\"?value.toString():value||\"\";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,\"0\")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}return thisDate.getFullYear()}return thisDate.getFullYear()-1}var EXPANSION_RULES_2={\"%a\":function(date){return WEEKDAYS[date.tm_wday].substring(0,3)},\"%A\":function(date){return WEEKDAYS[date.tm_wday]},\"%b\":function(date){return MONTHS[date.tm_mon].substring(0,3)},\"%B\":function(date){return MONTHS[date.tm_mon]},\"%C\":function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)},\"%d\":function(date){return leadingNulls(date.tm_mday,2)},\"%e\":function(date){return leadingSomething(date.tm_mday,2,\" \")},\"%g\":function(date){return getWeekBasedYear(date).toString().substring(2)},\"%G\":function(date){return getWeekBasedYear(date)},\"%H\":function(date){return leadingNulls(date.tm_hour,2)},\"%I\":function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)},\"%j\":function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)},\"%m\":function(date){return leadingNulls(date.tm_mon+1,2)},\"%M\":function(date){return leadingNulls(date.tm_min,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(date){if(date.tm_hour>=0&&date.tm_hour<12){return\"AM\"}return\"PM\"},\"%S\":function(date){return leadingNulls(date.tm_sec,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(date){return date.tm_wday||7},\"%U\":function(date){var days=date.tm_yday+7-date.tm_wday;return leadingNulls(Math.floor(days/7),2)},\"%V\":function(date){var val=Math.floor((date.tm_yday+7-(date.tm_wday+6)%7)/7);if((date.tm_wday+371-date.tm_yday-2)%7<=2){val++}if(!val){val=52;var dec31=(date.tm_wday+7-date.tm_yday-1)%7;if(dec31==4||dec31==5&&__isLeapYear(date.tm_year%400-1)){val++}}else if(val==53){var jan1=(date.tm_wday+371-date.tm_yday)%7;if(jan1!=4&&(jan1!=3||!__isLeapYear(date.tm_year)))val=1}return leadingNulls(val,2)},\"%w\":function(date){return date.tm_wday},\"%W\":function(date){var days=date.tm_yday+7-(date.tm_wday+6)%7;return leadingNulls(Math.floor(days/7),2)},\"%y\":function(date){return(date.tm_year+1900).toString().substring(2)},\"%Y\":function(date){return date.tm_year+1900},\"%z\":function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?\"+\":\"-\")+String(\"0000\"+off).slice(-4)},\"%Z\":function(date){return date.tm_zone},\"%%\":function(){return\"%\"}};pattern=pattern.replace(/%%/g,\"\\0\\0\");for(var rule in EXPANSION_RULES_2){if(pattern.includes(rule)){pattern=pattern.replace(new RegExp(rule,\"g\"),EXPANSION_RULES_2[rule](date))}}pattern=pattern.replace(/\\0\\0/g,\"%\");var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm,loc){return _strftime(s,maxsize,format,tm)}var FSNode=function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev};var readMode=292|73;var writeMode=146;Object.defineProperties(FSNode.prototype,{read:{get:function(){return(this.mode&readMode)===readMode},set:function(val){val?this.mode|=readMode:this.mode&=~readMode}},write:{get:function(){return(this.mode&writeMode)===writeMode},set:function(val){val?this.mode|=writeMode:this.mode&=~writeMode}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}});FS.FSNode=FSNode;FS.staticInit();Module[\"FS_createPath\"]=FS.createPath;Module[\"FS_createDataFile\"]=FS.createDataFile;Module[\"FS_createPreloadedFile\"]=FS.createPreloadedFile;Module[\"FS_unlink\"]=FS.unlink;Module[\"FS_createLazyFile\"]=FS.createLazyFile;Module[\"FS_createDevice\"]=FS.createDevice;ERRNO_CODES={\"EPERM\":63,\"ENOENT\":44,\"ESRCH\":71,\"EINTR\":27,\"EIO\":29,\"ENXIO\":60,\"E2BIG\":1,\"ENOEXEC\":45,\"EBADF\":8,\"ECHILD\":12,\"EAGAIN\":6,\"EWOULDBLOCK\":6,\"ENOMEM\":48,\"EACCES\":2,\"EFAULT\":21,\"ENOTBLK\":105,\"EBUSY\":10,\"EEXIST\":20,\"EXDEV\":75,\"ENODEV\":43,\"ENOTDIR\":54,\"EISDIR\":31,\"EINVAL\":28,\"ENFILE\":41,\"EMFILE\":33,\"ENOTTY\":59,\"ETXTBSY\":74,\"EFBIG\":22,\"ENOSPC\":51,\"ESPIPE\":70,\"EROFS\":69,\"EMLINK\":34,\"EPIPE\":64,\"EDOM\":18,\"ERANGE\":68,\"ENOMSG\":49,\"EIDRM\":24,\"ECHRNG\":106,\"EL2NSYNC\":156,\"EL3HLT\":107,\"EL3RST\":108,\"ELNRNG\":109,\"EUNATCH\":110,\"ENOCSI\":111,\"EL2HLT\":112,\"EDEADLK\":16,\"ENOLCK\":46,\"EBADE\":113,\"EBADR\":114,\"EXFULL\":115,\"ENOANO\":104,\"EBADRQC\":103,\"EBADSLT\":102,\"EDEADLOCK\":16,\"EBFONT\":101,\"ENOSTR\":100,\"ENODATA\":116,\"ETIME\":117,\"ENOSR\":118,\"ENONET\":119,\"ENOPKG\":120,\"EREMOTE\":121,\"ENOLINK\":47,\"EADV\":122,\"ESRMNT\":123,\"ECOMM\":124,\"EPROTO\":65,\"EMULTIHOP\":36,\"EDOTDOT\":125,\"EBADMSG\":9,\"ENOTUNIQ\":126,\"EBADFD\":127,\"EREMCHG\":128,\"ELIBACC\":129,\"ELIBBAD\":130,\"ELIBSCN\":131,\"ELIBMAX\":132,\"ELIBEXEC\":133,\"ENOSYS\":52,\"ENOTEMPTY\":55,\"ENAMETOOLONG\":37,\"ELOOP\":32,\"EOPNOTSUPP\":138,\"EPFNOSUPPORT\":139,\"ECONNRESET\":15,\"ENOBUFS\":42,\"EAFNOSUPPORT\":5,\"EPROTOTYPE\":67,\"ENOTSOCK\":57,\"ENOPROTOOPT\":50,\"ESHUTDOWN\":140,\"ECONNREFUSED\":14,\"EADDRINUSE\":3,\"ECONNABORTED\":13,\"ENETUNREACH\":40,\"ENETDOWN\":38,\"ETIMEDOUT\":73,\"EHOSTDOWN\":142,\"EHOSTUNREACH\":23,\"EINPROGRESS\":26,\"EALREADY\":7,\"EDESTADDRREQ\":17,\"EMSGSIZE\":35,\"EPROTONOSUPPORT\":66,\"ESOCKTNOSUPPORT\":137,\"EADDRNOTAVAIL\":4,\"ENETRESET\":39,\"EISCONN\":30,\"ENOTCONN\":53,\"ETOOMANYREFS\":141,\"EUSERS\":136,\"EDQUOT\":19,\"ESTALE\":72,\"ENOTSUP\":138,\"ENOMEDIUM\":148,\"EILSEQ\":25,\"EOVERFLOW\":61,\"ECANCELED\":11,\"ENOTRECOVERABLE\":56,\"EOWNERDEAD\":62,\"ESTRPIPE\":135};InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_embind();init_RegisteredPointer();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var decodeBase64=typeof atob==\"function\"?atob:function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE==\"boolean\"&&ENVIRONMENT_IS_NODE){var buf=Buffer.from(s,\"base64\");return new Uint8Array(buf[\"buffer\"],buf[\"byteOffset\"],buf[\"byteLength\"])}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function checkIncomingModuleAPI(){ignoredModuleProp(\"fetchSettings\")}var wasmImports={\"__assert_fail\":___assert_fail,\"__cxa_throw\":___cxa_throw,\"__syscall__newselect\":___syscall__newselect,\"__syscall_chdir\":___syscall_chdir,\"__syscall_connect\":___syscall_connect,\"__syscall_fcntl64\":___syscall_fcntl64,\"__syscall_getcwd\":___syscall_getcwd,\"__syscall_ioctl\":___syscall_ioctl,\"__syscall_mkdirat\":___syscall_mkdirat,\"__syscall_openat\":___syscall_openat,\"__syscall_readlinkat\":___syscall_readlinkat,\"__syscall_socket\":___syscall_socket,\"_embind_finalize_value_object\":__embind_finalize_value_object,\"_embind_register_bigint\":__embind_register_bigint,\"_embind_register_bool\":__embind_register_bool,\"_embind_register_class\":__embind_register_class,\"_embind_register_class_class_function\":__embind_register_class_class_function,\"_embind_register_class_constructor\":__embind_register_class_constructor,\"_embind_register_class_function\":__embind_register_class_function,\"_embind_register_emval\":__embind_register_emval,\"_embind_register_float\":__embind_register_float,\"_embind_register_function\":__embind_register_function,\"_embind_register_integer\":__embind_register_integer,\"_embind_register_memory_view\":__embind_register_memory_view,\"_embind_register_std_string\":__embind_register_std_string,\"_embind_register_std_wstring\":__embind_register_std_wstring,\"_embind_register_value_object\":__embind_register_value_object,\"_embind_register_value_object_field\":__embind_register_value_object_field,\"_embind_register_void\":__embind_register_void,\"_emval_decref\":__emval_decref,\"_emval_incref\":__emval_incref,\"_emval_take_value\":__emval_take_value,\"_localtime_js\":__localtime_js,\"_tzset_js\":__tzset_js,\"abort\":_abort,\"emscripten_asm_const_int\":_emscripten_asm_const_int,\"emscripten_date_now\":_emscripten_date_now,\"emscripten_memcpy_big\":_emscripten_memcpy_big,\"emscripten_resize_heap\":_emscripten_resize_heap,\"environ_get\":_environ_get,\"environ_sizes_get\":_environ_sizes_get,\"fd_close\":_fd_close,\"fd_fdstat_get\":_fd_fdstat_get,\"fd_read\":_fd_read,\"fd_seek\":_fd_seek,\"fd_write\":_fd_write,\"gethostbyname\":_gethostbyname,\"strftime\":_strftime,\"strftime_l\":_strftime_l};var asm=createWasm();var ___wasm_call_ctors=createExportWrapper(\"__wasm_call_ctors\");var _malloc=createExportWrapper(\"malloc\");var _free=createExportWrapper(\"free\");var ___errno_location=createExportWrapper(\"__errno_location\");var _htons=createExportWrapper(\"htons\");var ___getTypeName=Module[\"___getTypeName\"]=createExportWrapper(\"__getTypeName\");var __embind_initialize_bindings=Module[\"__embind_initialize_bindings\"]=createExportWrapper(\"_embind_initialize_bindings\");var _fflush=Module[\"_fflush\"]=createExportWrapper(\"fflush\");var _ntohs=createExportWrapper(\"ntohs\");var _emscripten_stack_init=function(){return(_emscripten_stack_init=Module[\"asm\"][\"emscripten_stack_init\"]).apply(null,arguments)};var _emscripten_stack_get_free=function(){return(_emscripten_stack_get_free=Module[\"asm\"][\"emscripten_stack_get_free\"]).apply(null,arguments)};var _emscripten_stack_get_base=function(){return(_emscripten_stack_get_base=Module[\"asm\"][\"emscripten_stack_get_base\"]).apply(null,arguments)};var _emscripten_stack_get_end=function(){return(_emscripten_stack_get_end=Module[\"asm\"][\"emscripten_stack_get_end\"]).apply(null,arguments)};var stackSave=createExportWrapper(\"stackSave\");var stackRestore=createExportWrapper(\"stackRestore\");var stackAlloc=createExportWrapper(\"stackAlloc\");var _emscripten_stack_get_current=function(){return(_emscripten_stack_get_current=Module[\"asm\"][\"emscripten_stack_get_current\"]).apply(null,arguments)};var ___cxa_is_pointer_type=createExportWrapper(\"__cxa_is_pointer_type\");var dynCall_iiij=Module[\"dynCall_iiij\"]=createExportWrapper(\"dynCall_iiij\");var dynCall_viij=Module[\"dynCall_viij\"]=createExportWrapper(\"dynCall_viij\");var dynCall_jiji=Module[\"dynCall_jiji\"]=createExportWrapper(\"dynCall_jiji\");var dynCall_viijii=Module[\"dynCall_viijii\"]=createExportWrapper(\"dynCall_viijii\");var dynCall_iiiiij=Module[\"dynCall_iiiiij\"]=createExportWrapper(\"dynCall_iiiiij\");var dynCall_iiiiijj=Module[\"dynCall_iiiiijj\"]=createExportWrapper(\"dynCall_iiiiijj\");var dynCall_iiiiiijj=Module[\"dynCall_iiiiiijj\"]=createExportWrapper(\"dynCall_iiiiiijj\");Module[\"UTF8ToString\"]=UTF8ToString;Module[\"stringToUTF8\"]=stringToUTF8;Module[\"addRunDependency\"]=addRunDependency;Module[\"removeRunDependency\"]=removeRunDependency;Module[\"FS_createPath\"]=FS.createPath;Module[\"FS_createDataFile\"]=FS.createDataFile;Module[\"FS_createPreloadedFile\"]=FS.createPreloadedFile;Module[\"FS_createLazyFile\"]=FS.createLazyFile;Module[\"FS_createDevice\"]=FS.createDevice;Module[\"FS_unlink\"]=FS.unlink;Module[\"FS\"]=FS;var missingLibrarySymbols=[\"stringToNewUTF8\",\"exitJS\",\"writeSockaddr\",\"traverseStack\",\"convertPCtoSourceLocation\",\"runMainThreadEmAsm\",\"jstoi_s\",\"listenOnce\",\"autoResumeAudioContext\",\"handleException\",\"runtimeKeepalivePush\",\"runtimeKeepalivePop\",\"callUserCallback\",\"maybeExit\",\"safeSetTimeout\",\"asmjsMangle\",\"handleAllocator\",\"getNativeTypeSize\",\"STACK_SIZE\",\"STACK_ALIGN\",\"POINTER_SIZE\",\"ASSERTIONS\",\"writeI53ToI64\",\"writeI53ToI64Clamped\",\"writeI53ToI64Signaling\",\"writeI53ToU64Clamped\",\"writeI53ToU64Signaling\",\"readI53FromU64\",\"convertI32PairToI53\",\"convertU32PairToI53\",\"getCFunc\",\"ccall\",\"cwrap\",\"uleb128Encode\",\"sigToWasmTypes\",\"generateFuncType\",\"convertJsFunctionToWasm\",\"getEmptyTableSlot\",\"updateTableMap\",\"getFunctionAddress\",\"addFunction\",\"removeFunction\",\"reallyNegative\",\"unSign\",\"strLen\",\"reSign\",\"formatString\",\"intArrayToString\",\"AsciiToString\",\"stringToAscii\",\"allocateUTF8OnStack\",\"writeStringToMemory\",\"registerKeyEventCallback\",\"maybeCStringToJsString\",\"findEventTarget\",\"findCanvasEventTarget\",\"getBoundingClientRect\",\"fillMouseEventData\",\"registerMouseEventCallback\",\"registerWheelEventCallback\",\"registerUiEventCallback\",\"registerFocusEventCallback\",\"fillDeviceOrientationEventData\",\"registerDeviceOrientationEventCallback\",\"fillDeviceMotionEventData\",\"registerDeviceMotionEventCallback\",\"screenOrientation\",\"fillOrientationChangeEventData\",\"registerOrientationChangeEventCallback\",\"fillFullscreenChangeEventData\",\"registerFullscreenChangeEventCallback\",\"JSEvents_requestFullscreen\",\"JSEvents_resizeCanvasForFullscreen\",\"registerRestoreOldStyle\",\"hideEverythingExceptGivenElement\",\"restoreHiddenElements\",\"setLetterbox\",\"softFullscreenResizeWebGLRenderTarget\",\"doRequestFullscreen\",\"fillPointerlockChangeEventData\",\"registerPointerlockChangeEventCallback\",\"registerPointerlockErrorEventCallback\",\"requestPointerLock\",\"fillVisibilityChangeEventData\",\"registerVisibilityChangeEventCallback\",\"registerTouchEventCallback\",\"fillGamepadEventData\",\"registerGamepadEventCallback\",\"registerBeforeUnloadEventCallback\",\"fillBatteryEventData\",\"battery\",\"registerBatteryEventCallback\",\"setCanvasElementSize\",\"getCanvasElementSize\",\"jsStackTrace\",\"stackTrace\",\"checkWasiClock\",\"createDyncallWrapper\",\"setImmediateWrapped\",\"clearImmediateWrapped\",\"polyfillSetImmediate\",\"newNativePromise\",\"getPromise\",\"exception_addRef\",\"exception_decRef\",\"setMainLoop\",\"_setNetworkCallback\",\"heapObjectForWebGLType\",\"heapAccessShiftForWebGLHeap\",\"emscriptenWebGLGet\",\"computeUnpackAlignedImageSize\",\"emscriptenWebGLGetTexPixelData\",\"emscriptenWebGLGetUniform\",\"webglGetUniformLocation\",\"webglPrepareUniformLocationsBeforeFirstUse\",\"webglGetLeftBracePos\",\"emscriptenWebGLGetVertexAttrib\",\"writeGLArray\",\"SDL_unicode\",\"SDL_ttfContext\",\"SDL_audio\",\"GLFW_Window\",\"runAndAbortIfError\",\"ALLOC_NORMAL\",\"ALLOC_STACK\",\"allocate\",\"registerInheritedInstance\",\"unregisterInheritedInstance\",\"enumReadValueFromPointer\",\"validateThis\",\"getStringOrSymbol\",\"craftEmvalAllocator\",\"emval_get_global\",\"emval_lookupTypes\",\"emval_allocateDestructors\",\"emval_addMethodCaller\"];missingLibrarySymbols.forEach(missingLibrarySymbol);var unexportedSymbols=[\"run\",\"UTF8ArrayToString\",\"stringToUTF8Array\",\"lengthBytesUTF8\",\"addOnPreRun\",\"addOnInit\",\"addOnPreMain\",\"addOnExit\",\"addOnPostRun\",\"FS_createFolder\",\"FS_createLink\",\"out\",\"err\",\"callMain\",\"abort\",\"keepRuntimeAlive\",\"wasmMemory\",\"stackAlloc\",\"stackSave\",\"stackRestore\",\"getTempRet0\",\"setTempRet0\",\"writeStackCookie\",\"checkStackCookie\",\"ptrToString\",\"zeroMemory\",\"getHeapMax\",\"emscripten_realloc_buffer\",\"ENV\",\"ERRNO_CODES\",\"ERRNO_MESSAGES\",\"setErrNo\",\"inetPton4\",\"inetNtop4\",\"inetPton6\",\"inetNtop6\",\"readSockaddr\",\"DNS\",\"getHostByName\",\"Protocols\",\"Sockets\",\"getRandomDevice\",\"timers\",\"warnOnce\",\"UNWIND_CACHE\",\"readEmAsmArgsArray\",\"readEmAsmArgs\",\"runEmAsmFunction\",\"jstoi_q\",\"getExecutableName\",\"dynCallLegacy\",\"getDynCaller\",\"dynCall\",\"asyncLoad\",\"alignMemory\",\"mmapAlloc\",\"readI53FromI64\",\"convertI32PairToI53Checked\",\"freeTableIndexes\",\"functionsInTableMap\",\"setValue\",\"getValue\",\"PATH\",\"PATH_FS\",\"intArrayFromString\",\"UTF16Decoder\",\"UTF16ToString\",\"stringToUTF16\",\"lengthBytesUTF16\",\"UTF32ToString\",\"stringToUTF32\",\"lengthBytesUTF32\",\"allocateUTF8\",\"writeArrayToMemory\",\"writeAsciiToMemory\",\"SYSCALLS\",\"getSocketFromFD\",\"getSocketAddress\",\"JSEvents\",\"specialHTMLTargets\",\"currentFullscreenStrategy\",\"restoreOldWindowedStyle\",\"demangle\",\"demangleAll\",\"ExitStatus\",\"getEnvStrings\",\"doReadv\",\"doWritev\",\"dlopenMissingError\",\"promiseMap\",\"uncaughtExceptionCount\",\"exceptionLast\",\"exceptionCaught\",\"ExceptionInfo\",\"Browser\",\"wget\",\"MEMFS\",\"TTY\",\"PIPEFS\",\"SOCKFS\",\"tempFixedLengthArray\",\"miniTempWebGLFloatBuffers\",\"GL\",\"AL\",\"SDL\",\"SDL_gfx\",\"GLUT\",\"EGL\",\"GLFW\",\"GLEW\",\"IDBStore\",\"InternalError\",\"BindingError\",\"UnboundTypeError\",\"PureVirtualError\",\"init_embind\",\"throwInternalError\",\"throwBindingError\",\"throwUnboundTypeError\",\"ensureOverloadTable\",\"exposePublicSymbol\",\"replacePublicSymbol\",\"extendError\",\"createNamedFunction\",\"embindRepr\",\"registeredInstances\",\"getBasestPointer\",\"getInheritedInstance\",\"getInheritedInstanceCount\",\"getLiveInheritedInstances\",\"registeredTypes\",\"awaitingDependencies\",\"typeDependencies\",\"registeredPointers\",\"registerType\",\"whenDependentTypesAreResolved\",\"embind_charCodes\",\"embind_init_charCodes\",\"readLatin1String\",\"getTypeName\",\"heap32VectorToArray\",\"requireRegisteredType\",\"getShiftFromSize\",\"integerReadValueFromPointer\",\"floatReadValueFromPointer\",\"simpleReadValueFromPointer\",\"runDestructors\",\"new_\",\"craftInvokerFunction\",\"embind__requireFunction\",\"tupleRegistrations\",\"structRegistrations\",\"genericPointerToWireType\",\"constNoSmartPtrRawPointerToWireType\",\"nonConstNoSmartPtrRawPointerToWireType\",\"init_RegisteredPointer\",\"RegisteredPointer\",\"RegisteredPointer_getPointee\",\"RegisteredPointer_destructor\",\"RegisteredPointer_deleteObject\",\"RegisteredPointer_fromWireType\",\"runDestructor\",\"releaseClassHandle\",\"finalizationRegistry\",\"detachFinalizer_deps\",\"detachFinalizer\",\"attachFinalizer\",\"makeClassHandle\",\"init_ClassHandle\",\"ClassHandle\",\"ClassHandle_isAliasOf\",\"throwInstanceAlreadyDeleted\",\"ClassHandle_clone\",\"ClassHandle_delete\",\"deletionQueue\",\"ClassHandle_isDeleted\",\"ClassHandle_deleteLater\",\"flushPendingDeletes\",\"delayFunction\",\"setDelayFunction\",\"RegisteredClass\",\"shallowCopyInternalPointer\",\"downcastPointer\",\"upcastPointer\",\"char_0\",\"char_9\",\"makeLegalFunctionName\",\"emval_handle_array\",\"emval_free_list\",\"emval_symbols\",\"init_emval\",\"count_emval_handles\",\"get_first_emval\",\"Emval\",\"emval_newers\",\"emval_methodCallers\",\"emval_registeredMethods\"];unexportedSymbols.forEach(unexportedRuntimeSymbol);var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function stackCheckInit(){_emscripten_stack_init();writeStackCookie()}function run(){if(runDependencies>0){return}stackCheckInit();preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();assert(!Module[\"_main\"],'compiled without a main, but one is present. if you added it from JS, use Module[\"onRuntimeInitialized\"]');postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}checkStackCookie()}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return FaustModule.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = FaustModule;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return FaustModule; });\nelse if (typeof exports === 'object')\n  exports[\"FaustModule\"] = FaustModule;\n", "export { default as instantiateFaustModule } from \"./instantiateFaustModule\";\r\n\r\nexport * from \"./instantiateFaustModule\";\r\n\r\nexport * from \"./exports\";\r\n", "import factoryFn from \"../libfaust-wasm/libfaust-wasm.cjs\";\r\nimport wasmBinary from \"../libfaust-wasm/libfaust-wasm.wasm\";\r\nimport dataBinary from \"../libfaust-wasm/libfaust-wasm.data\";\r\n\r\nexport const FaustModuleFactoryFn = factoryFn;\r\nexport const FaustModuleFactoryWasm = wasmBinary;\r\nexport const FaustModuleFactoryData = dataBinary;\r\n\r\n/**\r\n * Instantiate `FaustModule` using bundled binaries. Module constructor and files can be overriden.\r\n */\r\nconst instantiateFaustModule = async (FaustModuleFactoryIn = factoryFn, dataBinaryIn = dataBinary, wasmBinaryIn = wasmBinary) => {\r\n    const g = globalThis as any;\r\n    if (g.AudioWorkletGlobalScope) {\r\n        g.importScripts = () => {};\r\n        g.self = { location: { href: \"\" } };\r\n    }\r\n    const faustModule = await FaustModuleFactoryIn({\r\n        wasmBinary: wasmBinaryIn,\r\n        getPreloadedPackage: (remotePackageName: string, remotePackageSize: number) => {\r\n            if (remotePackageName === \"libfaust-wasm.data\") return dataBinaryIn.buffer;\r\n            return new ArrayBuffer(0);\r\n        }\r\n    });\r\n    if (g.AudioWorkletGlobalScope) {\r\n\t\tdelete g.importScripts;\r\n\t\tdelete g.self;\r\n    }\r\n    return faustModule;\r\n};\r\n\r\nexport default instantiateFaustModule;\r\n", "import type { FaustModuleFactory } from \"./types\";\n\n/**\n * Load libfaust-wasm files, than instantiate libFaust\n * @param jsFile path to `libfaust-wasm.js`\n * @param dataFile path to `libfaust-wasm.data`\n * @param wasmFile path to `libfaust-wasm.wasm`\n */\nconst instantiateFaustModuleFromFile = async (jsFile: string, dataFile = jsFile.replace(/c?js$/, \"data\"), wasmFile = jsFile.replace(/c?js$/, \"wasm\")) => {\n    let FaustModule: FaustModuleFactory;\n    let dataBinary: ArrayBuffer;\n    let wasmBinary: Uint8Array | ArrayBuffer;\n    const jsCodeHead = /var (.+) = \\(/;\n    if (typeof window === \"object\") {\n        let jsCode = await (await fetch(jsFile)).text();\n        jsCode = `${jsCode}\nexport default ${jsCode.match(jsCodeHead)?.[1]};\n`;\n        const jsFileMod = URL.createObjectURL(new Blob([jsCode], { type: \"text/javascript\" }));\n        FaustModule = (await import(/* webpackIgnore: true */jsFileMod)).default;\n        dataBinary = await (await fetch(dataFile)).arrayBuffer();\n        wasmBinary = new Uint8Array(await (await fetch(wasmFile)).arrayBuffer());\n    } else {\n        const { promises: fs } = await import(\"fs\");\n        const { pathToFileURL } = await import(\"url\");\n        let jsCode = (await fs.readFile(jsFile, { encoding: \"utf-8\" }));\n        jsCode = `\nimport process from \"process\";\nimport * as path from \"path\";\nimport { createRequire } from \"module\";\nimport { fileURLToPath } from \"url\";\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst __filename = fileURLToPath(import.meta.url);\nconst require = createRequire(import.meta.url);\n\n${jsCode}\n\nexport default ${jsCode.match(jsCodeHead)?.[1]};\n`;\n        const jsFileMod = jsFile.replace(/c?js$/, \"mjs\");\n        await fs.writeFile(jsFileMod, jsCode);\n        FaustModule = (await import(/* webpackIgnore: true */pathToFileURL(jsFileMod).href)).default;\n        await fs.unlink(jsFileMod);\n        dataBinary = (await fs.readFile(dataFile)).buffer;\n        wasmBinary = (await fs.readFile(wasmFile)).buffer;\n    }\n    const faustModule = await FaustModule({\n        wasmBinary,\n        getPreloadedPackage: (remotePackageName: string, remotePackageSize: number) => {\n            if (remotePackageName === \"libfaust-wasm.data\") return dataBinary;\n            return new ArrayBuffer(0);\n        }});\n    return faustModule;\n};\n\nexport default instantiateFaustModuleFromFile;\n", "import type { FaustAudioWorkletProcessorCommunicator } from \"./FaustAudioWorkletCommunicator\";\nimport type FaustWasmInstantiator from \"./FaustWasmInstantiator\";\nimport type { FaustBaseWebAudioDsp, FaustWebAudioDspVoice, FaustMonoWebAudioDsp, FaustPolyWebAudioDsp } from \"./FaustWebAudioDsp\";\nimport type { AudioParamDescriptor, AudioWorkletGlobalScope, LooseFaustDspFactory, FaustDspMeta, FaustUIItem } from \"./types\";\nimport type { AudioWorkletGlobalScope as WamAudioWorkletGlobalScope, WamParamMgrSDKBaseModuleScope } from \"@webaudiomodules/sdk-parammgr\";\n\n/**\n * Injected in the string to be compiled on AudioWorkletProcessor side\n */\nexport interface FaustData {\n    processorName: string;\n    dspName: string;\n    dspMeta: FaustDspMeta;\n    poly: boolean;\n    effectMeta?: FaustDspMeta;\n};\nexport interface FaustAudioWorkletProcessorDependencies<Poly extends boolean = false> {\n    FaustBaseWebAudioDsp: typeof FaustBaseWebAudioDsp;\n    FaustMonoWebAudioDsp: Poly extends true ? undefined : typeof FaustMonoWebAudioDsp;\n    FaustPolyWebAudioDsp: Poly extends true ? typeof FaustPolyWebAudioDsp : undefined;\n    FaustWebAudioDspVoice: Poly extends true ? typeof FaustWebAudioDspVoice : undefined;\n    FaustWasmInstantiator: typeof FaustWasmInstantiator;\n    FaustAudioWorkletProcessorCommunicator: typeof FaustAudioWorkletProcessorCommunicator;\n}\nexport interface FaustAudioWorkletNodeOptions<Poly extends boolean = false> extends AudioWorkletNodeOptions {\n    processorOptions: Poly extends true ? FaustPolyAudioWorkletProcessorOptions : FaustMonoAudioWorkletProcessorOptions;\n}\nexport interface FaustMonoAudioWorkletNodeOptions extends AudioWorkletNodeOptions {\n    processorOptions: FaustMonoAudioWorkletProcessorOptions;\n}\nexport interface FaustPolyAudioWorkletNodeOptions extends AudioWorkletNodeOptions {\n    processorOptions: FaustPolyAudioWorkletProcessorOptions;\n}\nexport interface FaustAudioWorkletProcessorOptions {\n    name: string;\n    sampleSize: number;\n    // for WAMs\n    moduleId?: string;\n    instanceId?: string;\n}\nexport interface FaustMonoAudioWorkletProcessorOptions extends FaustAudioWorkletProcessorOptions {\n    factory: LooseFaustDspFactory;\n}\nexport interface FaustPolyAudioWorkletProcessorOptions extends FaustAudioWorkletProcessorOptions {\n    voiceFactory: LooseFaustDspFactory;\n    mixerModule: WebAssembly.Module;\n    voices: number;\n    effectFactory?: LooseFaustDspFactory;\n}\n\n// Dynamic AudioWorkletProcessor code generator\nconst getFaustAudioWorkletProcessor = <Poly extends boolean = false>(dependencies: FaustAudioWorkletProcessorDependencies<Poly>, faustData: FaustData, register = true): typeof AudioWorkletProcessor => {\n    const { registerProcessor, AudioWorkletProcessor, sampleRate } = globalThis as unknown as AudioWorkletGlobalScope;\n\n    const {\n        FaustBaseWebAudioDsp,\n        FaustWasmInstantiator,\n        FaustAudioWorkletProcessorCommunicator\n    } = dependencies;\n\n    const {\n        processorName,\n        dspName,\n        dspMeta,\n        effectMeta,\n        poly\n    } = faustData;\n\n    // Analyse voice JSON to generate AudioParam parameters\n    const analysePolyParameters = (item: FaustUIItem): AudioParamDescriptor | null => {\n        const polyKeywords = [\"/gate\", \"/freq\", \"/gain\", \"/key\", \"/vel\", \"/velocity\"];\n        const isPolyReserved = \"address\" in item && !!polyKeywords.find(k => item.address.endsWith(k));\n        if (poly && isPolyReserved) return null;\n        if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"nentry\") {\n            return { name: item.address, defaultValue: item.init || 0, minValue: item.min || 0, maxValue: item.max || 0 };\n        } else if (item.type === \"button\" || item.type === \"checkbox\") {\n            return { name: item.address, defaultValue: item.init || 0, minValue: 0, maxValue: 1 };\n        }\n        return null;\n    }\n\n    /**\n     * Base class for Monophonic and Polyphonic AudioWorkletProcessor\n     */\n    abstract class FaustAudioWorkletProcessor<Poly extends boolean = false> extends AudioWorkletProcessor {\n\n        // Use ! syntax when the field is not defined in the constructor\n        protected fDSPCode!: Poly extends true ? FaustPolyWebAudioDsp : FaustMonoWebAudioDsp;\n\n        protected paramValuesCache: Record<string, number> = {};\n\n        protected wamInfo?: { moduleId: string; instanceId: string };\n        protected fCommunicator: FaustAudioWorkletProcessorCommunicator;\n\n        constructor(options: FaustAudioWorkletNodeOptions<Poly>) {\n            super(options);\n\n            // Setup port message handling\n            this.fCommunicator = new FaustAudioWorkletProcessorCommunicator(this.port);\n\n            const { parameterDescriptors } = (this.constructor as typeof AudioWorkletProcessor);\n            parameterDescriptors.forEach((pd) => {\n                this.paramValuesCache[pd.name] = pd.defaultValue || 0;\n            })\n\n            const { moduleId, instanceId } = options.processorOptions;\n            if (!moduleId || !instanceId) return;\n            this.wamInfo = { moduleId, instanceId };\n        }\n\n        static get parameterDescriptors() {\n            const params = [] as AudioParamDescriptor[];\n            // Analyse voice JSON to generate AudioParam parameters\n            const callback = (item: FaustUIItem) => {\n                const param = analysePolyParameters(item);\n                if (param) params.push(param);\n            }\n            FaustBaseWebAudioDsp.parseUI(dspMeta.ui, callback);\n            // Analyse effect JSON to generate AudioParam parameters\n            if (effectMeta) FaustBaseWebAudioDsp.parseUI(effectMeta.ui, callback);\n            return params;\n        }\n\n        setupWamEventHandler() {\n            if (!this.wamInfo) return;\n            const { moduleId, instanceId } = this.wamInfo;\n            const { webAudioModules } = (globalThis as unknown as WamAudioWorkletGlobalScope);\n            const ModuleScope = webAudioModules.getModuleScope(moduleId) as WamParamMgrSDKBaseModuleScope;\n            const paramMgrProcessor = ModuleScope?.paramMgrProcessors?.[instanceId];\n            if (!paramMgrProcessor) return;\n            if (paramMgrProcessor.handleEvent) return;\n            paramMgrProcessor.handleEvent = (event) => {\n                if (event.type === \"wam-midi\") this.midiMessage(event.data.bytes);\n            };\n        }\n\n        process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: { [key: string]: Float32Array }) {\n\n            // Update controls (possibly needed for sample accurate control)\n            for (const path in parameters) {\n                const [paramValue] = parameters[path];\n                if (paramValue !== this.paramValuesCache[path]) {\n                    // Set value and update the cache\n                    this.setParamValue(path, paramValue);\n                }\n            }\n            if (this.fCommunicator.getNewAccDataAvailable()) {\n                const acc = this.fCommunicator.getAcc();\n                if (acc) {\n                    this.fCommunicator.setNewAccDataAvailable(false);\n                    const { invert, ...data } = acc;\n                    this.propagateAcc(data, invert);\n                }\n            }\n            if (this.fCommunicator.getNewGyrDataAvailable()) {\n                const gyr = this.fCommunicator.getGyr();\n                if (gyr) {\n                    this.fCommunicator.setNewGyrDataAvailable(false);\n                    this.propagateGyr(gyr);\n                }\n            }\n\n            return this.fDSPCode.compute(inputs[0], outputs[0]);\n        }\n\n        protected handleMessageAux(e: MessageEvent) { // use arrow function for binding\n            const msg = e.data;\n\n            switch (msg.type) {\n                // Generic MIDI message\n                case \"midi\": {\n                    this.midiMessage(msg.data);\n                    break;\n                }\n                // Typed MIDI message\n                case \"ctrlChange\": {\n                    this.ctrlChange(msg.data[0], msg.data[1], msg.data[2]);\n                    break;\n                }\n                case \"pitchWheel\": {\n                    this.pitchWheel(msg.data[0], msg.data[1]);\n                    break;\n                }\n                case \"keyOn\": {\n                    this.keyOn(msg.data[0], msg.data[1], msg.data[2]);\n                    break;\n                }\n                case \"keyOff\": {\n                    this.keyOff(msg.data[0], msg.data[1], msg.data[2]);\n                    break;\n                }\n                // Generic data message\n                case \"param\": {\n                    this.setParamValue(msg.data.path, msg.data.value);\n                    break;\n                }\n                // Plot handler set on demand\n                case \"setPlotHandler\": {\n                    if (msg.data) {\n                        this.fDSPCode.setPlotHandler((output, index, events) => this.port.postMessage({ type: \"plot\", value: output, index, events }));\n                    } else {\n                        this.fDSPCode.setPlotHandler(null);\n                    }\n                    break;\n                }\n                case \"setupWamEventHandler\": {\n                    this.setupWamEventHandler();\n                    break;\n                }\n                case \"start\": {\n                    this.fDSPCode.start();\n                    break;\n                }\n                case \"stop\": {\n                    this.fDSPCode.stop();\n                    break;\n                }\n                case \"destroy\": {\n                    this.port.close();\n                    this.fDSPCode.destroy();\n                    break;\n                }\n                default:\n                    break;\n            }\n        }\n\n        protected setParamValue(path: string, value: number) {\n            this.fDSPCode.setParamValue(path, value);\n            this.paramValuesCache[path] = value;\n        }\n\n        protected midiMessage(data: number[] | Uint8Array) {\n            this.fDSPCode.midiMessage(data);\n        }\n\n        protected ctrlChange(channel: number, ctrl: number, value: number) {\n            this.fDSPCode.ctrlChange(channel, ctrl, value);\n        }\n\n        protected pitchWheel(channel: number, wheel: number) {\n            this.fDSPCode.pitchWheel(channel, wheel);\n        }\n\n        protected keyOn(channel: number, pitch: number, velocity: number) {\n            this.fDSPCode.keyOn(channel, pitch, velocity);\n        }\n\n        protected keyOff(channel: number, pitch: number, velocity: number) {\n            this.fDSPCode.keyOff(channel, pitch, velocity);\n        }\n\n        protected propagateAcc(accelerationIncludingGravity: NonNullable<DeviceMotionEvent[\"accelerationIncludingGravity\"]>, invert: boolean = false) {\n            this.fDSPCode.propagateAcc(accelerationIncludingGravity, invert);\n        }\n\n        protected propagateGyr(event: Pick<DeviceOrientationEvent, \"alpha\" | \"beta\" | \"gamma\">) {\n            this.fDSPCode.propagateGyr(event);\n        }\n    }\n\n    /**\n     * Monophonic AudioWorkletProcessor\n     */\n    class FaustMonoAudioWorkletProcessor extends FaustAudioWorkletProcessor<false> {\n\n        constructor(options: FaustAudioWorkletNodeOptions) {\n            super(options);\n            const { FaustMonoWebAudioDsp } = dependencies as FaustAudioWorkletProcessorDependencies<false>;\n            const { factory, sampleSize } = options.processorOptions;\n\n            const instance = FaustWasmInstantiator.createSyncMonoDSPInstance(factory);\n\n            // Create Monophonic DSP\n            this.fDSPCode = new FaustMonoWebAudioDsp(instance, sampleRate, sampleSize, 128, factory.soundfiles);\n\n            // Setup port message handling\n            this.port.addEventListener(\"message\", this.handleMessageAux);\n            this.port.start();\n\n            // Setup output handler\n            this.fDSPCode.setOutputParamHandler((path, value) => this.port.postMessage({ path, value, type: \"param\" }));\n\n            this.fDSPCode.start();\n        }\n\n        protected handleMessageAux = (e: MessageEvent) => { // use arrow function for binding\n            super.handleMessageAux(e);\n        }\n    }\n\n    /**\n     * Polyphonic AudioWorkletProcessor\n     */\n    class FaustPolyAudioWorkletProcessor extends FaustAudioWorkletProcessor<true> {\n\n        constructor(options: FaustPolyAudioWorkletNodeOptions) {\n            super(options);\n            const { FaustPolyWebAudioDsp } = dependencies as FaustAudioWorkletProcessorDependencies<true>;\n\n            const { voiceFactory, mixerModule, voices, effectFactory, sampleSize } = options.processorOptions;\n\n            const instance = FaustWasmInstantiator.createSyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory);\n\n            const soundfiles = { ...effectFactory?.soundfiles, ...voiceFactory.soundfiles };\n            // Create Polyphonic DSP\n            this.fDSPCode = new FaustPolyWebAudioDsp(instance, sampleRate, sampleSize, 128, soundfiles);\n\n            // Setup port message handling\n            this.port.addEventListener(\"message\", this.handleMessageAux);\n            this.port.start();\n\n            // Setup output handler\n            this.fDSPCode.setOutputParamHandler((path, value) => this.port.postMessage({ path, value, type: \"param\" }));\n\n            this.fDSPCode.start();\n        }\n\n        protected midiMessage(data: number[] | Uint8Array) {\n            const cmd = data[0] >> 4;\n            const channel = data[0] & 0xf;\n            const data1 = data[1];\n            const data2 = data[2];\n            if (cmd === 8 || (cmd === 9 && data2 === 0)) this.keyOff(channel, data1, data2);\n            else if (cmd === 9) this.keyOn(channel, data1, data2);\n            else super.midiMessage(data);\n        }\n\n        protected handleMessageAux = (e: MessageEvent) => { // use arrow function for binding\n            const msg = e.data;\n            switch (msg.type) {\n                case \"keyOn\": this.keyOn(msg.data[0], msg.data[1], msg.data[2]); break;\n                case \"keyOff\": this.keyOff(msg.data[0], msg.data[1], msg.data[2]); break;\n                default:\n                    super.handleMessageAux(e);\n                    break;\n            }\n        }\n\n        // Public API\n        keyOn(channel: number, pitch: number, velocity: number) {\n            this.fDSPCode.keyOn(channel, pitch, velocity);\n        }\n\n        keyOff(channel: number, pitch: number, velocity: number) {\n            this.fDSPCode.keyOff(channel, pitch, velocity);\n        }\n\n        allNotesOff(hard: boolean) {\n            this.fDSPCode.allNotesOff(hard);\n        }\n    }\n\n    const Processor = poly ? FaustPolyAudioWorkletProcessor : FaustMonoAudioWorkletProcessor;\n    if (register) {\n        try {\n            registerProcessor(processorName || dspName || (poly ? \"mydsp_poly\" : \"mydsp\"), Processor);\n        } catch (error) {\n            console.warn(error);\n        }\n    }\n\n    return poly ? FaustPolyAudioWorkletProcessor : FaustMonoAudioWorkletProcessor;\n}\n\nexport default getFaustAudioWorkletProcessor;\n", "import type { FaustAudioWorkletProcessorCommunicator } from \"./FaustAudioWorkletCommunicator\";\r\nimport type { FaustMonoDspInstance } from \"./FaustDspInstance\";\r\nimport type FaustWasmInstantiator from \"./FaustWasmInstantiator\";\r\nimport type { FaustBaseWebAudioDsp, FaustMonoWebAudioDsp, PlotHandler } from \"./FaustWebAudioDsp\";\r\nimport type { AudioParamDescriptor, AudioWorkletGlobalScope, LooseFaustDspFactory, FaustDspMeta, FaustUIItem, InterfaceFFT, TWindowFunction, Writeable, TypedArray, FFTUtils } from \"./types\";\r\nimport type { AudioWorkletGlobalScope as WamAudioWorkletGlobalScope, WamParamMgrSDKBaseModuleScope } from \"@webaudiomodules/sdk-parammgr\";\r\n\r\nexport interface FaustFFTOptionsData {\r\n    fftSize: number;\r\n    fftOverlap: number;\r\n    noIFFT: boolean;\r\n    /** Index number of the default window function, leave undefined or -1 for rectangular (no windowing) */\r\n    defaultWindowFunction: number;\r\n}\r\n\r\n/**\r\n * Injected in the string to be compiled on AudioWorkletProcessor side\r\n */\r\nexport interface FaustFFTData {\r\n    processorName: string;\r\n    dspName: string;\r\n    dspMeta: FaustDspMeta;\r\n    fftOptions?: Partial<FaustFFTOptionsData>;\r\n};\r\nexport interface FaustFFTAudioWorkletProcessorDependencies {\r\n    FaustBaseWebAudioDsp: typeof FaustBaseWebAudioDsp;\r\n    FaustMonoWebAudioDsp: typeof FaustMonoWebAudioDsp;\r\n    FaustWasmInstantiator: typeof FaustWasmInstantiator;\r\n    FaustAudioWorkletProcessorCommunicator: typeof FaustAudioWorkletProcessorCommunicator;\r\n    FFTUtils: typeof FFTUtils;\r\n}\r\nexport interface FaustFFTAudioWorkletNodeOptions extends AudioWorkletNodeOptions {\r\n    processorOptions: FaustFFTAudioWorkletProcessorOptions;\r\n}\r\nexport interface FaustFFTAudioWorkletProcessorOptions {\r\n    name: string;\r\n    sampleSize: number;\r\n    factory: LooseFaustDspFactory;\r\n    // for WAMs\r\n    moduleId?: string;\r\n    instanceId?: string;\r\n}\r\n\r\n\r\n// Dynamic AudioWorkletProcessor code generator\r\nconst getFaustFFTAudioWorkletProcessor = (dependencies: FaustFFTAudioWorkletProcessorDependencies, faustData: FaustFFTData, register = true): typeof AudioWorkletProcessor => {\r\n    const { registerProcessor, AudioWorkletProcessor, sampleRate } = globalThis as unknown as AudioWorkletGlobalScope;\r\n\r\n    const {\r\n        FaustBaseWebAudioDsp,\r\n        FaustWasmInstantiator,\r\n        FaustMonoWebAudioDsp,\r\n        FaustAudioWorkletProcessorCommunicator,\r\n        FFTUtils\r\n    } = dependencies;\r\n\r\n    const {\r\n        processorName,\r\n        dspName,\r\n        dspMeta,\r\n        fftOptions\r\n    } = faustData;\r\n\r\n    const {\r\n        windowFunctions,\r\n        getFFT,\r\n        fftToSignal,\r\n        signalToFFT,\r\n        signalToNoFFT\r\n    } = FFTUtils;\r\n\r\n    /**\r\n     * Ceil a number to multiple of another\r\n     */\r\n    const ceil = (x: number, to: number): number => (Math.abs(to) < 1 ? Math.ceil(x * (1 / to)) / (1 / to) : Math.ceil(x / to) * to);\r\n\r\n    /**\r\n     * Mod support wrapping with negative numbers\r\n     */\r\n    const mod = (x: number, y: number): number => (x % y + y) % y;\r\n\r\n    const apply = (array: Writeable<ArrayLike<number>>, windowFunction: TWindowFunction) => {\r\n        for (let i = 0; i < array.length; i++) {\r\n            array[i] *= windowFunction(i, array.length);\r\n        }\r\n    };\r\n\r\n    const fftParamKeywords = [\"/fftSize\", \"/fftHopSize\", \"/fftOverlap\", \"/windowFunction\", \"/noIFFT\"];\r\n\r\n    /**\r\n     * Copy buffer to another, support negative offset index\r\n     */\r\n    const setTypedArray = <T extends TypedArray = TypedArray>(to: T, from: T, offsetTo = 0, offsetFrom = 0) => {\r\n        const toLength = to.length;\r\n        const fromLength = from.length;\r\n        const spillLength = Math.min(toLength, fromLength);\r\n        let spilled = 0;\r\n        let $to = mod(offsetTo, toLength) || 0;\r\n        let $from = mod(offsetFrom, fromLength) || 0;\r\n        while (spilled < spillLength) {\r\n            const $spillLength = Math.min(spillLength - spilled, toLength - $to, fromLength - $from);\r\n            const $fromEnd = $from + $spillLength;\r\n            if ($from === 0 && $fromEnd === fromLength) to.set(from, $to);\r\n            else to.set(from.subarray($from, $fromEnd), $to);\r\n            $to = ($to + $spillLength) % toLength;\r\n            $from = $fromEnd % fromLength;\r\n            spilled += $spillLength;\r\n        }\r\n        return $to;\r\n    };\r\n\r\n    // Analyse JSON to generate AudioParam parameters\r\n    const analyseParameters = (item: FaustUIItem): AudioParamDescriptor | null => {\r\n        const isFFTReserved = \"address\" in item && !!fftParamKeywords.find(k => item.address.endsWith(k));\r\n        if (isFFTReserved) return null;\r\n        if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"nentry\") {\r\n            return { name: item.address, defaultValue: item.init || 0, minValue: item.min || 0, maxValue: item.max || 0 };\r\n        } else if (item.type === \"button\" || item.type === \"checkbox\") {\r\n            return { name: item.address, defaultValue: item.init || 0, minValue: 0, maxValue: 1 };\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Class for Faust FFT AudioWorkletProcessor\r\n     */\r\n    class FaustFFTAudioWorkletProcessor extends AudioWorkletProcessor {\r\n\r\n        protected fDSPCode: FaustMonoWebAudioDsp;\r\n\r\n        protected paramValuesCache: Record<string, number> = {};\r\n\r\n        protected wamInfo?: { moduleId: string; instanceId: string };\r\n        protected communicator: FaustAudioWorkletProcessorCommunicator;\r\n\r\n        private dspInstance!: FaustMonoDspInstance;\r\n        private sampleSize!: number;\r\n\r\n        private destroyed = false;\r\n        /** Pointer of next start sample to write of the FFT input window */\r\n        private $inputWrite = 0;\r\n        /** Pointer of next start sample to read of the FFT input window */\r\n        private $inputRead = 0;\r\n        /** Pointer of next start sample to write of the FFT output window */\r\n        private $outputWrite = 0;\r\n        /** Pointer of next start sample to read of the FFT output window */\r\n        private $outputRead = 0;\r\n        /** Not perform in IFFT when reconstruct the audio signal */\r\n        private noIFFT = false;\r\n        /** audio data from input, array of channels */\r\n        private readonly fftInput: Float32Array[] = [];\r\n        /** audio data for output, array of channels */\r\n        private readonly fftOutput: Float32Array[] = [];\r\n        /** Generated from the current window function */\r\n        private window: Float32Array;\r\n        /** Generated from the current window's rolling sum square */\r\n        private windowSumSquare: Float32Array;\r\n\r\n        /** FFT constructor */\r\n        private FFT: typeof InterfaceFFT;\r\n        /** Real FFT interface */\r\n        private rfft: InterfaceFFT;\r\n        /** Faust param name of fftHopSize */\r\n        private fftHopSizeParam: string | undefined;\r\n        /** FFT Overlaps, 1 means no overlap */\r\n        private fftOverlap = 0;\r\n        private fftHopSize = 0;\r\n        private fftSize = 0;\r\n        private fftBufferSize = 0;\r\n        private fftProcessorZeros: Float32Array;\r\n        private noIFFTBuffer: Float32Array;\r\n\r\n        private fPlotHandler: PlotHandler | null = null;\r\n        private fCachedEvents: { type: string; data: any }[] = [];\r\n        private fBufferNum = 0;\r\n        private soundfiles: LooseFaustDspFactory[\"soundfiles\"] = {};\r\n        get fftProcessorBufferSize() {\r\n            return this.fftSize / 2 + 1;\r\n        }\r\n        private windowFunction: TWindowFunction | null = null;\r\n\r\n        constructor(options: FaustFFTAudioWorkletNodeOptions) {\r\n            super(options);\r\n\r\n            // Setup port message handling\r\n            this.port.addEventListener(\"message\", this.handleMessageAux);\r\n            this.port.start();\r\n            this.communicator = new FaustAudioWorkletProcessorCommunicator(this.port);\r\n\r\n            const { parameterDescriptors } = (this.constructor as typeof AudioWorkletProcessor);\r\n            parameterDescriptors.forEach((pd) => {\r\n                this.paramValuesCache[pd.name] = pd.defaultValue || 0;\r\n            })\r\n\r\n            const { factory, sampleSize } = options.processorOptions;\r\n\r\n            this.dspInstance = FaustWasmInstantiator.createSyncMonoDSPInstance(factory);\r\n            this.sampleSize = sampleSize;\r\n            this.soundfiles = factory.soundfiles;\r\n\r\n            // Init the FFT constructor and the Faust FFT Processor\r\n            this.initFFT();\r\n\r\n            const { moduleId, instanceId } = options.processorOptions;\r\n            if (!moduleId || !instanceId) return;\r\n            this.wamInfo = { moduleId, instanceId };\r\n        }\r\n\r\n        async initFFT(): Promise<true> {\r\n            // Use injected function to instantiate the FFT constructor\r\n            this.FFT = await getFFT();\r\n            // Init Faust FFT Processor\r\n            await this.createFFTProcessor();\r\n            return true;\r\n        }\r\n\r\n        static get parameterDescriptors() {\r\n            const params = [] as AudioParamDescriptor[];\r\n            // Analyse voice JSON to generate AudioParam parameters\r\n            const callback = (item: FaustUIItem) => {\r\n                const param = analyseParameters(item);\r\n                if (param) params.push(param);\r\n            }\r\n            FaustBaseWebAudioDsp.parseUI(dspMeta.ui, callback);\r\n            // Add to Faust parameters, FFT specified parameters\r\n            return [\r\n                ...params,\r\n                {\r\n                    defaultValue: fftOptions?.fftSize || 1024,\r\n                    maxValue: 2 ** 32,\r\n                    minValue: 2,\r\n                    name: \"fftSize\"\r\n                }, {\r\n                    defaultValue: fftOptions?.fftOverlap || 2,\r\n                    maxValue: 32,\r\n                    minValue: 1,\r\n                    name: \"fftOverlap\"\r\n                }, {\r\n                    defaultValue: typeof fftOptions?.defaultWindowFunction === \"number\" ? fftOptions.defaultWindowFunction + 1 : 0,\r\n                    maxValue: windowFunctions?.length || 0,\r\n                    minValue: 0,\r\n                    name: \"windowFunction\"\r\n                }, {\r\n                    defaultValue: +!!fftOptions?.noIFFT || 0,\r\n                    maxValue: 1,\r\n                    minValue: 0,\r\n                    name: \"noIFFT\"\r\n                }\r\n            ];\r\n        }\r\n\r\n        setupWamEventHandler() {\r\n            if (!this.wamInfo) return;\r\n            const { moduleId, instanceId } = this.wamInfo;\r\n            const { webAudioModules } = (globalThis as unknown as WamAudioWorkletGlobalScope);\r\n            const ModuleScope = webAudioModules.getModuleScope(moduleId) as WamParamMgrSDKBaseModuleScope;\r\n            const paramMgrProcessor = ModuleScope?.paramMgrProcessors?.[instanceId];\r\n            if (!paramMgrProcessor) return;\r\n            if (paramMgrProcessor.handleEvent) return;\r\n            paramMgrProcessor.handleEvent = (event) => {\r\n                if (event.type === \"wam-midi\") this.midiMessage(event.data.bytes);\r\n            };\r\n        }\r\n\r\n        processFFT() {\r\n            // Get the number of samples that need to proceed, from the input r/w pointers\r\n            let samplesForFFT = mod(this.$inputWrite - this.$inputRead, this.fftBufferSize) || this.fftBufferSize;\r\n            // Start process, until no more enough samples\r\n            while (samplesForFFT >= this.fftSize) {\r\n                let fftProcessorOutputs: Float32Array[] = [];\r\n                // Faust processing, use a callback to avoid extra data copy\r\n                this.fDSPCode.compute((inputs) => {\r\n                    // for each audio input channel, three Faust FFT input buffers can be generated (real, imag, FFT bin index)\r\n                    for (let i = 0; i < Math.min(this.fftInput.length, Math.ceil(inputs.length / 3)); i++) {\r\n                        // FFT forward, use a callback to avoid extra data copy\r\n                        const ffted = this.rfft.forward((fftBuffer) => {\r\n                            setTypedArray(fftBuffer, this.fftInput[i], 0, this.$inputRead);\r\n                            // Windowing the input\r\n                            for (let j = 0; j < fftBuffer.length; j++) {\r\n                                fftBuffer[j] *= this.window[j];\r\n                            }\r\n                            // data for FFT (fftBuffer) is prepared\r\n                        });\r\n                        // write FFTed spectral data to three Faust FFT input buffers (real, imag, FFT bin index)\r\n                        fftToSignal(ffted, inputs[i * 3], inputs[i * 3 + 1], inputs[i * 3 + 2]);\r\n                        // Faust inputs are prepared\r\n                    }\r\n                    // If the Faust DSP has more inputs, fill them (zeros or real/imag, fill FFT bin indexes)\r\n                    for (let i = this.fftInput.length * 3; i < inputs.length; i++) {\r\n                        if (i % 3 === 2) inputs[i].forEach((v, j) => inputs[i][j] = j);\r\n                        else inputs[i].fill(0);\r\n                    }\r\n                }, (outputs) => {\r\n                    // Get the Faust DSP outputs\r\n                    fftProcessorOutputs = outputs as Float32Array[];\r\n                });\r\n\r\n                // Advance FFT input read pointers\r\n                this.$inputRead += this.fftHopSize;\r\n                this.$inputRead %= this.fftBufferSize;\r\n\r\n                samplesForFFT -= this.fftHopSize;\r\n\r\n                // Do inverse FFT on the processed data by Faust DSP, and write the reconstructed signal to the output buffer\r\n                for (let i = 0; i < this.fftOutput.length; i++) {\r\n                    let iffted: Float32Array;\r\n                    // If noIFFT option in enabled, then no need to do inverse IFFT, use the injected function to convert\r\n                    if (this.noIFFT) {\r\n                        iffted = this.noIFFTBuffer;\r\n                        signalToNoFFT(fftProcessorOutputs[i * 2] || this.fftProcessorZeros, fftProcessorOutputs[i * 2 + 1] || this.fftProcessorZeros, iffted);\r\n                    } else {\r\n                        // FFT inverse, use a callback to avoid extra data copy\r\n                        iffted = this.rfft.inverse((ifftBuffer) => {\r\n                            // Convert the Faust DSP output (real/imag plans) to an array for inverse FFT\r\n                            signalToFFT(fftProcessorOutputs[i * 2] || this.fftProcessorZeros, fftProcessorOutputs[i * 2 + 1] || this.fftProcessorZeros, ifftBuffer);\r\n                            // ifftBuffer is prepared\r\n                        });\r\n                    }\r\n                    // Windowing the output\r\n                    for (let j = 0; j < iffted.length; j++) {\r\n                        iffted[j] *= this.window[j];\r\n                    }\r\n                    // Overlap-add, preparing the windowSumSquare array for reverse the windowing effect when output the audio\r\n                    let $: number;\r\n                    // First part, add the part that is overlaped with the previous window\r\n                    for (let j = 0; j < iffted.length - this.fftHopSize; j++) {\r\n                        $ = mod(this.$outputWrite + j, this.fftBufferSize);\r\n                        this.fftOutput[i][$] += iffted[j];\r\n                        if (i === 0) this.windowSumSquare[$] += this.noIFFT ? this.window[j] : this.window[j] ** 2;\r\n                    }\r\n                    // Second part, write directly to the output buffer\r\n                    for (let j = iffted.length - this.fftHopSize; j < iffted.length; j++) {\r\n                        $ = mod(this.$outputWrite + j, this.fftBufferSize);\r\n                        this.fftOutput[i][$] = iffted[j];\r\n                        if (i === 0) this.windowSumSquare[$] = this.noIFFT ? this.window[j] : this.window[j] ** 2;\r\n                    }\r\n                }\r\n                // Advance FFT output write pointers\r\n                this.$outputWrite += this.fftHopSize;\r\n                this.$outputWrite %= this.fftBufferSize;\r\n            }\r\n        }\r\n\r\n        process(inputs: Float32Array[][], outputs: Float32Array[][], parameters: { [key: string]: Float32Array }) {\r\n\r\n            if (this.destroyed) return false;\r\n            if (!this.FFT) return true;\r\n            const input = inputs[0];\r\n            const output = outputs[0];\r\n            const inputChannels = input?.length || 0;\r\n            const outputChannels = output?.length || 0;\r\n            // if (input.length === 0) return true;\r\n\r\n            const bufferSize = input?.length ? Math.max(...input.map(c => c.length)) || 128 : 128;\r\n\r\n            // Reset FFT and related buffers if necessary (checks in the resetFFT method)\r\n            this.noIFFT = !!parameters.noIFFT[0];\r\n            this.resetFFT(~~parameters.fftSize[0], ~~parameters.fftOverlap[0], ~~parameters.windowFunction[0], inputChannels, outputChannels, bufferSize);\r\n\r\n            if (!this.fDSPCode) return true;\r\n\r\n            for (const path in parameters) {\r\n                if (!!fftParamKeywords.find(k => `/${path}`.endsWith(k))) continue;\r\n                const [paramValue] = parameters[path];\r\n                if (paramValue !== this.paramValuesCache[path]) {\r\n                    // Set value and update the cache\r\n                    this.setParamValue(path, paramValue);\r\n                }\r\n            }\r\n            if (this.communicator.getNewAccDataAvailable()) {\r\n                const acc = this.communicator.getAcc();\r\n                if (acc) {\r\n                    this.communicator.setNewAccDataAvailable(false);\r\n                    const { invert, ...data } = acc;\r\n                    this.propagateAcc(data, invert);\r\n                }\r\n            }\r\n            if (this.communicator.getNewGyrDataAvailable()) {\r\n                const gyr = this.communicator.getGyr();\r\n                if (gyr) {\r\n                    this.communicator.setNewGyrDataAvailable(false);\r\n                    this.propagateGyr(gyr);\r\n                }\r\n            }\r\n\r\n            // Write audio input into fftInput buffer, advance pointers\r\n            if (input?.length) {\r\n                let $inputWrite = 0;\r\n                for (let i = 0; i < input.length; i++) {\r\n                    const inputWindow = this.fftInput[i];\r\n                    const channel = input[i].length ? input[i] : new Float32Array(bufferSize);\r\n                    $inputWrite = setTypedArray(inputWindow, channel, this.$inputWrite);\r\n                }\r\n                this.$inputWrite = $inputWrite;\r\n            } else {\r\n                this.$inputWrite += bufferSize;\r\n                this.$inputWrite %= this.fftBufferSize;\r\n            }\r\n\r\n            // Do FFT if necessary\r\n            this.processFFT();\r\n\r\n            // Read from fftOutput buffer for audio output, applying windowSumSquare to reverse the doubled windowing effect\r\n            for (let i = 0; i < output.length; i++) {\r\n                setTypedArray(output[i], this.fftOutput[i], 0, this.$outputRead);\r\n                // let a = 0;\r\n                let div = 0;\r\n                for (let j = 0; j < bufferSize; j++) {\r\n                    div = this.windowSumSquare[mod(this.$outputRead + j, this.fftBufferSize)];\r\n                    output[i][j] /= div < 1e-8 ? 1 : div;\r\n                }\r\n            }\r\n            // Advance pointers\r\n            this.$outputRead += bufferSize;\r\n            this.$outputRead %= this.fftBufferSize;\r\n\r\n            // plot\r\n            if (this.fPlotHandler) {\r\n                this.port.postMessage({ type: \"plot\", value: output, index: this.fBufferNum++, events: this.fCachedEvents });\r\n                this.fCachedEvents = [];\r\n            }\r\n            return true;\r\n        }\r\n\r\n        protected handleMessageAux = (e: MessageEvent) => { // use arrow function for binding\r\n            const msg = e.data;\r\n\r\n            switch (msg.type) {\r\n                // Generic MIDI message\r\n                case \"midi\": this.midiMessage(msg.data); break;\r\n                // Typed MIDI message\r\n                case \"ctrlChange\": this.ctrlChange(msg.data[0], msg.data[1], msg.data[2]); break;\r\n                case \"pitchWheel\": this.pitchWheel(msg.data[0], msg.data[1]); break;\r\n                // Generic data message\r\n                case \"param\": this.setParamValue(msg.data.path, msg.data.value); break;\r\n                // Plot handler set on demand\r\n                case \"setPlotHandler\": {\r\n                    if (msg.data) {\r\n                        this.fPlotHandler = (output, index, events) => {\r\n                            if (events) this.fCachedEvents.push(...events);\r\n                        };\r\n                    } else {\r\n                        this.fPlotHandler = null;\r\n                    }\r\n                    this.fDSPCode?.setPlotHandler(this.fPlotHandler);\r\n                    break;\r\n                }\r\n                case \"setupWamEventHandler\": {\r\n                    this.setupWamEventHandler();\r\n                    break;\r\n                }\r\n                case \"start\": {\r\n                    this.fDSPCode?.start();\r\n                    break;\r\n                }\r\n                case \"stop\": {\r\n                    this.fDSPCode?.stop();\r\n                    break;\r\n                }\r\n                case \"destroy\": {\r\n                    this.port.close();\r\n                    this.destroy();\r\n                    break;\r\n                }\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        protected setParamValue(path: string, value: number) {\r\n            this.fDSPCode?.setParamValue(path, value);\r\n            this.paramValuesCache[path] = value;\r\n        }\r\n\r\n        protected midiMessage(data: number[] | Uint8Array) {\r\n            this.fDSPCode?.midiMessage(data);\r\n        }\r\n\r\n        protected ctrlChange(channel: number, ctrl: number, value: number) {\r\n            this.fDSPCode?.ctrlChange(channel, ctrl, value);\r\n        }\r\n\r\n        protected pitchWheel(channel: number, wheel: number) {\r\n            this.fDSPCode?.pitchWheel(channel, wheel);\r\n        }\r\n\r\n        protected propagateAcc(accelerationIncludingGravity: NonNullable<DeviceMotionEvent[\"accelerationIncludingGravity\"]>, invert: boolean = false) {\r\n            this.fDSPCode.propagateAcc(accelerationIncludingGravity, invert);\r\n        }\r\n\r\n        protected propagateGyr(event: Pick<DeviceOrientationEvent, \"alpha\" | \"beta\" | \"gamma\">) {\r\n            this.fDSPCode.propagateGyr(event);\r\n        }\r\n\r\n        resetFFT(sizeIn: number, overlapIn: number, windowFunctionIn: number, inputChannels: number, outputChannels: number, bufferSize: number) {\r\n            const fftSize = ~~ceil(Math.max(2, sizeIn || 1024), 2);\r\n            const fftOverlap = ~~Math.min(fftSize, Math.max(1, overlapIn));\r\n            const fftHopSize = ~~Math.max(1, fftSize / fftOverlap);\r\n            const latency = fftSize - Math.min(fftHopSize, bufferSize);\r\n            let windowFunction: TWindowFunction | null = null;\r\n\r\n            // set the window function from the injected list\r\n            if (windowFunctionIn !== 0) {\r\n                windowFunction = typeof windowFunctions === \"object\" ? windowFunctions[~~windowFunctionIn - 1] || null : null;\r\n            }\r\n            const fftSizeChanged = fftSize !== this.fftSize;\r\n\r\n            const fftOverlapChanged = fftOverlap !== this.fftOverlap;\r\n            // Reset FFT vars if the size is changed\r\n            if (fftSizeChanged || fftOverlapChanged) {\r\n                this.fftSize = fftSize;\r\n                this.fftOverlap = fftOverlap;\r\n                this.fftHopSize = fftHopSize;\r\n                this.$inputWrite = 0;\r\n                this.$inputRead = 0;\r\n                this.$outputWrite = 0;\r\n                this.$outputRead = -latency;\r\n                this.fftBufferSize = Math.max(fftSize * 2 - this.fftHopSize, bufferSize * 2);\r\n                if (!fftSizeChanged && this.fftHopSizeParam) this.fDSPCode?.setParamValue(this.fftHopSizeParam, this.fftHopSize);\r\n            }\r\n\r\n            // Reset the FFT interface and the Faust Processor\r\n            if (fftSizeChanged) {\r\n                this.rfft?.dispose();\r\n                this.rfft = new this.FFT(fftSize);\r\n                this.noIFFTBuffer = new Float32Array(this.fftSize);\r\n                this.createFFTProcessor();\r\n            }\r\n\r\n            // Calculate a window from the window function, prepare the windowSumSquare buffer \r\n            if (fftSizeChanged || fftOverlapChanged || windowFunction !== this.windowFunction) {\r\n                this.windowFunction = windowFunction;\r\n                this.window = new Float32Array(fftSize);\r\n                this.window.fill(1);\r\n                if (windowFunction) apply(this.window, windowFunction);\r\n                this.windowSumSquare = new Float32Array(this.fftBufferSize);\r\n            }\r\n\r\n            // Reset FFT I/O buffers if necessary\r\n            if (this.fftInput.length > inputChannels) {\r\n                this.fftInput.splice(inputChannels);\r\n            }\r\n            if (this.fftOutput.length > outputChannels) {\r\n                this.fftOutput.splice(outputChannels);\r\n            }\r\n            if (fftSizeChanged || fftOverlapChanged) {\r\n                for (let i = 0; i < inputChannels; i++) {\r\n                    this.fftInput[i] = new Float32Array(this.fftBufferSize);\r\n                }\r\n                for (let i = 0; i < outputChannels; i++) {\r\n                    this.fftOutput[i] = new Float32Array(this.fftBufferSize);\r\n                }\r\n            } else {\r\n                if (this.fftInput.length < inputChannels) {\r\n                    for (let i = this.fftInput.length; i < inputChannels; i++) {\r\n                        this.fftInput[i] = new Float32Array(this.fftBufferSize);\r\n                    }\r\n                }\r\n                if (this.fftOutput.length < outputChannels) {\r\n                    for (let i = this.fftOutput.length; i < outputChannels; i++) {\r\n                        this.fftOutput[i] = new Float32Array(this.fftBufferSize);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        async createFFTProcessor() {\r\n            this.fDSPCode?.stop();\r\n            this.fDSPCode?.destroy();\r\n\r\n            // Create Monophonic DSP\r\n            this.fDSPCode = new FaustMonoWebAudioDsp(this.dspInstance, sampleRate, this.sampleSize, this.fftProcessorBufferSize, this.soundfiles);\r\n\r\n            // Setup output handler\r\n            this.fDSPCode.setOutputParamHandler((path, value) => this.port.postMessage({ path, value, type: \"param\" }));\r\n            this.fDSPCode.setPlotHandler(this.fPlotHandler);\r\n            const params = this.fDSPCode.getParams();\r\n            this.fDSPCode.start();\r\n            // Write the cached parameters\r\n            for (const path in this.paramValuesCache) {\r\n                if (!!fftParamKeywords.find(k => `/${path}`.endsWith(k))) continue;\r\n                this.fDSPCode.setParamValue(path, this.paramValuesCache[path])\r\n            }\r\n            // Write the FFT reverved parameters\r\n            const fftSizeParam = params.find(s => s.endsWith(\"/fftSize\"));\r\n            if (fftSizeParam) this.fDSPCode.setParamValue(fftSizeParam, this.fftSize);\r\n            this.fftHopSizeParam = params.find(s => s.endsWith(\"/fftHopSize\"));\r\n            if (this.fftHopSizeParam) this.fDSPCode.setParamValue(this.fftHopSizeParam, this.fftHopSize);\r\n            // Prepare a array of zeros for furthur usage\r\n            this.fftProcessorZeros = new Float32Array(this.fftProcessorBufferSize);\r\n        }\r\n        destroy() {\r\n            this.fDSPCode?.stop();\r\n            this.fDSPCode?.destroy();\r\n            this.rfft?.dispose();\r\n            this.destroyed = true;\r\n        }\r\n\r\n    }\r\n\r\n    const Processor = FaustFFTAudioWorkletProcessor;\r\n    if (register) {\r\n        try {\r\n            registerProcessor(processorName || dspName || \"myfftdsp\", Processor);\r\n        } catch (error) {\r\n            console.warn(error);\r\n        }\r\n    }\r\n\r\n    return FaustFFTAudioWorkletProcessor;\r\n\r\n};\r\n\r\nexport default getFaustFFTAudioWorkletProcessor;\r\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "/**\n * @internal\n */\nexport const BLOCK_SIZE: number = 64;\n\n/**\n * @internal\n */\nexport const DIGEST_LENGTH: number = 32;\n\n/**\n * @internal\n */\nexport const KEY = new Uint32Array([\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n]);\n\n/**\n * @internal\n */\nexport const INIT = [\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n];\n\n/**\n * @internal\n */\nexport const MAX_HASHABLE_LENGTH = 2 ** 53 - 1;\n", "import {\n  BLOCK_SIZE,\n  DIGEST_LENGTH,\n  INIT,\n  KEY,\n  MAX_HASHABLE_LENGTH\n} from \"./constants\";\n\n/**\n * @internal\n */\nexport class RawSha256 {\n  private state: Int32Array = Int32Array.from(INIT);\n  private temp: Int32Array = new Int32Array(64);\n  private buffer: Uint8Array = new Uint8Array(64);\n  private bufferLength: number = 0;\n  private bytesHashed: number = 0;\n\n  /**\n   * @internal\n   */\n  finished: boolean = false;\n\n  update(data: Uint8Array): void {\n    if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    let position = 0;\n    let { byteLength } = data;\n    this.bytesHashed += byteLength;\n\n    if (this.bytesHashed * 8 > MAX_HASHABLE_LENGTH) {\n      throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n    }\n\n    while (byteLength > 0) {\n      this.buffer[this.bufferLength++] = data[position++];\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  }\n\n  digest(): Uint8Array {\n    if (!this.finished) {\n      const bitsHashed = this.bytesHashed * 8;\n      const bufferView = new DataView(\n        this.buffer.buffer,\n        this.buffer.byteOffset,\n        this.buffer.byteLength\n      );\n\n      const undecoratedLength = this.bufferLength;\n      bufferView.setUint8(this.bufferLength++, 0x80);\n\n      // Ensure the final block has enough room for the hashed length\n      if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n        for (let i = this.bufferLength; i < BLOCK_SIZE; i++) {\n          bufferView.setUint8(i, 0);\n        }\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n\n      for (let i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n        bufferView.setUint8(i, 0);\n      }\n      bufferView.setUint32(\n        BLOCK_SIZE - 8,\n        Math.floor(bitsHashed / 0x100000000),\n        true\n      );\n      bufferView.setUint32(BLOCK_SIZE - 4, bitsHashed);\n\n      this.hashBuffer();\n\n      this.finished = true;\n    }\n\n    // The value in state is little-endian rather than big-endian, so flip\n    // each word into a new Uint8Array\n    const out = new Uint8Array(DIGEST_LENGTH);\n    for (let i = 0; i < 8; i++) {\n      out[i * 4] = (this.state[i] >>> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return out;\n  }\n\n  private hashBuffer(): void {\n    const { buffer, state } = this;\n\n    let state0 = state[0],\n      state1 = state[1],\n      state2 = state[2],\n      state3 = state[3],\n      state4 = state[4],\n      state5 = state[5],\n      state6 = state[6],\n      state7 = state[7];\n\n    for (let i = 0; i < BLOCK_SIZE; i++) {\n      if (i < 16) {\n        this.temp[i] =\n          ((buffer[i * 4] & 0xff) << 24) |\n          ((buffer[i * 4 + 1] & 0xff) << 16) |\n          ((buffer[i * 4 + 2] & 0xff) << 8) |\n          (buffer[i * 4 + 3] & 0xff);\n      } else {\n        let u = this.temp[i - 2];\n        const t1 =\n          ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n\n        u = this.temp[i - 15];\n        const t2 =\n          ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n\n        this.temp[i] =\n          ((t1 + this.temp[i - 7]) | 0) + ((t2 + this.temp[i - 16]) | 0);\n      }\n\n      const t1 =\n        ((((((state4 >>> 6) | (state4 << 26)) ^\n          ((state4 >>> 11) | (state4 << 21)) ^\n          ((state4 >>> 25) | (state4 << 7))) +\n          ((state4 & state5) ^ (~state4 & state6))) |\n          0) +\n          ((state7 + ((KEY[i] + this.temp[i]) | 0)) | 0)) |\n        0;\n\n      const t2 =\n        ((((state0 >>> 2) | (state0 << 30)) ^\n          ((state0 >>> 13) | (state0 << 19)) ^\n          ((state0 >>> 22) | (state0 << 10))) +\n          ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n        0;\n\n      state7 = state6;\n      state6 = state5;\n      state5 = state4;\n      state4 = (state3 + t1) | 0;\n      state3 = state2;\n      state2 = state1;\n      state1 = state0;\n      state0 = (t1 + t2) | 0;\n    }\n\n    state[0] += state0;\n    state[1] += state1;\n    state[2] += state2;\n    state[3] += state3;\n    state[4] += state4;\n    state[5] += state5;\n    state[6] += state6;\n    state[7] += state7;\n  }\n}\n", "export const fromUtf8 = (input) => new TextEncoder().encode(input);\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\nimport { fromUtf8 as fromUtf8Browser } from \"@smithy/util-utf8\";\n\n// Quick polyfill\nconst fromUtf8 =\n  typeof Buffer !== \"undefined\" && Buffer.from\n    ? (input: string) => Buffer.from(input, \"utf8\")\n    : fromUtf8Browser;\n\nexport function convertToBuffer(data: SourceData): Uint8Array {\n  // Already a Uint8, do nothing\n  if (data instanceof Uint8Array) return data;\n\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(\n      data.buffer,\n      data.byteOffset,\n      data.byteLength / Uint8Array.BYTES_PER_ELEMENT\n    );\n  }\n\n  return new Uint8Array(data);\n}\n", "// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { SourceData } from \"@aws-sdk/types\";\n\nexport function isEmptyData(data: SourceData): boolean {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n", "import { BLOCK_SIZE } from \"./constants\";\nimport { RawSha256 } from \"./RawSha256\";\nimport { Checksum, SourceData } from \"@aws-sdk/types\";\nimport { isEmptyData, convertToBuffer } from \"@aws-crypto/util\";\n\nexport class Sha256 implements Checksum {\n  private readonly secret?: SourceData;\n  private hash: RawSha256;\n  private outer?: RawSha256;\n  private error: any;\n\n  constructor(secret?: SourceData) {\n    this.secret = secret;\n    this.hash = new RawSha256();\n    this.reset();\n  }\n\n  update(toHash: SourceData): void {\n    if (isEmptyData(toHash) || this.error) {\n      return;\n    }\n\n    try {\n      this.hash.update(convertToBuffer(toHash));\n    } catch (e) {\n      this.error = e;\n    }\n  }\n\n  /* This synchronous method keeps compatibility\n   * with the v2 aws-sdk.\n   */\n  digestSync(): Uint8Array {\n    if (this.error) {\n      throw this.error;\n    }\n\n    if (this.outer) {\n      if (!this.outer.finished) {\n        this.outer.update(this.hash.digest());\n      }\n\n      return this.outer.digest();\n    }\n\n    return this.hash.digest();\n  }\n\n  /* The underlying digest method here is synchronous.\n   * To keep the same interface with the other hash functions\n   * the default is to expose this as an async method.\n   * However, it can sometimes be useful to have a sync method.\n   */\n  async digest(): Promise<Uint8Array> {\n    return this.digestSync();\n  }\n\n  reset(): void {\n    this.hash = new RawSha256();\n    if (this.secret) {\n      this.outer = new RawSha256();\n      const inner = bufferFromSecret(this.secret);\n      const outer = new Uint8Array(BLOCK_SIZE);\n      outer.set(inner);\n\n      for (let i = 0; i < BLOCK_SIZE; i++) {\n        inner[i] ^= 0x36;\n        outer[i] ^= 0x5c;\n      }\n\n      this.hash.update(inner);\n      this.outer.update(outer);\n\n      // overwrite the copied key in memory\n      for (let i = 0; i < inner.byteLength; i++) {\n        inner[i] = 0;\n      }\n    }\n  }\n}\n\nfunction bufferFromSecret(secret: SourceData): Uint8Array {\n  let input = convertToBuffer(secret);\n\n  if (input.byteLength > BLOCK_SIZE) {\n    const bufferHash = new RawSha256();\n    bufferHash.update(input);\n    input = bufferHash.digest();\n  }\n\n  const buffer = new Uint8Array(BLOCK_SIZE);\n  buffer.set(input);\n  return buffer;\n}\n", "import { Sha256 } from \"@aws-crypto/sha256-js\";\nimport type { ILibFaust } from \"./LibFaust\";\nimport type { FaustDspFactory, IntVector } from \"./types\";\n\nexport const ab2str = (buf: Uint8Array) => String.fromCharCode.apply(null, buf);\n\nexport const str2ab = (str: string) => {\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return bufView;\n};\nconst sha256 = async (str: string) => {\n    const sha256 = new Sha256();\n    sha256.update(str);\n    const hashArray = Array.from(await sha256.digest());\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, \"0\")).join(\"\");\n    return hashHex;\n};\n\nexport interface IFaustCompiler {\n    /**\n     * Gives the Faust compiler version.\n     * @return a version string\n     */\n    version(): string;\n\n    /**\n     * Gives the last compilation error.\n     * @return an error string\n     */\n    getErrorMessage(): string;\n\n    /**\n     * Create a wasm factory from Faust code i.e. wasm compiled code, to be used to create monophonic instances. \n     * This function is running asynchronously.\n     *\n     * @param name - an arbitrary name for the Faust factory\n     * @param code - Faust dsp code\n     * @param args - the compiler options\n     * @returns returns the wasm factory\n     */\n    createMonoDSPFactory(name: string, code: string, args: string): Promise<FaustDspFactory | null>;\n\n    /**\n     * Create a wasm factory from Faust code i.e. wasm compiled code, to be used to create polyphonic instances. \n     * This function is running asynchronously.\n     *\n     * @param name - an arbitrary name for the Faust factory\n     * @param code - Faust dsp code\n     * @param args - the compiler options\n     * @returns returns the wasm factory\n     */\n    createPolyDSPFactory(name: string, code: string, args: string): Promise<FaustDspFactory | null>;\n\n    /**\n     * Delete a dsp factory.\n     *\n     * @param factory - the factory to be deleted\n     */\n    deleteDSPFactory(factory: FaustDspFactory): void;\n\n    /**\n     * Expand Faust code i.e. linearize included libraries.\n     *\n     * @param code - Faust dsp code\n     * @param args - the compiler options\n     * @returns returns the expanded dsp code\n     */\n    expandDSP(code: string, args: string): string | null;\n\n    /**\n     * Generates auxiliary files from Faust code. The output depends on the compiler options.\n     *\n     * @param name - an arbitrary name for the Faust module\n     * @param code - Faust dsp code\n     * @param args - the compiler options\n     * @returns whether the generation actually succeded\n     */\n    generateAuxFiles(name: string, code: string, args: string): boolean;\n\n    /**\n     * Delete all factories.\n     */\n    deleteAllDSPFactories(): void;\n\n    fs(): typeof FS;\n\n    getAsyncInternalMixerModule(isDouble?: boolean): Promise<{ mixerBuffer: Uint8Array; mixerModule: WebAssembly.Module }>;\n    getSyncInternalMixerModule(isDouble?: boolean): { mixerBuffer: Uint8Array; mixerModule: WebAssembly.Module };\n}\n\nclass FaustCompiler implements IFaustCompiler {\n    private fLibFaust: ILibFaust;\n    private fErrorMessage: string;\n    private static gFactories: Map<string, FaustDspFactory> = new Map<string, FaustDspFactory>();\n    private mixer32Buffer!: Uint8Array;\n    private mixer64Buffer!: Uint8Array;\n    private mixer32Module!: WebAssembly.Module;\n    private mixer64Module!: WebAssembly.Module;\n\n    /**\n     * Get a stringified DSP factories table\n     */\n    static serializeDSPFactories() {\n        const table: Record<string, { code: string, json: any; poly: boolean }> = {};\n        this.gFactories.forEach((factory, shaKey) => {\n            const { code, json, poly } = factory;\n            table[shaKey] = { code: btoa(ab2str(code)), json: JSON.parse(json), poly };\n        });\n        return table;\n    }\n    /**\n     * Get a stringified DSP factories table as string\n     */\n    static stringifyDSPFactories() {\n        return JSON.stringify(this.serializeDSPFactories());\n    }\n    /**\n     * Import a DSP factories table\n     */\n    static deserializeDSPFactories(table: Record<string, { code: string, json: any; poly: boolean }>) {\n        const awaited: Promise<Map<string, FaustDspFactory>>[] = [];\n        for (const shaKey in table) {\n            const factory = table[shaKey];\n            const { code, json, poly } = factory;\n            const ab = str2ab(atob(code))\n            awaited.push(WebAssembly.compile(ab).then(module => this.gFactories.set(shaKey, { shaKey, cfactory: 0, code: ab, module, json: JSON.stringify(json), poly, soundfiles: {} })));\n        }\n        return Promise.all(awaited);\n    }\n    /**\n     * Import a stringified DSP factories table\n     */\n    static importDSPFactories(tableStr: string) {\n        const table: Record<string, { code: string, json: any; poly: boolean }> = JSON.parse(tableStr);\n        return this.deserializeDSPFactories(table);\n    }\n    constructor(libFaust: ILibFaust) {\n        this.fLibFaust = libFaust;\n        this.fErrorMessage = \"\";\n    }\n    private intVec2intArray(vec: IntVector) {\n        const size = vec.size();\n        const ui8Code = new Uint8Array(size);\n        for (let i = 0; i < size; i++) {\n            ui8Code[i] = vec.get(i);\n        }\n        return ui8Code;\n    }\n    private async createDSPFactory(name: string, code: string, args: string, poly: boolean) {\n        // Cleanup the cache\n        if (FaustCompiler.gFactories.size > 10) {\n            FaustCompiler.gFactories.clear();\n        }\n\n        // If code is already compiled, return the cached factory\n        let shaKey = await sha256(name + code + args + (poly ? \"poly\" : \"mono\"));\n        if (FaustCompiler.gFactories.has(shaKey)) {\n            return FaustCompiler.gFactories.get(shaKey) || null;\n        } else {\n            try {\n                // Can possibly raise a C++ exception catched by the second catch()\n                const faustDspWasm = this.fLibFaust.createDSPFactory(name, code, args, !poly);\n                const ui8Code = this.intVec2intArray(faustDspWasm.data);\n                faustDspWasm.data.delete();\n                const module = await WebAssembly.compile(ui8Code);\n                const factory: FaustDspFactory = { shaKey, cfactory: faustDspWasm.cfactory, code: ui8Code, module, json: faustDspWasm.json, poly, soundfiles: {} };\n                // Factory C++ side can be deallocated immediately\n                this.deleteDSPFactory(factory);\n                // Keep the compiled factory in the cache\n                FaustCompiler.gFactories.set(shaKey, factory);\n                return factory;\n            } catch (e) {\n                this.fErrorMessage = this.fLibFaust.getErrorAfterException();\n                // console.error(`=> exception raised while running createDSPFactory: ${this.fErrorMessage}`, e);\n                this.fLibFaust.cleanupAfterException();\n                throw this.fErrorMessage ? new Error(this.fErrorMessage) : e;\n            }\n        }\n    }\n    version() {\n        return this.fLibFaust.version();\n    }\n    getErrorMessage() {\n        return this.fErrorMessage;\n    }\n    async createMonoDSPFactory(name: string, code: string, args: string) {\n        return this.createDSPFactory(name, code, args, false);\n    }\n    async createPolyDSPFactory(name: string, code: string, args: string) {\n        return this.createDSPFactory(name, code, args, true);\n    }\n    deleteDSPFactory(factory: FaustDspFactory) {\n        this.fLibFaust.deleteDSPFactory(factory.cfactory);\n        factory.cfactory = 0;\n    }\n    expandDSP(code: string, args: string) {\n        try {\n            return this.fLibFaust.expandDSP(\"FaustDSP\", code, args);\n        } catch (e) {\n            this.fErrorMessage = this.fLibFaust.getErrorAfterException();\n            // console.error(`=> exception raised while running expandDSP: ${this.fErrorMessage}`);\n            this.fLibFaust.cleanupAfterException();\n            throw this.fErrorMessage ? new Error(this.fErrorMessage) : e;\n        }\n    }\n    generateAuxFiles(name: string, code: string, args: string) {\n        try {\n            return this.fLibFaust.generateAuxFiles(name, code, args);\n        } catch (e) {\n            this.fErrorMessage = this.fLibFaust.getErrorAfterException();\n            // console.error(`=> exception raised while running generateAuxFiles: ${this.fErrorMessage}`);\n            this.fLibFaust.cleanupAfterException();\n            throw this.fErrorMessage ? new Error(this.fErrorMessage) : e;\n        }\n    }\n    deleteAllDSPFactories(): void {\n        this.fLibFaust.deleteAllDSPFactories();\n    }\n    fs() {\n        return this.fLibFaust.fs();\n    }\n    async getAsyncInternalMixerModule(isDouble = false) {\n        const bufferKey = isDouble ? \"mixer64Buffer\" : \"mixer32Buffer\";\n        const moduleKey = isDouble ? \"mixer64Module\" : \"mixer32Module\";\n        if (this[moduleKey]) return { mixerBuffer: this[bufferKey], mixerModule: this[moduleKey] };\n        const path = isDouble ? \"/usr/rsrc/mixer64.wasm\" : \"/usr/rsrc/mixer32.wasm\";\n        const mixerBuffer = this.fs().readFile(path, { encoding: \"binary\" });\n        this[bufferKey] = mixerBuffer;\n        // Compile mixer\n        const mixerModule = await WebAssembly.compile(mixerBuffer);\n        this[moduleKey] = mixerModule;\n        return { mixerBuffer, mixerModule };\n    }\n    getSyncInternalMixerModule(isDouble = false) {\n        const bufferKey = isDouble ? \"mixer64Buffer\" : \"mixer32Buffer\";\n        const moduleKey = isDouble ? \"mixer64Module\" : \"mixer32Module\";\n        if (this[moduleKey]) return { mixerBuffer: this[bufferKey], mixerModule: this[moduleKey] };\n        const path = isDouble ? \"/usr/rsrc/mixer64.wasm\" : \"/usr/rsrc/mixer32.wasm\";\n        const mixerBuffer = this.fs().readFile(path, { encoding: \"binary\" });\n        this[bufferKey] = mixerBuffer;\n        // Compile mixer\n        const mixerModule = new WebAssembly.Module(mixerBuffer);\n        this[moduleKey] = mixerModule;\n        return { mixerBuffer, mixerModule };\n    }\n}\n\nexport default FaustCompiler;\n", "/**\n * The Faust wasm instance interface.\n */\nexport interface IFaustDspInstance {\n    /**\n     * The dsp computation, to be called with successive input/output audio buffers.\n     *\n     * @param $dsp - the DSP pointer\n     * @param count - the audio buffer size in frames\n     * @param $inputs - the input audio buffer as in index in wasm memory\n     * @param $output - the output audio buffer as in index in wasm memory\n     */\n    compute($dsp: number, count: number, $inputs: number, $output: number): void;\n\n    /**\n     * Give the number of inputs of a Faust wasm instance.\n     * \n     * @param $dsp - the DSP pointer\n     */\n    getNumInputs($dsp: number): number;\n\n    /**\n     * Give the number of outputs of a Faust wasm instance.\n     * \n     * @param $dsp - the DSP pointer\n     */\n    getNumOutputs($dsp: number): number;\n\n    /**\n     * Give a parameter current value.\n     * \n     * @param $dsp - the DSP pointer\n     * @param index - the parameter index\n     * @return the parameter value\n     */\n    getParamValue($dsp: number, index: number): number;\n\n    /**\n     * Give the Faust wasm instance sample rate.\n     * \n     * @param $dsp - the DSP pointer\n     * @return the sample rate\n     */\n    getSampleRate($dsp: number): number;\n\n    /**\n     * Global init, calls the following methods:\n     * - static class 'classInit': static tables initialization\n     * - 'instanceInit': constants and instance state initialization\n     *\n     * @param $dsp - the DSP pointer\n     * @param sampleRate - the sampling rate in Hertz\n     */\n    init($dsp: number, sampleRate: number): void;\n\n    /** Init instance state (delay lines...).\n     * \n     * @param $dsp - the DSP pointer\n     */\n    instanceClear($dsp: number): void;\n\n    /** Init instance constant state.\n     * \n     * @param $dsp - the DSP pointer\n     * @param sampleRate - the sampling rate in Hertz\n     */\n    instanceConstants($dsp: number, sampleRate: number): void;\n\n    /** Init instance state.\n     * \n     * @param $dsp - the DSP pointer\n     * @param sampleRate - the sampling rate in Hertz\n     */\n    instanceInit($dsp: number, sampleRate: number): void;\n\n    /** Init default control parameters values.\n     * \n     * @param $dsp - the DSP pointer\n     */\n    instanceResetUserInterface($dsp: number): void;\n\n    /**\n     * Set a parameter current value.\n     * \n     * @param $dsp - the DSP pointer\n     * @param index - the parameter index\n     * @param value - the parameter value\n     */\n    setParamValue($dsp: number, index: number, value: number): void;\n}\n\n/**\n * Mixer used in polyphonic mode.\n */\nexport interface IFaustMixerInstance {\n    clearOutput(bufferSize: number, chans: number, $outputs: number): void;\n    mixCheckVoice(bufferSize: number, chans: number, $inputs: number, $outputs: number): number;\n    fadeOut(bufferSize: number, chans: number, $outputs: number): void;\n}\n\n/**\n * Monophonic instance.\n */\nexport interface FaustMonoDspInstance {\n    memory: WebAssembly.Memory;\n    api: IFaustDspInstance;\n    json: string;\n}\n\n/**\n * Polyphonic instance.\n */\nexport interface FaustPolyDspInstance {\n    memory: WebAssembly.Memory;\n    voices: number;\n    voiceAPI: IFaustDspInstance;\n    effectAPI?: IFaustDspInstance;\n    mixerAPI: IFaustMixerInstance;\n    voiceJSON: string;\n    effectJSON?: string;\n}\n\nexport class FaustDspInstance implements IFaustDspInstance {\n    private readonly fExports: IFaustDspInstance;\n\n    constructor(exports: IFaustDspInstance) { this.fExports = exports; }\n\n    compute($dsp: number, count: number, $input: number, $output: number) { this.fExports.compute($dsp, count, $input, $output); }\n    getNumInputs($dsp: number) { return this.fExports.getNumInputs($dsp); }\n    getNumOutputs($dsp: number) { return this.fExports.getNumOutputs($dsp); }\n    getParamValue($dsp: number, index: number) { return this.fExports.getParamValue($dsp, index); }\n    getSampleRate($dsp: number) { return this.fExports.getSampleRate($dsp); }\n    init($dsp: number, sampleRate: number) { this.fExports.init($dsp, sampleRate); }\n    instanceClear($dsp: number) { this.fExports.instanceClear($dsp); }\n    instanceConstants($dsp: number, sampleRate: number) { this.fExports.instanceConstants($dsp, sampleRate); }\n    instanceInit($dsp: number, sampleRate: number) { this.fExports.instanceInit($dsp, sampleRate); }\n    instanceResetUserInterface($dsp: number) { this.fExports.instanceResetUserInterface($dsp); }\n    setParamValue($dsp: number, index: number, value: number) { this.fExports.setParamValue($dsp, index, value); }\n}\n", "import { FaustDspInstance, FaustMonoDspInstance, FaustPolyDspInstance, IFaustDspInstance, IFaustMixerInstance } from \"./FaustDspInstance\";\nimport type { FaustDspFactory, FaustDspMeta, LooseFaustDspFactory } from \"./types\";\n\nclass FaustWasmInstantiator {\n    private static createWasmImport(memory?: WebAssembly.Memory) {\n        return {\n            env: {\n                memory: memory || new WebAssembly.Memory({ initial: 100 }),\n                memoryBase: 0,\n                tableBase: 0,\n                // Integer version\n                _abs: Math.abs,\n                // Float version\n                _acosf: Math.acos, _asinf: Math.asin, _atanf: Math.atan, _atan2f: Math.atan2,\n                _ceilf: Math.ceil, _cosf: Math.cos, _expf: Math.exp, _floorf: Math.floor,\n                _fmodf: (x: number, y: number) => x % y,\n                _logf: Math.log, _log10f: Math.log10, _max_f: Math.max, _min_f: Math.min,\n                _remainderf: (x: number, y: number) => x - Math.round(x / y) * y,\n                _powf: Math.pow, _roundf: Math.round, _sinf: Math.sin, _sqrtf: Math.sqrt, _tanf: Math.tan,\n                _acoshf: Math.acosh, _asinhf: Math.asinh, _atanhf: Math.atanh,\n                _coshf: Math.cosh, _sinhf: Math.sinh, _tanhf: Math.tanh,\n                _isnanf: Number.isNaN, _isinff: (x: number) => !isFinite(x),\n                _copysignf: (x: number, y: number) => (Math.sign(x) === Math.sign(y) ? x : -x),\n\n                // Double version\n                _acos: Math.acos, _asin: Math.asin, _atan: Math.atan, _atan2: Math.atan2,\n                _ceil: Math.ceil, _cos: Math.cos, _exp: Math.exp, _floor: Math.floor,\n                _fmod: (x: number, y: number) => x % y,\n                _log: Math.log, _log10: Math.log10, _max_: Math.max, _min_: Math.min,\n                _remainder: (x: number, y: number) => x - Math.round(x / y) * y,\n                _pow: Math.pow, _round: Math.round, _sin: Math.sin, _sqrt: Math.sqrt, _tan: Math.tan,\n                _acosh: Math.acosh, _asinh: Math.asinh, _atanh: Math.atanh,\n                _cosh: Math.cosh, _sinh: Math.sinh, _tanh: Math.tanh,\n                _isnan: Number.isNaN, _isinf: (x: number) => !isFinite(x),\n                _copysign: (x: number, y: number) => (Math.sign(x) === Math.sign(y) ? x : -x),\n\n                table: new WebAssembly.Table({ initial: 0, element: \"anyfunc\" })\n            }\n        };\n    }\n    private static createWasmMemoryPoly(voicesIn: number, sampleSize: number, dspMeta: FaustDspMeta, effectMeta: FaustDspMeta, bufferSize: number) {\n        // Hack : at least 4 voices (to avoid weird wasm memory bug?)\n        const voices = Math.max(4, voicesIn);\n        // Memory allocator\n        const ptrSize = sampleSize; // Done on wast/wasm backend side\n        const pow2limit = (x: number) => {\n            let n = 65536; // Minimum = 64 kB\n            while (n < x) { n *= 2; }\n            return n;\n        };\n        const effectSize = effectMeta ? effectMeta.size : 0;\n        let memorySize = pow2limit(\n            effectSize\n            + dspMeta.size * voices\n            + (dspMeta.inputs + dspMeta.outputs * 2)  // + 2 for effect\n            * (ptrSize + bufferSize * sampleSize)\n        ) / 65536;\n        memorySize = Math.max(2, memorySize); // At least 2\n        return new WebAssembly.Memory({ initial: memorySize });\n    };\n\n    private static createWasmMemoryMono(sampleSize: number, dspMeta: FaustDspMeta, bufferSize: number) {\n        // Memory allocator\n        const ptrSize = sampleSize; // Done on wast/wasm backend side\n        const memorySize = (dspMeta.size + (dspMeta.inputs + dspMeta.outputs) * (ptrSize + bufferSize * sampleSize)) / 65536;\n        return new WebAssembly.Memory({ initial: memorySize * 2 }); // Safer to have a bit more memory\n    }\n\n    private static createMonoDSPInstanceAux(instance: WebAssembly.Instance, json: string, mem: WebAssembly.Memory | null = null) {\n        const functions = instance.exports as IFaustDspInstance & WebAssembly.Exports;\n        const api = new FaustDspInstance(functions);\n        const memory: any = (mem) ? mem : instance.exports.memory;\n        return { memory, api, json } as FaustMonoDspInstance;\n    }\n\n    private static createMemoryMono(monoFactory: LooseFaustDspFactory) {\n        // Parse JSON to get 'size' and 'inputs/outputs' infos\n        const monoMeta: FaustDspMeta = JSON.parse(monoFactory.json);\n        const sampleSize = monoMeta.compile_options.match(\"-double\") ? 8 : 4;\n        return this.createWasmMemoryMono(sampleSize, monoMeta, 8192);\n\n    }\n    private static createMemoryPoly(voices: number, voiceFactory: LooseFaustDspFactory, effectFactory?: LooseFaustDspFactory) {\n        // Parse JSON to get 'size' and 'inputs/outputs' infos\n        const voiceMeta: FaustDspMeta = JSON.parse(voiceFactory.json);\n        const effectMeta: FaustDspMeta = (effectFactory && effectFactory.json) ? JSON.parse(effectFactory.json) : null;\n        const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n        // Memory will be shared by voice, mixer and (possibly) effect instances\n        return this.createWasmMemoryPoly(voices, sampleSize, voiceMeta, effectMeta, 8192);\n    }\n\n    private static createMixerAux(mixerModule: WebAssembly.Module, memory: WebAssembly.Memory) {\n        // Create mixer instance\n        const mixerImport = {\n            imports: { print: console.log },\n            memory: { memory }\n        };\n        const mixerInstance = new WebAssembly.Instance(mixerModule, mixerImport);\n        const mixerFunctions = mixerInstance.exports as IFaustMixerInstance & WebAssembly.Exports;\n        return mixerFunctions;\n    }\n\n    // Public API\n    static async loadDSPFactory(wasmPath: string, jsonPath: string) {\n        const wasmFile = await fetch(wasmPath);\n        if (!wasmFile.ok) {\n            throw new Error(`=> exception raised while running loadDSPFactory, file not found: ${wasmPath}`);\n        }\n        try {\n            const wasmBuffer = await wasmFile.arrayBuffer();\n            const module = await WebAssembly.compile(wasmBuffer);\n            const jsonFile = await fetch(jsonPath);\n            const json = await jsonFile.text();\n            const meta: FaustDspMeta = JSON.parse(json);\n            const cOptions = meta.compile_options;\n            const poly = cOptions.indexOf('wasm-e') !== -1;\n            return { cfactory: 0, code: new Uint8Array(wasmBuffer), module, json, poly } as FaustDspFactory;\n        } catch (e) {\n            // console.error(`=> exception raised while running loadDSPFactory: ${e}`);\n            throw e;\n        }\n    }\n\n    static async loadDSPMixer(mixerPath: string, fs?: typeof FS) {\n        try {\n            let mixerBuffer = null;\n            if (fs) {\n                mixerBuffer = fs.readFile(mixerPath, { encoding: \"binary\" });\n            } else {\n                const mixerFile = await fetch(mixerPath);\n                mixerBuffer = await mixerFile.arrayBuffer();\n            }\n            // Compile mixer\n            return WebAssembly.compile(mixerBuffer);\n        } catch (e) {\n            // console.error(`=> exception raised while running loadMixer: ${e}`);\n            throw e;\n        }\n    }\n\n    static async createAsyncMonoDSPInstance(factory: LooseFaustDspFactory) {\n\n        // Regular expression to match the 'type: soundfile' pattern\n        const pattern = /\"type\":\\s*\"soundfile\"/;\n        // Check if the pattern exists in the JSON string\n        const isDetected = pattern.test(factory.json);\n\n        if (isDetected) {\n            const memory = this.createMemoryMono(factory);\n            const instance = await WebAssembly.instantiate(factory.module, this.createWasmImport(memory));\n            return this.createMonoDSPInstanceAux(instance, factory.json, memory);\n        } else {\n            // Otherwise, we can create the instance using the wasm internal memory allocated by the wasm module\n            const instance = await WebAssembly.instantiate(factory.module, this.createWasmImport());\n            return this.createMonoDSPInstanceAux(instance, factory.json);\n        }\n    }\n\n    static createSyncMonoDSPInstance(factory: LooseFaustDspFactory) {\n\n        // Regular expression to match the 'type: soundfile' pattern\n        const pattern = /\"type\":\\s*\"soundfile\"/;\n        // Check if the pattern exists in the JSON string\n        const isDetected = pattern.test(factory.json);\n\n        // If the JSON contains a soundfile UI element, we need to create a memory object\n        if (isDetected) {\n            const memory = this.createMemoryMono(factory);\n            const instance = new WebAssembly.Instance(factory.module, this.createWasmImport(memory));\n            return this.createMonoDSPInstanceAux(instance, factory.json, memory);\n        } else {\n            // Otherwise, we can create the instance using the wasm internal memory allocated by the wasm module\n            const instance = new WebAssembly.Instance(factory.module, this.createWasmImport());\n            return this.createMonoDSPInstanceAux(instance, factory.json);\n        }\n    }\n\n    static async createAsyncPolyDSPInstance(voiceFactory: LooseFaustDspFactory, mixerModule: WebAssembly.Module, voices: number, effectFactory?: LooseFaustDspFactory): Promise<FaustPolyDspInstance> {\n        const memory = this.createMemoryPoly(voices, voiceFactory, effectFactory);\n        // Create voice \n        const voiceInstance = await WebAssembly.instantiate(voiceFactory.module, this.createWasmImport(memory));\n        const voiceFunctions = voiceInstance.exports as IFaustDspInstance & WebAssembly.Exports;\n        const voiceAPI = new FaustDspInstance(voiceFunctions);\n        // Create mixer\n        const mixerAPI = this.createMixerAux(mixerModule, memory);\n\n        // Possibly create effect instance \n        if (effectFactory) {\n            const effectInstance = await WebAssembly.instantiate(effectFactory.module, this.createWasmImport(memory));\n            const effectFunctions = effectInstance.exports as IFaustDspInstance & WebAssembly.Exports;\n            const effectAPI = new FaustDspInstance(effectFunctions);\n            return {\n                memory,\n                voices,\n                voiceAPI,\n                effectAPI,\n                mixerAPI,\n                voiceJSON: voiceFactory.json,\n                effectJSON: effectFactory.json\n            } as FaustPolyDspInstance;\n        } else {\n            return {\n                memory,\n                voices,\n                voiceAPI,\n                mixerAPI,\n                voiceJSON: voiceFactory.json\n            } as FaustPolyDspInstance;\n        }\n    }\n\n    static createSyncPolyDSPInstance(voiceFactory: LooseFaustDspFactory, mixerModule: WebAssembly.Module, voices: number, effectFactory?: LooseFaustDspFactory): FaustPolyDspInstance {\n        const memory = this.createMemoryPoly(voices, voiceFactory, effectFactory);\n        // Create voice \n        const voiceInstance = new WebAssembly.Instance(voiceFactory.module, this.createWasmImport(memory));\n        const voiceFunctions = voiceInstance.exports as IFaustDspInstance & WebAssembly.Exports;\n        const voiceAPI = new FaustDspInstance(voiceFunctions);\n        // Create mixer\n        const mixerAPI = this.createMixerAux(mixerModule, memory);\n\n        // Possibly create effect instance \n        if (effectFactory) {\n            const effectInstance = new WebAssembly.Instance(effectFactory.module, this.createWasmImport(memory));\n            const effectFunctions = effectInstance.exports as IFaustDspInstance & WebAssembly.Exports;\n            const effectAPI = new FaustDspInstance(effectFunctions);\n            return {\n                memory,\n                voices,\n                voiceAPI,\n                effectAPI,\n                mixerAPI,\n                voiceJSON: voiceFactory.json,\n                effectJSON: effectFactory.json\n            } as FaustPolyDspInstance;\n        } else {\n            return {\n                memory,\n                voices,\n                voiceAPI,\n                mixerAPI,\n                voiceJSON: voiceFactory.json\n            } as FaustPolyDspInstance;\n        }\n    }\n}\n\nexport default FaustWasmInstantiator;\n", "\uFEFFexport interface AccParams {\n    isEnabled: boolean;\n    acc: string;\n    address: string;\n    min: number;\n    max: number;\n    init: number;\n    label: string;\n}\n\n/** Enum describing the axis of the accelerometer or gyroscope */\nexport enum Axis { x, y, z }\n\n/** Enum describing the curve of the accelerometer */\nexport enum Curve { Up, Down, UpDown, DownUp }\n\n/** Object describing value off accelerometer metadata values */\nclass AccMeta {\n    axis: Axis;\n    curve: Curve;\n    amin: number;\n    amid: number;\n    amax: number;\n}\n\ninterface Range {\n    fLo: number;\n    fHi: number;\n    clip(x: number): number;\n}\n\ninterface InterpolateObject {\n    amin: number;\n    amax: number;\n}\ninterface Interpolator {\n    fRange: Range;\n    fCoef: number;\n    fOffset: number;\n    returnMappedValue(v: number): number;\n    getLowHigh(amin: number, amax: number): InterpolateObject;\n}\n\ninterface InterpolateObject3pt {\n    amin: number;\n    amid: number;\n    amax: number;\n}\ninterface Interpolator3pt {\n    fSegment1: Interpolator;\n    fSegment2: Interpolator;\n    fMid: number;\n    returnMappedValue(v: number): number;\n    getMappingValues(amin: number, amid: number, amax: number): InterpolateObject3pt;\n}\n\n/**\n * ValueConverter interface\n */\ninterface ValueConverter {\n    uiToFaust(x: number): number;\n    faustToUi(x: number): number;\n}\n\n/**\n * UpdatableValueConverter interface\n */\nexport interface UpdatableValueConverter extends ValueConverter {\n    fActive: boolean;\n\n    setMappingValues(amin: number, amid: number, amax: number, min: number, init: number, max: number): void;\n    getMappingValues(amin: number, amid: number, amax: number): InterpolateObject3pt;\n\n    setActive(onOff: boolean): void;\n    getActive(): boolean;\n}\n\nexport default class FaustSensors {\n    /**\n     * Function to convert a number to an axis type\n     * \n     * @param value number\n     * @returns axis type\n     */\n    static convertToAxis(value: number): Axis {\n        switch (value) {\n            case 0:\n                return Axis.x;\n            case 1:\n                return Axis.y;\n            case 2:\n                return Axis.z;\n            default:\n                console.error(\"Error: Axis not found value: \" + value);\n                return Axis.x;\n        }\n    }\n    /**\n     * Function to convert a number to a curve type\n     * \n     * @param value number\n     * @returns curve type\n     */\n    static convertToCurve(value: number): Curve {\n        switch (value) {\n            case 0:\n                return Curve.Up;\n            case 1:\n                return Curve.Down;\n            case 2:\n                return Curve.UpDown;\n            case 3:\n                return Curve.DownUp;\n            default:\n                console.error(\"Error: Curve not found value: \" + value);\n                return Curve.Up;\n        }\n    }\n\n    // Converter objects use to map acc and Faust value\n    static _Range: new (x: number, y: number) => Range;\n    static get Range() {\n        if (!this._Range) {\n            this._Range = class {\n                fLo: number;\n                fHi: number;\n\n                constructor(x: number, y: number) {\n                    this.fLo = Math.min(x, y);\n                    this.fHi = Math.max(x, y);\n                }\n\n                clip(x: number): number {\n                    if (x < this.fLo) return this.fLo;\n                    if (x > this.fHi) return this.fHi;\n                    return x;\n                }\n            };\n        }\n        return this._Range;\n    }\n\n    static _Interpolator: new (lo: number, hi: number, v1: number, v2: number) => Interpolator;\n    /**\n     * Interpolator class\n     */\n    static get Interpolator() {\n        if (!this._Interpolator) {\n            this._Interpolator = class {\n                fRange: Range;\n                fCoef: number;\n                fOffset: number;\n\n                constructor(lo: number, hi: number, v1: number, v2: number) {\n                    this.fRange = new FaustSensors.Range(lo, hi);\n                    if (hi !== lo) {\n                        // regular case\n                        this.fCoef = (v2 - v1) / (hi - lo);\n                        this.fOffset = v1 - lo * this.fCoef;\n                    } else {\n                        // degenerate case, avoids division by zero\n                        this.fCoef = 0;\n                        this.fOffset = (v1 + v2) / 2;\n                    }\n                }\n                returnMappedValue(v: number): number {\n                    var x = this.fRange.clip(v);\n                    return this.fOffset + x * this.fCoef;\n                }\n                getLowHigh(amin: number, amax: number): InterpolateObject {\n                    return { amin: this.fRange.fLo, amax: this.fRange.fHi };\n                }\n            };\n        }\n        return this._Interpolator;\n    }\n\n    static _Interpolator3pt: new (lo: number, mid: number, hi: number, v1: number, vMid: number, v2: number) => Interpolator3pt;\n    /**\n     * Interpolator3pt class, combine two interpolators\n     */\n    static get Interpolator3pt() {\n        if (!this._Interpolator3pt) {\n            this._Interpolator3pt = class {\n\n                fSegment1: Interpolator;\n                fSegment2: Interpolator;\n                fMid: number;\n\n                constructor(lo: number, mid: number, hi: number, v1: number, vMid: number, v2: number) {\n                    this.fSegment1 = new FaustSensors.Interpolator(lo, mid, v1, vMid);\n                    this.fSegment2 = new FaustSensors.Interpolator(mid, hi, vMid, v2);\n                    this.fMid = mid;\n                }\n                returnMappedValue(x: number): number {\n                    return (x < this.fMid) ? this.fSegment1.returnMappedValue(x) : this.fSegment2.returnMappedValue(x);\n                }\n\n                getMappingValues(amin: number, amid: number, amax: number): InterpolateObject3pt {\n                    var lowHighSegment1 = this.fSegment1.getLowHigh(amin, amid);\n                    var lowHighSegment2 = this.fSegment2.getLowHigh(amid, amax);\n                    return { amin: lowHighSegment1.amin, amid: lowHighSegment2.amin, amax: lowHighSegment2.amax };\n                }\n            }\n\n        }\n        return this._Interpolator3pt;\n    }\n    static _UpConverter: new (amin: number, amid: number, amax: number, fmin: number, fmid: number, fmax: number) => UpdatableValueConverter;\n    /**\n     * UpConverter class, convert accelerometer value to Faust value\n     */\n    static get UpConverter() {\n        if (!this._UpConverter) {\n            this._UpConverter = class implements UpdatableValueConverter {\n\n                fA2F: Interpolator3pt;\n                fF2A: Interpolator3pt;\n                fActive: boolean = true;\n\n                constructor(amin: number, amid: number, amax: number, fmin: number, fmid: number, fmax: number) {\n                    this.fA2F = new FaustSensors.Interpolator3pt(amin, amid, amax, fmin, fmid, fmax);\n                    this.fF2A = new FaustSensors.Interpolator3pt(fmin, fmid, fmax, amin, amid, amax);\n                }\n\n                uiToFaust(x: number) { return this.fA2F.returnMappedValue(x) }\n                faustToUi(x: number) { return this.fF2A.returnMappedValue(x) }\n\n                setMappingValues(amin: number, amid: number, amax: number, min: number, init: number, max: number): void {\n                    this.fA2F = new FaustSensors.Interpolator3pt(amin, amid, amax, min, init, max);\n                    this.fF2A = new FaustSensors.Interpolator3pt(min, init, max, amin, amid, amax);\n                }\n\n                getMappingValues(amin: number, amid: number, amax: number): InterpolateObject3pt {\n                    return this.fA2F.getMappingValues(amin, amid, amax);\n                }\n\n                setActive(onOff: boolean): void { this.fActive = onOff }\n                getActive(): boolean { return this.fActive }\n            }\n\n        }\n        return this._UpConverter;\n    }\n    static _DownConverter: new (amin: number, amid: number, amax: number, fmin: number, fmid: number, fmax: number) => UpdatableValueConverter;\n    /**\n     * DownConverter class, convert accelerometer value to Faust value\n     */\n    static get DownConverter() {\n        if (!this._DownConverter) {\n            this._DownConverter = class implements UpdatableValueConverter {\n\n                fA2F: Interpolator3pt;\n                fF2A: Interpolator3pt;\n                fActive: boolean = true;\n\n                constructor(amin: number, amid: number, amax: number, fmin: number, fmid: number, fmax: number) {\n                    this.fA2F = new FaustSensors.Interpolator3pt(amin, amid, amax, fmax, fmid, fmin);\n                    this.fF2A = new FaustSensors.Interpolator3pt(fmin, fmid, fmax, amax, amid, amin);\n                }\n\n                uiToFaust(x: number) { return this.fA2F.returnMappedValue(x) }\n                faustToUi(x: number) { return this.fF2A.returnMappedValue(x) }\n\n                setMappingValues(amin: number, amid: number, amax: number, min: number, init: number, max: number): void {\n                    this.fA2F = new FaustSensors.Interpolator3pt(amin, amid, amax, max, init, min);\n                    this.fF2A = new FaustSensors.Interpolator3pt(min, init, max, amax, amid, amin);\n                }\n                getMappingValues(amin: number, amid: number, amax: number): InterpolateObject3pt {\n                    return this.fA2F.getMappingValues(amin, amid, amax);\n                }\n\n                setActive(onOff: boolean): void { this.fActive = onOff }\n                getActive(): boolean { return this.fActive }\n            }\n\n        }\n        return this._DownConverter;\n    }\n    static _UpDownConverter: new (amin: number, amid: number, amax: number, fmin: number, fmid: number, fmax: number) => UpdatableValueConverter;\n    /**\n     * UpDownConverter class, convert accelerometer value to Faust value\n     */\n    static get UpDownConverter() {\n        if (!this._UpDownConverter) {\n            this._UpDownConverter = class implements UpdatableValueConverter {\n\n                fA2F: Interpolator3pt;\n                fF2A: Interpolator;\n                fActive: boolean = true;\n\n                constructor(amin: number, amid: number, amax: number, fmin: number, fmid: number, fmax: number) {\n                    this.fA2F = new FaustSensors.Interpolator3pt(amin, amid, amax, fmin, fmax, fmin);\n                    this.fF2A = new FaustSensors.Interpolator(fmin, fmax, amin, amax);\n                }\n\n                uiToFaust(x: number) { return this.fA2F.returnMappedValue(x) }\n                faustToUi(x: number) { return this.fF2A.returnMappedValue(x) }\n\n                setMappingValues(amin: number, amid: number, amax: number, min: number, init: number, max: number): void {\n                    this.fA2F = new FaustSensors.Interpolator3pt(amin, amid, amax, min, max, min);\n                    this.fF2A = new FaustSensors.Interpolator(min, max, amin, amax);\n                }\n                getMappingValues(amin: number, amid: number, amax: number): InterpolateObject3pt {\n                    return this.fA2F.getMappingValues(amin, amid, amax);\n                }\n\n                setActive(onOff: boolean): void { this.fActive = onOff }\n                getActive(): boolean { return this.fActive }\n            }\n\n        }\n        return this._UpDownConverter;\n    }\n    /**\n     * DownUpConverter class, convert accelerometer value to Faust value\n     */\n    static _DownUpConverter: new (amin: number, amid: number, amax: number, fmin: number, fmid: number, fmax: number) => UpdatableValueConverter;\n    static get DownUpConverter() {\n        if (!this._DownUpConverter) {\n            this._DownUpConverter = class implements UpdatableValueConverter {\n\n                fA2F: Interpolator3pt;\n                fF2A: Interpolator;\n                fActive: boolean = true;\n\n                constructor(amin: number, amid: number, amax: number, fmin: number, fmid: number, fmax: number) {\n                    this.fA2F = new FaustSensors.Interpolator3pt(amin, amid, amax, fmax, fmin, fmax);\n                    this.fF2A = new FaustSensors.Interpolator(fmin, fmax, amin, amax);\n                }\n\n                uiToFaust(x: number) { return this.fA2F.returnMappedValue(x) }\n                faustToUi(x: number) { return this.fF2A.returnMappedValue(x) }\n\n                setMappingValues(amin: number, amid: number, amax: number, min: number, init: number, max: number): void {\n                    this.fA2F = new FaustSensors.Interpolator3pt(amin, amid, amax, max, min, max);\n                    this.fF2A = new FaustSensors.Interpolator(min, max, amin, amax);\n                }\n                getMappingValues(amin: number, amid: number, amax: number): InterpolateObject3pt {\n                    return this.fA2F.getMappingValues(amin, amid, amax);\n                }\n\n                setActive(onOff: boolean): void { this.fActive = onOff }\n                getActive(): boolean { return this.fActive }\n            }\n        }\n        return this._DownUpConverter;\n    }\n    /**\n     * Public function to build the accelerometer handler\n     *\n     * @returns `UpdatableValueConverter` built for the given curve\n     */\n    static buildHandler(curve: Curve, amin: number, amid: number, amax: number, min: number, init: number, max: number): UpdatableValueConverter {\n        switch (curve) {\n            case Curve.Up:\n                return new FaustSensors.UpConverter(amin, amid, amax, min, init, max);\n            case Curve.Down:\n                return new FaustSensors.DownConverter(amin, amid, amax, min, init, max);\n            case Curve.UpDown:\n                return new FaustSensors.UpDownConverter(amin, amid, amax, min, init, max);\n            case Curve.DownUp:\n                return new FaustSensors.DownUpConverter(amin, amid, amax, min, init, max);\n            default:\n                return new FaustSensors.UpConverter(amin, amid, amax, min, init, max);\n        }\n    }\n}\n", "import type { FaustMonoDspInstance, FaustPolyDspInstance, IFaustDspInstance } from \"./FaustDspInstance\";\nimport type { AudioData, FaustDspMeta, FaustUIDescriptor, FaustUIGroup, FaustUIInputItem, FaustUIItem, LooseFaustDspFactory } from \"./types\";\nimport FaustSensors, { Axis, Curve, UpdatableValueConverter } from \"./FaustSensors\";\n\n// Public API\nexport type OutputParamHandler = (path: string, value: number) => void;\nexport type ComputeHandler = (buffer_size: number) => void;\nexport type PlotHandler = (plotted: Float32Array[] | Float64Array[], index: number, events?: { type: string; data: any }[]) => void;\nexport type MetadataHandler = (key: string, value: string) => void;\n\n// Implementation API\nexport type UIHandler = (item: FaustUIItem) => void;\n\n// Accelerometer or gyroscope handler\nexport type SensorEventHandler = (val: number) => void;\n\n// Define a type for the accelerometer or gyroscope handlers\nexport type SensorEventHandlers = {\n    x: SensorEventHandler[];\n    y: SensorEventHandler[];\n    z: SensorEventHandler[];\n};\n\n/** Definition of the AudioBufferItem type */\nexport interface AudioBufferItem {\n    pathName: string;\n    audioBuffer: AudioBuffer;\n};\n\n/** Definition of the SoundfileItem type */\nexport interface SoundfileItem {\n    /** Name of the soundfile */\n    name: string;\n    /** URL of the soundfile */\n    url: string;\n    /** Index in the DSP struct */\n    index: number;\n    /** Base pointer in wasm memory */\n    basePtr: number;\n};\n\n/**\n * WasmAllocator is a basic memory management class designed to allocate\n * blocks of memory within a WebAssembly.Memory object. It provides a simple\n * alloc method to allocate a contiguous block of memory of a specified size.\n * \n * The allocator operates by keeping a linear progression through the memory,\n * always allocating the next block at the end of the last. This approach does not\n * handle freeing of memory or reuse of memory spaces.\n */\nexport class WasmAllocator {\n    // The WebAssembly.Memory object this allocator will manage.\n    private readonly memory: WebAssembly.Memory;\n    // The number of bytes currently allocated. This serves as the \"pointer\" to the\n    // next free byte in the memory.\n    private allocatedBytes: number;\n\n    constructor(memory: WebAssembly.Memory, offset: number) {\n        this.memory = memory;\n        // Initialize the allocator with offset allocated bytes.\n        this.allocatedBytes = offset;\n    }\n\n    /**\n     * Allocates a block of memory of the specified size, returning the pointer to the\n     * beginning of the block. The block is allocated at the current offset and the\n     * offset is incremented by the size of the block.\n     * \n     * @param sizeInBytes The size of the block to allocate in bytes.\n     * @returns The offset (pointer) to the beginning of the allocated block.\n     */\n    alloc(sizeInBytes: number): number {\n        // Store the current offset as the start of the new block.\n        const currentOffset = this.allocatedBytes;\n        // Calculate the new offset after allocating the requested block.\n        const newOffset = currentOffset + sizeInBytes;\n        // Get the total size of the WebAssembly memory in bytes.\n        const totalMemoryBytes = this.memory.buffer.byteLength;\n\n        // If the new offset exceeds the total size of the memory, grow the memory.\n        if (newOffset > totalMemoryBytes) {\n            // Calculate the number of WebAssembly pages needed to fit the new allocation.\n            // WebAssembly memory pages are 64KiB each.\n            const neededPages = Math.ceil((newOffset - totalMemoryBytes) / 65536);\n            // Grow the memory by the required number of pages.\n            console.log(`GROW: ${neededPages} pages`);\n            this.memory.grow(neededPages);\n        }\n\n        // Update the allocated bytes to the new offset.\n        this.allocatedBytes = newOffset;\n        // Return the offset at which the allocated block starts.\n        return currentOffset;\n    }\n\n    /**\n     * Returns the underlying buffer object.\n     * \n     * @returns The buffer object.\n     */\n    getBuffer(): ArrayBuffer {\n        return this.memory.buffer;\n    }\n\n    /**\n     * Returns the Int32 view of the underlying buffer object.\n     * \n     * @returns The view of the memory buffer as Int32Array.\n     */\n    getInt32Array(): Int32Array {\n        return new Int32Array(this.memory.buffer);\n    }\n\n    /**\n     * Returns the Int64 view of the underlying buffer object.\n     * \n     * @returns The view of the memory buffer as BigInt64Array.\n     */\n    getInt64Array(): BigInt64Array {\n        return new BigInt64Array(this.memory.buffer);\n    }\n\n    /**\n     * Returns the Float32 view of the underlying buffer object.\n     * \n     * @returns The view of the memory buffer as Float32Array.\n     */\n    getFloat32Array(): Float32Array {\n        return new Float32Array(this.memory.buffer);\n    }\n\n    /**\n     * Returns the Float64 view of the underlying buffer object..\n     * \n     * @returns The view of the memory buffer as Float64Array.\n     */\n    getFloat64Array(): Float64Array {\n        return new Float64Array(this.memory.buffer);\n    }\n}\n\n/**\n * Soundfile class to handle soundfile data in wasm memory.\n */\nexport class Soundfile {\n    /** Maximum number of soundfile parts. */\n    static get MAX_SOUNDFILE_PARTS() { return 256; }\n\n    /** Maximum number of channels. */\n    static get MAX_CHAN() { return 64; }\n\n    /** Maximum buffer size in frames. */\n    static get BUFFER_SIZE() { return 1024; }\n\n    /** Default sample rate. */\n    static get SAMPLE_RATE() { return 44100; }\n\n    /** Pointer to the soundfile structure in wasm memory */\n    private readonly fPtr: number;\n    private readonly fBuffers: number;\n    private readonly fLength: number;\n    private readonly fSR: number;\n    private readonly fOffset: number;\n    private readonly fSampleSize: number;\n    private readonly fPtrSize: number;\n    private readonly fIntSize: number;\n    private readonly fAllocator: WasmAllocator;\n\n    constructor(allocator: WasmAllocator, sampleSize: number, curChan: number, length: number, maxChan: number, totalParts: number) {\n\n        this.fSampleSize = sampleSize;\n\n        // To be coherent with the code generated by the wast/wasm backends:\n        // - that uses 4 bytes for int when float is used\n        // - that uses 8 bytes for int when double is used (to simplify the code generation)\n        this.fIntSize = this.fSampleSize;\n\n        this.fPtrSize = 4;  // Not related to float/double choice, so always 4\n\n        this.fAllocator = allocator;\n\n        console.log(`Soundfile constructor: curChan: ${curChan}, length: ${length}, maxChan: ${maxChan}, totalParts: ${totalParts}`);\n\n        // Allocate wasm memory for the soundfile structure\n        this.fPtr = allocator.alloc(4 * this.fPtrSize); // 4 fPtrSize: fBuffers, fLength, fSR, fOffset\n\n        // Use the 4 or 8 bytes size for int. The access are then adapted in copyToOut and emptyFile methods\n        this.fLength = allocator.alloc(Soundfile.MAX_SOUNDFILE_PARTS * this.fIntSize);\n        this.fSR = allocator.alloc(Soundfile.MAX_SOUNDFILE_PARTS * this.fIntSize);\n        this.fOffset = allocator.alloc(Soundfile.MAX_SOUNDFILE_PARTS * this.fIntSize);\n\n        this.fBuffers = this.allocBuffers(curChan, length, maxChan);\n\n        //this.displayMemory(\"Allocated soundfile structure 1\");\n\n        // Set the soundfile structure in wasm memory\n        const HEAP32 = this.fAllocator.getInt32Array();\n        HEAP32[this.fPtr >> 2] = this.fBuffers;\n        HEAP32[(this.fPtr + this.fPtrSize) >> 2] = this.fLength;\n        HEAP32[(this.fPtr + (2 * this.fPtrSize)) >> 2] = this.fSR;\n        HEAP32[(this.fPtr + (3 * this.fPtrSize)) >> 2] = this.fOffset;\n\n        for (let chan = 0; chan < curChan; chan++) {\n            const buffer: number = HEAP32[(this.fBuffers >> 2) + chan];\n            console.log(`allocBuffers AFTER: ${chan} - ${buffer}`);\n        }\n\n        //this.displayMemory(\"Allocated soundfile structure 2\");\n    }\n\n    private allocBuffers(curChan: number, length: number, maxChan: number): number {\n        const buffers = this.fAllocator.alloc(maxChan * this.fPtrSize);\n\n        console.log(`allocBuffers buffers: ${buffers}`);\n\n        for (let chan = 0; chan < curChan; chan++) {\n            const buffer: number = this.fAllocator.alloc(length * this.fSampleSize);\n            // HEAP32 is the Int32Array view of the memory buffer which can change after grow in `alloc` method\n            // so we need to recompute the buffer address\n            const HEAP32 = this.fAllocator.getInt32Array();\n            HEAP32[(buffers >> 2) + chan] = buffer;\n        }\n        //this.displayMemory(\"Allocated soundfile buffers\");\n        return buffers;\n    }\n\n    shareBuffers(curChan: number, maxChan: number) {\n        // Share the same buffers for all other channels so that we have maxChan channels available\n        const HEAP32 = this.fAllocator.getInt32Array();\n        for (let chan = curChan; chan < maxChan; chan++) {\n            HEAP32[(this.fBuffers >> 2) + chan] = HEAP32[(this.fBuffers >> 2) + chan % curChan];\n        }\n    }\n\n    copyToOut(part: number, maxChannels: number, offset: number, audioData: AudioData) {\n        // Set the soundfile fields in wasm memory\n        if (this.fIntSize === 4) {\n            const HEAP32 = this.fAllocator.getInt32Array();\n            HEAP32[(this.fLength >> Math.log2(this.fIntSize)) + part] = audioData.audioBuffer[0].length;\n            HEAP32[(this.fSR >> Math.log2(this.fIntSize)) + part] = audioData.sampleRate;\n            HEAP32[(this.fOffset >> Math.log2(this.fIntSize)) + part] = offset;\n        } else {\n            const HEAP64 = this.fAllocator.getInt64Array();\n            HEAP64[(this.fLength >> Math.log2(this.fIntSize)) + part] = BigInt(audioData.audioBuffer[0].length);\n            HEAP64[(this.fSR >> Math.log2(this.fIntSize)) + part] = BigInt(audioData.sampleRate);\n            HEAP64[(this.fOffset >> Math.log2(this.fIntSize)) + part] = BigInt(offset);\n        }\n\n        console.log(`copyToOut: part: ${part}, maxChannels: ${maxChannels}, offset: ${offset}, buffer: ${audioData}`);\n\n        //this.displayMemory(\"IN copyToOut, BEFORE copyToOutReal\", true);\n        // Copy the soundfile data to the buffer\n        if (this.fSampleSize === 8) {\n            this.copyToOutReal64(maxChannels, offset, audioData);\n        } else {\n            this.copyToOutReal32(maxChannels, offset, audioData);\n        }\n        //this.displayMemory(\"IN copyToOut, AFTER copyToOutReal\");\n    }\n\n    copyToOutReal32(maxChannels: number, offset: number, audioData: AudioData) {\n        const HEAP32 = this.fAllocator.getInt32Array();\n        const HEAPF = this.fAllocator.getFloat32Array();\n        for (let chan = 0; chan < audioData.audioBuffer.length; chan++) {\n            const input: Float32Array = audioData.audioBuffer[chan];\n            const output: number = HEAP32[(this.fBuffers >> 2) + chan];\n            const begin: number = (output + (offset * this.fSampleSize)) >> Math.log2(this.fSampleSize);\n            const end: number = (output + (offset + input.length) * this.fSampleSize) >> Math.log2(this.fSampleSize);\n            console.log(`copyToOutReal32 begin: ${begin}, end: ${end}, delta: ${end - begin}`);\n            const outputReal: Float32Array = HEAPF.subarray((output + (offset * this.fSampleSize)) >> Math.log2(this.fSampleSize),\n                (output + (offset + input.length) * this.fSampleSize) >> Math.log2(this.fSampleSize));\n            for (let sample = 0; sample < input.length; sample++) {\n                outputReal[sample] = input[sample];\n            }\n        }\n    }\n\n    copyToOutReal64(maxChannels: number, offset: number, audioData: AudioData) {\n        const HEAP32 = this.fAllocator.getInt32Array();\n        const HEAPF = this.fAllocator.getFloat64Array();\n        for (let chan = 0; chan < audioData.audioBuffer.length; chan++) {\n            const input: Float32Array = audioData.audioBuffer[chan];\n            const output: number = HEAP32[(this.fBuffers >> 2) + chan];\n            const begin: number = (output + (offset * this.fSampleSize)) >> Math.log2(this.fSampleSize);\n            const end: number = (output + (offset + input.length) * this.fSampleSize) >> Math.log2(this.fSampleSize);\n            console.log(`copyToOutReal64 begin: ${begin}, end: ${end}, delta: ${end - begin}`);\n            const outputReal: Float64Array = HEAPF.subarray((output + (offset * this.fSampleSize)) >> Math.log2(this.fSampleSize),\n                (output + (offset + input.length) * this.fSampleSize) >> Math.log2(this.fSampleSize));\n            for (let sample = 0; sample < input.length; sample++) {\n                outputReal[sample] = input[sample];\n            }\n        }\n    }\n\n    emptyFile(part: number, offset: number): number {\n        // Set the soundfile fields in wasm memory\n        if (this.fIntSize === 4) {\n            const HEAP32 = this.fAllocator.getInt32Array();\n            HEAP32[(this.fLength >> Math.log2(this.fIntSize)) + part] = Soundfile.BUFFER_SIZE;\n            HEAP32[(this.fSR >> Math.log2(this.fIntSize)) + part] = Soundfile.SAMPLE_RATE;\n            HEAP32[(this.fOffset >> Math.log2(this.fIntSize)) + part] = offset;\n        } else {\n            const HEAP64 = this.fAllocator.getInt64Array();\n            HEAP64[(this.fLength >> Math.log2(this.fIntSize)) + part] = BigInt(Soundfile.BUFFER_SIZE);\n            HEAP64[(this.fSR >> Math.log2(this.fIntSize)) + part] = BigInt(Soundfile.SAMPLE_RATE);\n            HEAP64[(this.fOffset >> Math.log2(this.fIntSize)) + part] = BigInt(offset);\n        }\n\n        // Update and return the new offset\n        return offset + Soundfile.BUFFER_SIZE;\n    }\n\n    displayMemory(where: string = \"\", mem: boolean = false) {\n        console.log(\"Soundfile memory: \" + where);\n        console.log(`fPtr: ${this.fPtr}`);\n        console.log(`fBuffers: ${this.fBuffers}`);\n        console.log(`fLength: ${this.fLength}`);\n        console.log(`fSR: ${this.fSR}`);\n        console.log(`fOffset: ${this.fOffset}`);\n        const HEAP32 = this.fAllocator.getInt32Array();\n        if (mem) console.log(`HEAP32: ${HEAP32}`);\n        console.log(`HEAP32[this.fPtr >> 2]: ${HEAP32[this.fPtr >> 2]}`);\n        console.log(`HEAP32[(this.fPtr + ptrSize) >> 2]: ${HEAP32[(this.fPtr + this.fPtrSize) >> 2]}`);\n        console.log(`HEAP32[(this.fPtr + 2 * ptrSize) >> 2]: ${HEAP32[(this.fPtr + 2 * this.fPtrSize) >> 2]}`);\n        console.log(`HEAP32[(this.fPtr + 3 * ptrSize) >> 2]: ${HEAP32[(this.fPtr + 3 * this.fPtrSize) >> 2]}`);\n    }\n\n    // Return the pointer to the soundfile structure in wasm memory\n    getPtr(): number {\n        return this.fPtr;\n    }\n\n    getHEAP32(): Int32Array {\n        return this.fAllocator.getInt32Array();\n    }\n    getHEAPFloat32(): Float32Array {\n        return this.fAllocator.getFloat32Array();\n    }\n\n    getHEAPFloat64(): Float64Array {\n        return this.fAllocator.getFloat64Array();\n    }\n}\n\n/**\n * DSP implementation that mimic the C++ 'dsp' class:\n * - adding MIDI control: metadata are decoded and incoming MIDI messages will control the associated controllers\n * - an output handler can be set to treat produced output controllers (like 'bargraph') \n * - regular controllers are handled using setParamValue/getParamValue and getParams methods\n */\nexport interface IFaustBaseWebAudioDsp {\n    /**\n     * Set the parameter output handler, to  be called in the 'compute' method with output parameters (like bargraph).\n     *\n     * @param handler - the output handler\n     */\n    setOutputParamHandler(handler: OutputParamHandler | null): void;\n\n    /**\n     * Get the parameter output handler.\n     *\n     * @return the current output handler\n     */\n    getOutputParamHandler(): OutputParamHandler | null;\n\n    /**\n     * Set the compute handler, to  be called in the 'compute' method with buffer size.\n     *\n     * @param handler - the compute handler\n     */\n    setComputeHandler(handler: ComputeHandler | null): void;\n\n    /**\n     * Get the compute handler.\n     *\n     * @return the current output handler\n     */\n    getComputeHandler(): ComputeHandler | null;\n\n    /**\n     * Set the plot handler, to  be called in the 'compute' method with various info (see PlotHandler type).\n     *\n     * @param handler - the plot handler\n     */\n    setPlotHandler(handler: PlotHandler | null): void;\n\n    /**\n     * Get the plot handler.\n     *\n     * @return the current plot handler\n     */\n    getPlotHandler(): PlotHandler | null;\n\n    /**\n     * Return instance number of audio inputs.\n     *\n     * @return the instance number of audio inputs\n     */\n    getNumInputs(): number;\n\n    /**\n     * Return instance number of audio outputs.\n     *\n     * @return the instance number of audio outputs\n     */\n    getNumOutputs(): number;\n\n    /**\n     * DSP instance computation, to be called with successive input/output audio buffers, using their size.\n     *\n     * @param inputs - the input audio buffers\n     * @param outputs - the output audio buffers\n     */\n    compute(inputs: Float32Array[], outputs: Float32Array[]): boolean;\n\n    /**\n     * Give a handler to be called on 'declare key value' kind of metadata.\n     *\n     * @param handler - the handler to be used\n     */\n    metadata(handler: MetadataHandler): void;\n\n    /**\n     * Handle untyped MIDI messages.\n     *\n     * @param data - and arry of MIDI bytes\n     */\n    midiMessage(data: number[] | Uint8Array): void;\n\n    /**\n     * Handle MIDI ctrlChange messages.\n     *\n     * @param channel - the MIDI channel (0..15, not used for now)\n     * @param ctrl - the MIDI controller number (0..127)\n     * @param value - the MIDI controller value (0..127)\n     */\n    ctrlChange(chan: number, ctrl: number, value: number): void;\n\n    /**\n     * Handle MIDI pitchWheel messages.\n     *\n     * @param channel - the MIDI channel (0..15, not used for now)\n     * @param value - the MIDI controller value (0..16383)\n     */\n    pitchWheel(chan: number, value: number): void;\n\n    /**\n     * Handle MIDI keyOn messages.\n     * @param channel \n     * @param pitch \n     * @param velocity \n     */\n    keyOn(channel: number, pitch: number, velocity: number): void;\n\n    /**\n     * Handle MIDI keyOn messages.\n     * @param channel \n     * @param pitch \n     * @param velocity \n     */\n    keyOff(channel: number, pitch: number, velocity: number): void;\n\n    /**\n     * Set parameter value.\n     *\n     * @param path - the path to the wanted parameter (retrieved using 'getParams' method)\n     * @param val - the float value for the wanted control\n     */\n    setParamValue(path: string, value: number): void;\n\n    /**\n     * Get parameter value.\n     *\n     * @param path - the path to the wanted parameter (retrieved using 'getParams' method)\n     *\n     * @return the float value\n     */\n    getParamValue(path: string): number;\n\n    /**\n     * Get the table of all input parameters paths.\n     *\n     * @return the table of all input parameters paths\n     */\n    getParams(): string[];\n\n    /**\n     * Get DSP JSON description with its UI and metadata as object.\n     *\n     * @return the DSP JSON description as object\n     */\n    getMeta(): FaustDspMeta;\n\n    /**\n     * Get DSP UI description.\n     *\n     * @return the DSP UI description\n     */\n    getUI(): FaustUIDescriptor;\n\n    /**\n    * Get DSP UI items description.\n    *\n    * @return the DSP UI items description\n    */\n    getDescriptors(): FaustUIInputItem[];\n\n    /**\n     * Get DSP JSON description with its UI and metadata.\n     *\n     * @return the DSP JSON description\n     */\n    getJSON(): string;\n\n    /**\n    * Start accelerometer and gyroscope handlers.\n    */\n    startSensors(): void;\n\n    /**\n     * Stop accelerometer and gyroscope handlers.\n     */\n    stopSensors(): void;\n\n    /** Indicating if the DSP handles the accelerometer */\n    readonly hasAccInput: boolean;\n\n    /** \n     * Accelerometer handling.\n     * accelerationIncludingGravity: DeviceMotionEvent[\"accelerationIncludingGravity\"]\n     * invert: boolean\n     */\n    propagateAcc(accelerationIncludingGravity: NonNullable<DeviceMotionEvent[\"accelerationIncludingGravity\"]>, invert: boolean): void;\n\n    /** Indicating if the DSP handles the gyroscope */\n    readonly hasGyrInput: boolean;\n\n    /** \n     * Gyroscope handling.\n     * event: Pick<DeviceOrientationEvent, \"alpha\" | \"beta\" | \"gamma\">\n     */\n    propagateGyr(event: Pick<DeviceOrientationEvent, \"alpha\" | \"beta\" | \"gamma\">): void;\n\n    /**\n     * Start the DSP audio processing. \n     */\n    start(): void;\n\n    /**\n     * Stop the DSP audio processing.\n     */\n    stop(): void;\n\n    /**\n     * Destroy the DSP.\n     */\n    destroy(): void;\n}\n\nexport interface IFaustMonoWebAudioDsp extends IFaustBaseWebAudioDsp { }\nexport interface IFaustMonoWebAudioNode extends IFaustMonoWebAudioDsp, AudioNode { }\n\nexport interface IFaustPolyWebAudioDsp extends IFaustBaseWebAudioDsp {\n    /**\n     * Handle MIDI keyOn messages.\n     *\n     * @param channel - the MIDI channel (0..15, not used for now)\n     * @param pitch - the MIDI pitch value (0..127)\n     * @param velocity - the MIDI velocity value (0..127)\n     */\n    keyOn(channel: number, pitch: number, velocity: number): void;\n\n    /**\n     * Handle MIDI keyOff messages.\n     *\n     * @param channel - the MIDI channel (0..15, not used for now)\n     * @param pitch - the MIDI pitch value (0..127)\n     * @param velocity - the MIDI velocity value (0..127)\n     */\n    keyOff(channel: number, pitch: number, velocity: number): void;\n\n    /**\n     * Stop all playing notes.\n     *\n     * @param hard - whether to immediately stop notes or put them in release mode\n     */\n    allNotesOff(hard: boolean): void;\n}\nexport interface IFaustPolyWebAudioNode extends IFaustPolyWebAudioDsp, AudioNode { }\n\nexport class FaustBaseWebAudioDsp implements IFaustBaseWebAudioDsp {\n    protected fOutputHandler: OutputParamHandler | null = null;\n    protected fComputeHandler: ComputeHandler | null = null;\n\n    // To handle MIDI events plot\n    protected fPlotHandler: PlotHandler | null = null;\n    protected fCachedEvents: { type: string; data: any }[] = [];\n    protected fBufferNum = 0;\n\n    protected fInChannels: Float32Array[] | Float64Array[] = [];\n    protected fOutChannels: Float32Array[] | Float64Array[] = [];\n\n    protected fOutputsTimer = 5;\n\n    // UI items path\n    protected fInputsItems: string[] = [];\n    protected fOutputsItems: string[] = [];\n    protected fDescriptor: FaustUIInputItem[] = [];\n\n    // Soundfile handling\n    protected fSoundfiles: SoundfileItem[] = [];\n    protected fSoundfileBuffers: LooseFaustDspFactory[\"soundfiles\"] = {};\n    /** Keep the end of memory offset before soundfiles */\n    protected fEndMemory: number;\n\n    // Accelerometer handling\n    protected fAcc: SensorEventHandlers; // array of accelerometer handlers on x,y,y axes, to be called with DeviceMotionEvent\n    protected fGyr: SensorEventHandlers; // array of gyroscope handlers on alpha,beta,gama axes, to be called with DeviceMotionEvent\n\n    // Buffers in wasm memory\n    protected fAudioInputs!: number;\n    protected fAudioOutputs!: number;\n\n    protected fBufferSize: number;\n    protected fPtrSize: number;\n    protected fSampleSize: number;\n\n    // MIDI handling\n    protected fPitchwheelLabel: { path: string; chan: number; min: number; max: number }[] = [];\n    protected fCtrlLabel: { path: string; chan: number; min: number; max: number }[][] = new Array(128).fill(null).map(() => []);\n    // array of MIDI key handlers; array index is the MIDI note number\n    protected fMidiKeyLabel: { path: string; chan: number; min: number; max: number }[][] = new Array(128).fill(null).map(() => []);\n    protected fMidiKeyOnLabel: { path: string; chan: number; min: number; max: number }[][] = new Array(128).fill(null).map(() => []);\n    protected fMidiKeyOffLabel: { path: string; chan: number; min: number; max: number }[][] = new Array(128).fill(null).map(() => []);\n\n    protected fPathTable: { [address: string]: number } = {};\n    protected fUICallback: UIHandler = (item: FaustUIItem) => {\n        if (item.type === \"hbargraph\" || item.type === \"vbargraph\") {\n            // Keep bargraph adresses\n            this.fOutputsItems.push(item.address);\n            this.fPathTable[item.address] = item.index;\n        } else if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n            // Keep inputs adresses\n            this.fInputsItems.push(item.address);\n            this.fPathTable[item.address] = item.index;\n            this.fDescriptor.push(item);\n            if (!item.meta) return;\n            item.meta.forEach((meta) => {\n                const { midi, acc, gyr } = meta;\n                // Parse 'midi' metadata\n                if (midi) {\n                    const strMidi = midi.trim();\n                    if (strMidi === \"pitchwheel\") {\n                        const matched = strMidi.match(/^pitchwheel\\s(\\d+)/);\n                        // \"pitchwheel chan\"\n                        if (matched) {\n                            this.fPitchwheelLabel.push({ path: item.address, chan: parseInt(matched[1]), min: item.min as number, max: item.max as number });\n                            // \"pitchwheel\"\n                        } else {\n                            this.fPitchwheelLabel.push({ path: item.address, chan: 0, min: item.min as number, max: item.max as number });\n                        }\n                    } else {\n                        // \"ctrl num chan\"\n                        const matched2 = strMidi.match(/^ctrl\\s(\\d+)\\s(\\d+)/);\n                        // \"ctrl num\"\n                        const matched1 = strMidi.match(/^ctrl\\s(\\d+)/);\n                        // match `key <note>[ <channel>]`\n                        const matchedKey = strMidi.match(/^key\\s+(\\d+)(?:\\s+(\\d+))?$/);\n                        //match `keyon <note>[ <channel>]`\n                        const matchedKeyOn = strMidi.match(/^keyon\\s+(\\d+)(?:\\s+(\\d+))?$/);\n                        //match `keyoff <note>[ <channel>]`\n                        const matchedKeyOff = strMidi.match(/^keyoff\\s+(\\d+)(?:\\s+(\\d+))?$/);\n                        if (matched2) {\n                            this.fCtrlLabel[parseInt(matched2[1])].push({ path: item.address, chan: parseInt(matched2[2]), min: item.min as number, max: item.max as number });\n                        } else if (matched1) {\n                            this.fCtrlLabel[parseInt(matched1[1])].push({ path: item.address, chan: 0, min: item.min as number, max: item.max as number });\n                        } else if (matchedKey) {\n                            const note = parseInt(matchedKey[1]);\n                            const channel = matchedKey[2] ? parseInt(matchedKey[2]) : 0;\n                            this.fMidiKeyLabel[note].push({ path: item.address, chan: channel, min: item.min as number ?? 0, max: item.max as number ?? 1 });\n                        } else if (matchedKeyOn) {\n                            const note = parseInt(matchedKeyOn[1]);\n                            const channel = matchedKeyOn[2] ? parseInt(matchedKeyOn[2]) : 0;\n                            this.fMidiKeyOnLabel[note].push({ path: item.address, chan: channel, min: item.min as number ?? 0, max: item.max as number ?? 1 });\n                        } else if (matchedKeyOff) {\n                            const note = parseInt(matchedKeyOff[1]);\n                            const channel = matchedKeyOff[2] ? parseInt(matchedKeyOff[2]) : 0;\n                            this.fMidiKeyOffLabel[note].push({ path: item.address, chan: channel, min: item.min as number ?? 0, max: item.max as number ?? 1 });\n                        }\n                    }\n                }\n\n                // Parse 'acc' metadata\n                if (acc) {\n                    const numAcc: number[] = acc.trim().split(\" \").map(Number);\n                    this.setupAccHandler(item.address, FaustSensors.convertToAxis(numAcc[0]), FaustSensors.convertToCurve(numAcc[1]), numAcc[2], numAcc[3], numAcc[4], item.min as number, item.init as number, item.max as number);\n                }\n                // Parse 'gyr' metadata\n                if (gyr) {\n                    const numAcc: number[] = gyr.trim().split(\" \").map(Number);\n                    this.setupGyrHandler(item.address, FaustSensors.convertToAxis(numAcc[0]), FaustSensors.convertToCurve(numAcc[1]), numAcc[2], numAcc[3], numAcc[4], item.min as number, item.init as number, item.max as number);\n                }\n            });\n        } else if (item.type === \"soundfile\") {\n            this.fSoundfiles.push({ name: item.label, url: item.url, index: item.index, basePtr: -1 });\n        }\n    };\n\n    // Audio callback\n    protected fProcessing = false;\n    protected fDestroyed = false;\n    protected fFirstCall = true;\n\n    protected fJSONDsp!: FaustDspMeta;\n\n    constructor(sampleSize: number, bufferSize: number, soundfiles: LooseFaustDspFactory[\"soundfiles\"]) {\n        this.fBufferSize = bufferSize;\n        this.fPtrSize = sampleSize; // Done on wast/wasm backend side\n        this.fSampleSize = sampleSize;\n        this.fSoundfileBuffers = soundfiles;\n        this.fAcc = { x: [], y: [], z: [] };\n        this.fGyr = { x: [], y: [], z: [] };\n    }\n\n    // Tools\n    static remap(v: number, mn0: number, mx0: number, mn1: number, mx1: number) {\n        return (v - mn0) / (mx0 - mn0) * (mx1 - mn1) + mn1;\n    }\n\n    // JSON parsing functions\n    static parseUI(ui: FaustUIDescriptor, callback: (item: FaustUIItem) => any) {\n        ui.forEach(group => this.parseGroup(group, callback));\n    }\n\n    static parseGroup(group: FaustUIGroup, callback: (item: FaustUIItem) => any) {\n        if (group.items) {\n            this.parseItems(group.items, callback);\n        }\n    }\n    static parseItems(items: FaustUIItem[], callback: (item: FaustUIItem) => any) {\n        items.forEach(item => this.parseItem(item, callback));\n    }\n\n    static parseItem(item: FaustUIItem, callback: (item: FaustUIItem) => any) {\n        if (item.type === \"vgroup\" || item.type === \"hgroup\" || item.type === \"tgroup\") {\n            this.parseItems(item.items, callback);\n        } else {\n            callback(item);\n        }\n    }\n\n    /** Split the soundfile names and return an array of names */\n    static splitSoundfileNames(input: string): string[] {\n        // Trim off the curly braces at the start and end, if present\n        let trimmed = input.replace(/^\\{|\\}$/g, '');\n        // Split the string into an array of strings and remove first and last characters\n        return trimmed.split(\";\").map(str => str.length <= 2 ? '' : str.substring(1, str.length - 1));\n    }\n\n    get hasAccInput() { return this.fAcc.x.length + this.fAcc.y.length + this.fAcc.z.length > 0; }\n    propagateAcc(accelerationIncludingGravity: NonNullable<DeviceMotionEvent[\"accelerationIncludingGravity\"]>, invert: boolean = false) {\n\n        // Get accelerometervalues\n        const { x, y, z } = accelerationIncludingGravity;\n\n        if (invert) {\n            // Call the accelerometer handlers\n            if (x !== null) this.fAcc.x.forEach(handler => handler(-x));\n            if (y !== null) this.fAcc.y.forEach(handler => handler(-y));\n            if (z !== null) this.fAcc.z.forEach(handler => handler(-z));\n        } else {\n            // Call the accelerometer handlers\n            if (x !== null) this.fAcc.x.forEach(handler => handler(x));\n            if (y !== null) this.fAcc.y.forEach(handler => handler(y));\n            if (z !== null) this.fAcc.z.forEach(handler => handler(z));\n        }\n    }\n\n    get hasGyrInput() { return this.fGyr.x.length + this.fGyr.y.length + this.fGyr.z.length > 0; }\n    propagateGyr(event: Pick<DeviceOrientationEvent, \"alpha\" | \"beta\" | \"gamma\">) {\n\n        // Get gyroscope values\n        const { alpha, beta, gamma } = event;\n\n        // Call the gyroscope handlers\n        if (alpha !== null) this.fGyr.x.forEach(handler => handler(alpha));\n        if (beta !== null) this.fGyr.y.forEach(handler => handler(beta));\n        if (gamma !== null) this.fGyr.z.forEach(handler => handler(gamma));\n    }\n\n    /** Build the accelerometer handler */\n    private setupAccHandler(path: string, axis: Axis, curve: Curve, amin: number, amid: number, amax: number, min: number, init: number, max: number) {\n\n        const handler: UpdatableValueConverter = FaustSensors.buildHandler(curve, amin, amid, amax, min, init, max);\n        switch (axis) {\n            case Axis.x:\n                this.fAcc.x.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n                break;\n            case Axis.y:\n                this.fAcc.y.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n                break;\n            case Axis.z:\n                this.fAcc.z.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n                break;\n        }\n    }\n\n    /** Build the gyroscope handler */\n    private setupGyrHandler(path: string, axis: Axis, curve: Curve, amin: number, amid: number, amax: number, min: number, init: number, max: number) {\n\n        const handler: UpdatableValueConverter = FaustSensors.buildHandler(curve, amin, amid, amax, min, init, max);\n        switch (axis) {\n            case Axis.x:\n                this.fGyr.x.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n                break;\n            case Axis.y:\n                this.fGyr.y.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n                break;\n            case Axis.z:\n                this.fGyr.z.push((val) => this.setParamValue(path, handler.uiToFaust(val)));\n                break;\n        }\n    }\n\n    static extractUrlsFromMeta(dspMeta: FaustDspMeta): string[] {\n        // Find the entry with the \"soundfiles\" key\n        const soundfilesEntry = dspMeta.meta.find(entry => entry.soundfiles !== undefined);\n        // If the entry is found, split the string by semicolon to get the URLs\n        if (soundfilesEntry) {\n            return soundfilesEntry.soundfiles.split(\";\").filter(url => url !== \"\");\n        } else {\n            return [];\n        }\n    }\n\n    /**\n     * Load a soundfile possibly containing several parts in the DSP struct.\n     * Soundfile pointers are located at 'index' offset, to be read in the JSON file.\n     * The DSP struct is located at baseDSP in the wasm memory, \n     * either a monophonic DSP, or a voice in a polyphonic context.\n     * \n     * @param allocator : the wasm memory allocator\n     * @param baseDSP : the base DSP in the wasm memory\n     * @param name : the name of the soundfile\n     * @param url : the url of the soundfile\n     */\n    private loadSoundfile(allocator: WasmAllocator, baseDSP: number, name: string, url: string) {\n        console.log(`Soundfile ${name} paths: ${url}`);\n        const soundfileIds = FaustBaseWebAudioDsp.splitSoundfileNames(url);\n        const item = this.fSoundfiles.find(item => item.url === url);\n        if (!item) throw new Error(`Soundfile with ${url} cannot be found !}`);\n        // Use the cached Soundfile\n        if (item.basePtr !== -1) {\n            // Update HEAP32 after soundfile creation\n            const HEAP32 = allocator.getInt32Array();\n            // Fill the soundfile structure in wasm memory, soundfiles are at the beginning of the DSP memory\n            console.log(`Soundfile CACHE ${url}} : ${name} loaded at ${item.basePtr} in wasm memory with index ${item.index}`);\n            // Soundfile is located at 'index' in the DSP struct, to be added with baseDSP in the wasm memory\n            HEAP32[(baseDSP + item.index) >> 2] = item.basePtr;\n        } else {\n            // Create the soundfiles\n            const soundfile = this.createSoundfile(allocator, soundfileIds, this.fSoundfileBuffers);\n            if (soundfile) {\n                // Update HEAP32 after soundfile creation\n                const HEAP32 = soundfile.getHEAP32();\n                // Get the soundfile pointer in wasm memory\n                item.basePtr = soundfile.getPtr();\n                console.log(`Soundfile ${name} loaded at ${item.basePtr} in wasm memory with index ${item.index}`);\n                // Soundfile is located at 'index' in the DSP struct, to be added with baseDSP in the wasm memory\n                HEAP32[(baseDSP + item.index) >> 2] = item.basePtr;\n            } else {\n                console.log(`Soundfile ${name} for ${url} cannot be created !}`);\n            }\n        }\n    }\n\n    createSoundfile(allocator: WasmAllocator, soundfileIdList: string[], soundfiles: LooseFaustDspFactory[\"soundfiles\"], maxChan = Soundfile.MAX_CHAN) {\n        let curChan = 1; // At least one channel\n        let totalLength = 0;\n\n        // Compute total length and channels max of all files\n        for (const soundfileId of soundfileIdList) {\n            let chan = 0;\n            let len = 0;\n            const audioData = soundfiles[soundfileId];\n            if (audioData) {\n                chan = audioData.audioBuffer.length;\n                len = audioData.audioBuffer[0].length;\n            } else {\n                len = Soundfile.BUFFER_SIZE;\n                chan = 1;\n            }\n            curChan = Math.max(curChan, chan);\n            totalLength += len;\n        }\n\n        // Complete with empty parts\n        totalLength += (Soundfile.MAX_SOUNDFILE_PARTS - soundfileIdList.length) * Soundfile.BUFFER_SIZE;\n\n        // Create the soundfile\n        const soundfile = new Soundfile(allocator, this.fSampleSize, curChan, totalLength, maxChan, soundfileIdList.length);\n\n        //soundfile.displayMemory(\"After soundfile creation\");\n        // Init offset\n        let offset = 0;\n\n        // Read all files\n        for (let part = 0; part < soundfileIdList.length; part++) {\n            const soundfileId = soundfileIdList[part];\n            const audioData = soundfiles[soundfileId];\n            if (audioData) {\n                //soundfile.displayMemory(\"BEFORE copyToOut\");\n                soundfile.copyToOut(part, maxChan, offset, audioData);\n                //soundfile.displayMemory(\"AFTER copyToOut\");\n                offset += audioData.audioBuffer[0].length;\n            } else {\n                // Empty sound\n                offset = soundfile.emptyFile(part, offset);\n            }\n        }\n\n        //soundfile.displayMemory(\"After reading soundfiles\");\n\n        // Complete with empty parts\n        for (let part = soundfileIdList.length; part < Soundfile.MAX_SOUNDFILE_PARTS; part++) {\n            offset = soundfile.emptyFile(part, offset);\n        }\n\n        //soundfile.displayMemory(\"After emptyFile\");\n\n        // Share the same buffers for all other channels so that we have maxChan channels available\n        soundfile.shareBuffers(curChan, maxChan);\n\n        //soundfile.displayMemory(\"After shareBuffers\");\n\n        return soundfile;\n    }\n    /** \n     * Init soundfiles memory.\n     * \n     * @param allocator : the wasm memory allocator\n     * @param sfReader : the soundfile reader\n     * @param baseDSP : the DSP struct (either a monophonic DSP of polyphonic voice) base DSP in the wasm memory\n    */\n    protected initSoundfileMemory(allocator: WasmAllocator, baseDSP: number) {\n        // Create and fill the soundfile structure\n        for (const { name, url } of this.fSoundfiles) {\n            this.loadSoundfile(allocator, baseDSP, name, url);\n        };\n    }\n\n    protected updateOutputs() {\n        if (this.fOutputsItems.length > 0 && this.fOutputHandler && this.fOutputsTimer-- === 0) {\n            this.fOutputsTimer = 5;\n            this.fOutputsItems.forEach(item => this.fOutputHandler?.(item, this.getParamValue(item)));\n        }\n    }\n\n    // Public API\n    metadata(handler: MetadataHandler) {\n        if (this.fJSONDsp.meta) {\n            this.fJSONDsp.meta.forEach(meta => handler(Object.keys(meta)[0], meta[Object.keys(meta)[0]]));\n        }\n    }\n\n    compute(input: Float32Array[], output: Float32Array[]) {\n        return false;\n    }\n\n    setOutputParamHandler(handler: OutputParamHandler | null) {\n        this.fOutputHandler = handler;\n    }\n    getOutputParamHandler() {\n        return this.fOutputHandler;\n    }\n\n    setComputeHandler(handler: ComputeHandler | null) {\n        this.fComputeHandler = handler;\n    }\n    getComputeHandler() {\n        return this.fComputeHandler;\n    }\n\n    setPlotHandler(handler: PlotHandler | null) {\n        this.fPlotHandler = handler;\n    }\n    getPlotHandler() {\n        return this.fPlotHandler;\n    }\n\n    getNumInputs() {\n        return -1;\n    }\n    getNumOutputs() {\n        return -1;\n    }\n\n    midiMessage(data: number[] | Uint8Array) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ data, type: \"midi\" });\n        const cmd = data[0] >> 4;\n        const channel = data[0] & 0xf;\n        const data1 = data[1];\n        const data2 = data[2];\n        if (cmd === 11) return this.ctrlChange(channel, data1, data2);\n        if (cmd === 14) return this.pitchWheel(channel, (data2 * 128.0 + data1));\n        if (cmd === 9) {\n            if (data2 > 0)\n                return this.keyOn(channel, data1, data2);\n            else\n                return this.keyOff(channel, data1, data2);\n        }\n        if (cmd === 8) {\n            return this.keyOff(channel, data1, data2);\n        }\n    }\n\n    ctrlChange(channel: number, ctrl: number, value: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"ctrlChange\", data: [channel, ctrl, value] });\n        if (this.fCtrlLabel[ctrl].length) {\n            this.fCtrlLabel[ctrl].forEach((ctrl) => {\n                const { path, chan } = ctrl;\n                if (chan === 0 || channel === chan - 1) {\n                    this.setParamValue(path, FaustBaseWebAudioDsp.remap(value, 0, 127, ctrl.min, ctrl.max));\n                    // Typically used to reflect parameter change on GUI\n                    if (this.fOutputHandler) this.fOutputHandler(path, this.getParamValue(path));\n                }\n            });\n        }\n    }\n\n    keyOn(channel: number, pitch: number, velocity: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"keyOn\", data: [channel, pitch, velocity] });\n        this.fMidiKeyOnLabel[pitch].forEach((key) => {\n            const { path, chan } = key;\n            if (chan === 0 || channel === chan - 1) {\n                this.setParamValue(path, FaustBaseWebAudioDsp.remap(velocity, 0, 127, key.min, key.max));\n                // Typically used to reflect parameter change on GUI\n                if (this.fOutputHandler) this.fOutputHandler(path, this.getParamValue(path));\n            }\n        });\n        this.fMidiKeyLabel[pitch].forEach((key) => {\n            const { path, chan } = key;\n            if (chan === 0 || channel === chan - 1) {\n                this.setParamValue(path, FaustBaseWebAudioDsp.remap(velocity, 0, 127, key.min, key.max));\n                // Typically used to reflect parameter change on GUI\n                if (this.fOutputHandler) this.fOutputHandler(path, this.getParamValue(path));\n            }\n        });\n    }\n\n    keyOff(channel: number, pitch: number, velocity: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"keyOff\", data: [channel, pitch, velocity] });\n        this.fMidiKeyOffLabel[pitch].forEach((key) => {\n            const { path, chan } = key;\n            if (chan === 0 || channel === chan - 1) {\n                this.setParamValue(path, FaustBaseWebAudioDsp.remap(velocity, 0, 127, key.min, key.max));\n                // Typically used to reflect parameter change on GUI\n                if (this.fOutputHandler) this.fOutputHandler(path, this.getParamValue(path));\n            }\n        });\n        this.fMidiKeyLabel[pitch].forEach((key) => {\n            const { path, chan } = key;\n            if (chan === 0 || channel === chan - 1) {\n                this.setParamValue(path, 0);\n                // Typically used to reflect parameter change on GUI\n                if (this.fOutputHandler) this.fOutputHandler(path, this.getParamValue(path));\n            }\n        });\n    }\n\n    pitchWheel(channel: number, wheel: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"pitchWheel\", data: [channel, wheel] });\n        this.fPitchwheelLabel.forEach((pw) => {\n            const { path, chan } = pw;\n            if (chan === 0 || channel === chan - 1) {\n                this.setParamValue(path, FaustBaseWebAudioDsp.remap(wheel, 0, 16383, pw.min, pw.max));\n                // Typically used to reflect parameter change on GUI\n                if (this.fOutputHandler) this.fOutputHandler(path, this.getParamValue(path));\n            }\n        });\n    }\n\n    setParamValue(path: string, value: number) { }\n    getParamValue(path: string) { return 0; }\n\n    getParams() { return this.fInputsItems; }\n    getMeta() { return this.fJSONDsp; }\n    getJSON() { return JSON.stringify(this.getMeta()); }\n    getUI() { return this.fJSONDsp.ui; }\n    getDescriptors() { return this.fDescriptor; }\n\n    hasSoundfiles() { return this.fSoundfiles.length > 0; }\n\n    startSensors(): void {\n        this.startSensors();\n    }\n\n    stopSensors(): void {\n        this.stopSensors();\n    }\n\n    start() {\n        this.fProcessing = true;\n    }\n\n    stop() {\n        this.fProcessing = false;\n    }\n\n    destroy() {\n        this.fDestroyed = true;\n        this.fOutputHandler = null;\n        this.fComputeHandler = null;\n        this.fPlotHandler = null;\n    }\n\n}\n\nexport class FaustMonoWebAudioDsp extends FaustBaseWebAudioDsp implements IFaustMonoWebAudioDsp {\n\n    private fInstance: FaustMonoDspInstance;\n    private fDSP!: number;\n\n    constructor(instance: FaustMonoDspInstance, sampleRate: number, sampleSize: number, bufferSize: number, soundfiles: LooseFaustDspFactory[\"soundfiles\"]) {\n\n        super(sampleSize, bufferSize, soundfiles);\n        this.fInstance = instance;\n\n        console.log(`sampleSize: ${sampleSize} bufferSize: ${bufferSize}`);\n\n        // Create JSON object\n        this.fJSONDsp = JSON.parse(this.fInstance.json);\n\n        // Setup GUI\n        FaustBaseWebAudioDsp.parseUI(this.fJSONDsp.ui, this.fUICallback);\n\n        // Setup wasm memory\n        this.fEndMemory = this.initMemory();\n\n        // Init DSP\n        this.fInstance.api.init(this.fDSP, sampleRate);\n\n        // Init soundfiles memory is needed\n        if (this.fSoundfiles.length > 0) {\n\n            // Create memory allocator for soundfiles in wasm memory, starting at the end of DSP memory\n            const allocator = new WasmAllocator(this.fInstance.memory, this.fEndMemory);\n\n            // Init soundfiles memory\n            this.initSoundfileMemory(allocator, this.fDSP);\n        }\n\n    }\n\n    private initMemory(): number {\n\n        // Start of DSP memory: Mono DSP is placed first with index 0\n        this.fDSP = 0;\n\n        // Audio buffer start at the end of DSP\n        const $audio = this.fJSONDsp.size;\n\n        // Setup audio pointers offset\n        this.fAudioInputs = $audio;\n        this.fAudioOutputs = this.fAudioInputs + this.getNumInputs() * this.fPtrSize;\n\n        // Prepare wasm memory layout\n        const $audioInputs = this.fAudioOutputs + this.getNumOutputs() * this.fPtrSize;\n        const $audioOutputs = $audioInputs + this.getNumInputs() * this.fBufferSize * this.fSampleSize;\n        // Compute memory end in bytes\n        const endMemory = $audioOutputs + this.getNumOutputs() * this.fBufferSize * this.fSampleSize;\n\n        // Setup Int32 and Real views of the memory\n        const HEAP = this.fInstance.memory.buffer;\n        const HEAP32 = new Int32Array(HEAP);\n        const HEAPF = (this.fSampleSize === 4) ? new Float32Array(HEAP) : new Float64Array(HEAP);\n\n        if (this.getNumInputs() > 0) {\n            for (let chan = 0; chan < this.getNumInputs(); chan++) {\n                HEAP32[(this.fAudioInputs >> 2) + chan] = $audioInputs + this.fBufferSize * this.fSampleSize * chan;\n            }\n            // Prepare Ins buffer tables\n            const dspInChans = HEAP32.subarray(this.fAudioInputs >> 2, (this.fAudioInputs + this.getNumInputs() * this.fPtrSize) >> 2);\n            for (let chan = 0; chan < this.getNumInputs(); chan++) {\n                this.fInChannels[chan] = HEAPF.subarray(dspInChans[chan] >> Math.log2(this.fSampleSize), (dspInChans[chan] + this.fBufferSize * this.fSampleSize) >> Math.log2(this.fSampleSize));\n            }\n        }\n        if (this.getNumOutputs() > 0) {\n            for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n                HEAP32[(this.fAudioOutputs >> 2) + chan] = $audioOutputs + this.fBufferSize * this.fSampleSize * chan;\n            }\n            // Prepare Out buffer tables\n            const dspOutChans = HEAP32.subarray(this.fAudioOutputs >> 2, (this.fAudioOutputs + this.getNumOutputs() * this.fPtrSize) >> 2);\n            for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n                this.fOutChannels[chan] = HEAPF.subarray(dspOutChans[chan] >> Math.log2(this.fSampleSize), (dspOutChans[chan] + this.fBufferSize * this.fSampleSize) >> Math.log2(this.fSampleSize));\n            }\n        }\n\n        return endMemory;\n    }\n\n    toString() {\n        return `============== Mono Memory layout ==============\n        this.fBufferSize: ${this.fBufferSize}\n        this.fJSONDsp.size: ${this.fJSONDsp.size}\n        this.fAudioInputs: ${this.fAudioInputs}\n        this.fAudioOutputs: ${this.fAudioOutputs}\n        this.fDSP: ${this.fDSP}`;\n    }\n\n    // Public API\n    compute(input: Float32Array[] | ((input: Float32Array[] | Float64Array[]) => any), output: Float32Array[] | ((output: Float32Array[] | Float64Array[]) => any)) {\n\n        // Check DSP state\n        if (this.fDestroyed) return false;\n\n        // Check Processing state: the node returns 'true' to stay in the graph, even if not processing\n        if (!this.fProcessing) return true;\n\n        // Init memory again on first call (since WebAssembly.memory.grow() may have been called)\n        if (this.fFirstCall) {\n            this.initMemory();\n            this.fFirstCall = false;\n        }\n\n        if (typeof input === \"function\") {\n            // Call input callback to avoid array copy\n            input(this.fInChannels);\n        } else {\n            // Check inputs\n            if (this.getNumInputs() > 0 && (!input || !input[0] || input[0].length === 0)) {\n                // console.log(\"Process input error\");\n                return true;\n            }\n\n            // Check outputs\n            if (this.getNumOutputs() > 0 && typeof output !== \"function\" && (!output || !output[0] || output[0].length === 0)) {\n                // console.log(\"Process output error\");\n                return true;\n            }\n\n            // Copy inputs\n            if (input !== undefined) {\n                for (let chan = 0; chan < Math.min(this.getNumInputs(), input.length); chan++) {\n                    const dspInput = this.fInChannels[chan];\n                    dspInput.set(input[chan]);\n                }\n            }\n        }\n        // Possibly call an externally given callback (for instance to synchronize playing a MIDIFile...)\n        if (this.fComputeHandler) this.fComputeHandler(this.fBufferSize);\n\n        // Compute\n        this.fInstance.api.compute(this.fDSP, this.fBufferSize, this.fAudioInputs, this.fAudioOutputs);\n\n        // Update bargraph\n        this.updateOutputs();\n\n        let forPlot = this.fOutChannels;\n        if (typeof output === \"function\") {\n            // Call output callback to avoid array copy\n            output(this.fOutChannels);\n        } else {\n            // Copy outputs\n            for (let chan = 0; chan < Math.min(this.getNumOutputs(), output.length); chan++) {\n                const dspOutput = this.fOutChannels[chan];\n                output[chan].set(dspOutput);\n                // console.log(\"chan: \" + chan + \" output: \" + dspOutput[0]);\n            }\n            forPlot = output;\n        }\n\n        // PlotHandler handling \n        if (this.fPlotHandler) {\n            this.fPlotHandler(forPlot, this.fBufferNum++, (this.fCachedEvents.length ? this.fCachedEvents : undefined));\n            this.fCachedEvents = [];\n        }\n\n        return true;\n    }\n\n    metadata(handler: MetadataHandler) { super.metadata(handler); }\n\n    getNumInputs() {\n        return this.fInstance.api.getNumInputs(this.fDSP);\n    }\n    getNumOutputs() {\n        return this.fInstance.api.getNumOutputs(this.fDSP);\n    }\n\n    setParamValue(path: string, value: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"param\", data: { path, value } });\n        this.fInstance.api.setParamValue(this.fDSP, this.fPathTable[path], value);\n    }\n    getParamValue(path: string) {\n        return this.fInstance.api.getParamValue(this.fDSP, this.fPathTable[path]);\n    }\n\n    getMeta() { return this.fJSONDsp; }\n    getJSON() { return this.fInstance.json; }\n    getDescriptors() { return this.fDescriptor; }\n    getUI() { return this.fJSONDsp.ui; }\n}\n\nexport class FaustWebAudioDspVoice {\n    // Voice state\n    static get kActiveVoice() { return 0; }\n    static get kFreeVoice() { return -1; }\n    static get kReleaseVoice() { return -2; }\n    static get kLegatoVoice() { return -3; }\n    static get kNoVoice() { return -4; }\n    static get VOICE_STOP_LEVEL() { return 0.00003162; } // -90 db\n\n    private fFreqLabel: number[] = [];\n    private fGateLabel: number[] = [];\n    private fGainLabel: number[] = [];\n    private fKeyLabel: number[] = [];\n    private fVelLabel: number[] = [];\n    private fDSP: number;            // Voice DSP location in wasm memory\n    private fAPI: IFaustDspInstance; // Voice DSP code\n    // Accessed by PolyDSPImp class\n    fCurNote = FaustWebAudioDspVoice.kFreeVoice;\n    fNextNote = -1;\n    fNextVel = -1;\n    fDate = 0;\n    fLevel = 0;\n\n    constructor($dsp: number, api: IFaustDspInstance, inputItems: string[], pathTable: { [address: string]: number }, sampleRate: number) {\n        this.fDSP = $dsp;\n        this.fAPI = api;\n        this.fAPI.init(this.fDSP, sampleRate);\n        this.extractPaths(inputItems, pathTable);\n    }\n\n    static midiToFreq(note: number) { return 440.0 * 2 ** ((note - 69) / 12); }\n\n    static normalizeVelocity(velocity: number) { return velocity / 127.0; }\n\n    private extractPaths(inputItems: string[], pathTable: { [address: string]: number }) {\n        inputItems.forEach((item) => {\n            if (item.endsWith(\"/gate\")) {\n                this.fGateLabel.push(pathTable[item]);\n            } else if (item.endsWith(\"/freq\")) {\n                this.fFreqLabel.push(pathTable[item]);\n            } else if (item.endsWith(\"/key\")) {\n                this.fKeyLabel.push(pathTable[item]);\n            } else if (item.endsWith(\"/gain\")) {\n                this.fGainLabel.push(pathTable[item]);\n            } else if (item.endsWith(\"/vel\") && item.endsWith(\"/velocity\")) {\n                this.fVelLabel.push(pathTable[item]);\n            }\n        });\n    }\n\n    // Public API\n    keyOn(pitch: number, velocity: number, legato: boolean = false) {\n        if (legato) {\n            this.fNextNote = pitch;\n            this.fNextVel = velocity;\n        } else {\n            this.fFreqLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, FaustWebAudioDspVoice.midiToFreq(pitch)));\n            this.fGateLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, 1));\n            this.fGainLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, FaustWebAudioDspVoice.normalizeVelocity(velocity)));\n            this.fKeyLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, pitch));\n            this.fVelLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, velocity));\n            // Keep pitch\n            this.fCurNote = pitch;\n        }\n    }\n\n    keyOff(hard: boolean = false) {\n        this.fGateLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, 0));\n        if (hard) {\n            this.fCurNote = FaustWebAudioDspVoice.kFreeVoice;\n        } else {\n            this.fCurNote = FaustWebAudioDspVoice.kReleaseVoice;\n        }\n    }\n\n    computeLegato(bufferSize: number, $inputs: number, $outputZero: number, $outputsHalf: number) {\n\n        let size = bufferSize / 2;\n\n        // Reset envelops\n        this.fGateLabel.forEach(index => this.fAPI.setParamValue(this.fDSP, index, 0));\n\n        // Compute current voice on half buffer\n        this.fAPI.compute(this.fDSP, size, $inputs, $outputZero);\n\n        // Start next keyOn\n        this.keyOn(this.fNextNote, this.fNextVel);\n\n        // Compute on second half buffer\n        this.fAPI.compute(this.fDSP, size, $inputs, $outputsHalf);\n    }\n\n    compute(bufferSize: number, $inputs: number, $outputs: number) {\n        this.fAPI.compute(this.fDSP, bufferSize, $inputs, $outputs);\n    }\n\n    setParamValue(index: number, value: number) {\n        this.fAPI.setParamValue(this.fDSP, index, value);\n    }\n    getParamValue(index: number) {\n        return this.fAPI.getParamValue(this.fDSP, index);\n    }\n}\n\nexport class FaustPolyWebAudioDsp extends FaustBaseWebAudioDsp implements IFaustPolyWebAudioDsp {\n\n    private fInstance: FaustPolyDspInstance;\n    private fEffect!: number;\n    private fJSONEffect: FaustDspMeta | null;\n    private fAudioMixing!: number;\n    private fAudioMixingHalf!: number;\n    private fVoiceTable: FaustWebAudioDspVoice[];\n\n    constructor(instance: FaustPolyDspInstance, sampleRate: number, sampleSize: number, bufferSize: number, soundfiles: LooseFaustDspFactory[\"soundfiles\"]) {\n        super(sampleSize, bufferSize, soundfiles);\n        this.fInstance = instance;\n\n        console.log(`sampleSize: ${sampleSize} bufferSize: ${bufferSize}`);\n\n        // Create JSON for voice\n        this.fJSONDsp = JSON.parse(this.fInstance.voiceJSON);\n\n        // Create JSON for effect\n        this.fJSONEffect = (this.fInstance.effectAPI && this.fInstance.effectJSON) ? JSON.parse(this.fInstance.effectJSON) : null;\n\n        // Setup GUI\n        FaustBaseWebAudioDsp.parseUI(this.fJSONDsp.ui, this.fUICallback);\n        if (this.fJSONEffect) FaustBaseWebAudioDsp.parseUI(this.fJSONEffect.ui, this.fUICallback);\n\n        // Setup wasm memory\n        this.fEndMemory = this.initMemory();\n\n        // Init DSP voices\n        this.fVoiceTable = [];\n        for (let voice = 0; voice < this.fInstance.voices; voice++) {\n            this.fVoiceTable.push(new FaustWebAudioDspVoice(\n                this.fJSONDsp.size * voice,\n                this.fInstance.voiceAPI,\n                this.fInputsItems,\n                this.fPathTable,\n                sampleRate\n            ));\n        }\n\n        // Init effect\n        if (this.fInstance.effectAPI) this.fInstance.effectAPI.init(this.fEffect, sampleRate);\n\n        // Init soundfiles memory is needed\n        if (this.fSoundfiles.length > 0) {\n            // Create memory allocator for soundfiles in wasm memory, starting at the end of DSP memory\n            const allocator = new WasmAllocator(this.fInstance.memory, this.fEndMemory);\n            // Init soundfiles memory for all voices\n            for (let voice = 0; voice < this.fInstance.voices; voice++) {\n                this.initSoundfileMemory(allocator, this.fJSONDsp.size * voice);\n            }\n        }\n    }\n\n    private initMemory() {\n\n        // Effet start at the end of all DSP voices\n        this.fEffect = this.fJSONDsp.size * this.fInstance.voices;\n\n        // Audio buffer start at the end of effect\n        const $audio = this.fEffect + (this.fJSONEffect ? this.fJSONEffect.size : 0);\n\n        // Setup audio pointers offset\n        this.fAudioInputs = $audio;\n        this.fAudioOutputs = this.fAudioInputs + this.getNumInputs() * this.fPtrSize;\n        this.fAudioMixing = this.fAudioOutputs + this.getNumOutputs() * this.fPtrSize;\n        this.fAudioMixingHalf = this.fAudioMixing + this.getNumOutputs() * this.fPtrSize;\n\n        // Prepare wasm memory layout\n        const $audioInputs = this.fAudioMixingHalf + this.getNumOutputs() * this.fPtrSize;\n        const $audioOutputs = $audioInputs + this.getNumInputs() * this.fBufferSize * this.fSampleSize;\n        const $audioMixing = $audioOutputs + this.getNumOutputs() * this.fBufferSize * this.fSampleSize;\n\n        // Compute memory end in bytes\n        const endMemory = $audioMixing + this.getNumOutputs() * this.fBufferSize * this.fSampleSize;\n\n        // Setup Int32 and Real views of the memory\n        const HEAP = this.fInstance.memory.buffer;\n        const HEAP32 = new Int32Array(HEAP);\n        const HEAPF = (this.fSampleSize === 4) ? new Float32Array(HEAP) : new Float64Array(HEAP);\n\n        if (this.getNumInputs() > 0) {\n            for (let chan = 0; chan < this.getNumInputs(); chan++) {\n                HEAP32[(this.fAudioInputs >> 2) + chan] = $audioInputs + this.fBufferSize * this.fSampleSize * chan;\n            }\n            // Prepare Ins buffer tables\n            const dspInChans = HEAP32.subarray(this.fAudioInputs >> 2, (this.fAudioInputs + this.getNumInputs() * this.fPtrSize) >> 2);\n            for (let chan = 0; chan < this.getNumInputs(); chan++) {\n                this.fInChannels[chan] = HEAPF.subarray(dspInChans[chan] >> Math.log2(this.fSampleSize), (dspInChans[chan] + this.fBufferSize * this.fSampleSize) >> Math.log2(this.fSampleSize));\n            }\n        }\n        if (this.getNumOutputs() > 0) {\n            for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n                HEAP32[(this.fAudioOutputs >> 2) + chan] = $audioOutputs + this.fBufferSize * this.fSampleSize * chan;\n                HEAP32[(this.fAudioMixing >> 2) + chan] = $audioMixing + this.fBufferSize * this.fSampleSize * chan;\n                HEAP32[(this.fAudioMixingHalf >> 2) + chan] = $audioMixing + this.fBufferSize * this.fSampleSize * chan + this.fBufferSize / 2 * this.fSampleSize;\n            }\n            // Prepare Out buffer tables\n            const dspOutChans = HEAP32.subarray(this.fAudioOutputs >> 2, (this.fAudioOutputs + this.getNumOutputs() * this.fPtrSize) >> 2);\n            for (let chan = 0; chan < this.getNumOutputs(); chan++) {\n                this.fOutChannels[chan] = HEAPF.subarray(dspOutChans[chan] >> Math.log2(this.fSampleSize), (dspOutChans[chan] + this.fBufferSize * this.fSampleSize) >> Math.log2(this.fSampleSize));\n            }\n        }\n\n        return endMemory;\n    }\n\n    toString() {\n        return `============== Poly Memory layout ==============\n        this.fBufferSize: ${this.fBufferSize}\n        this.fJSONDsp.size: ${this.fJSONDsp.size}\n        this.fAudioInputs: ${this.fAudioInputs}\n        this.fAudioOutputs: ${this.fAudioOutputs}\n        this.fAudioMixing: ${this.fAudioMixing}\n        this.fAudioMixingHalf: ${this.fAudioMixingHalf}`;\n    }\n\n    private allocVoice(voice: number, type: number) {\n        this.fVoiceTable[voice].fDate++;\n        this.fVoiceTable[voice].fCurNote = type;\n        return voice;\n    }\n\n    private getPlayingVoice(pitch: number) {\n        let voicePlaying = FaustWebAudioDspVoice.kNoVoice;\n        let oldestDatePlaying = Number.MAX_VALUE;\n\n        for (let i = 0; i < this.fInstance.voices; i++) {\n            let curNote = this.fVoiceTable[i].fCurNote;\n            let nextNote = this.fVoiceTable[i].fNextNote;\n\n            if ((curNote === pitch) || ((curNote === FaustWebAudioDspVoice.kLegatoVoice) && (nextNote === pitch))) {\n                // Keeps oldest playing voice\n                if (this.fVoiceTable[i].fDate < oldestDatePlaying) {\n                    oldestDatePlaying = this.fVoiceTable[i].fDate;\n                    voicePlaying = i;\n                }\n            }\n        }\n        return voicePlaying;\n    }\n\n    private getFreeVoice() {\n        for (let voice = 0; voice < this.fInstance.voices; voice++) {\n            if (this.fVoiceTable[voice].fCurNote === FaustWebAudioDspVoice.kFreeVoice) {\n                return this.allocVoice(voice, FaustWebAudioDspVoice.kActiveVoice);\n            }\n        }\n\n        let voiceRelease = FaustWebAudioDspVoice.kNoVoice;\n        let voicePlaying = FaustWebAudioDspVoice.kNoVoice;\n        let oldestDateRelease = Number.MAX_VALUE;\n        let oldestDatePlaying = Number.MAX_VALUE;\n\n        for (let voice = 0; voice < this.fInstance.voices; voice++) { // Scan all voices\n            // Try to steal a voice in DspVoice.kReleaseVoice mode...\n            if (this.fVoiceTable[voice].fCurNote === FaustWebAudioDspVoice.kReleaseVoice) {\n                // Keeps oldest release voice\n                if (this.fVoiceTable[voice].fDate < oldestDateRelease) {\n                    oldestDateRelease = this.fVoiceTable[voice].fDate;\n                    voiceRelease = voice;\n                }\n            } else if (this.fVoiceTable[voice].fDate < oldestDatePlaying) {\n                oldestDatePlaying = this.fVoiceTable[voice].fDate;\n                voicePlaying = voice;\n            }\n        }\n        // Then decide which one to steal\n        if (oldestDateRelease !== Number.MAX_VALUE) {\n            console.log(`Steal release voice : voice_date = ${this.fVoiceTable[voiceRelease].fDate} voice = ${voiceRelease}`);\n            return this.allocVoice(voiceRelease, FaustWebAudioDspVoice.kLegatoVoice);\n        }\n        if (oldestDatePlaying !== Number.MAX_VALUE) {\n            console.log(`Steal playing voice : voice_date = ${this.fVoiceTable[voicePlaying].fDate} voice = ${voicePlaying}`);\n            return this.allocVoice(voicePlaying, FaustWebAudioDspVoice.kLegatoVoice);\n        }\n        return FaustWebAudioDspVoice.kNoVoice;\n    }\n\n    // Public API\n    compute(input: Float32Array[], output: Float32Array[]) {\n\n        // Check DSP state\n        if (this.fDestroyed) return false;\n\n        // Init memory again on first call (since WebAssembly.memory.grow() may have been called)\n        if (this.fFirstCall) {\n            this.initMemory();\n            this.fFirstCall = false;\n        }\n\n        // Check Processing state: the node returns 'true' to stay in the graph, even if not processing\n        if (!this.fProcessing) return true;\n\n        // Check inputs\n        if (this.getNumInputs() > 0 && (!input || !input[0] || input[0].length === 0)) {\n            // console.log(\"Process input error\");\n            return true;\n        }\n\n        // Check outputs\n        if (this.getNumOutputs() > 0 && (!output || !output[0] || output[0].length === 0)) {\n            // console.log(\"Process output error\");\n            return true;\n        }\n\n        // Copy inputs\n        if (input !== undefined) {\n            for (let chan = 0; chan < Math.min(this.getNumInputs(), input.length); ++chan) {\n                const dspInput = this.fInChannels[chan];\n                dspInput.set(input[chan]);\n            }\n        }\n\n        // Possibly call an externally given callback (for instance to synchronize playing a MIDIFile...)\n        if (this.fComputeHandler) this.fComputeHandler(this.fBufferSize);\n\n        // Compute\n        this.fInstance.mixerAPI.clearOutput(this.fBufferSize, this.getNumOutputs(), this.fAudioOutputs);\n        this.fVoiceTable.forEach((voice) => {\n            if (voice.fCurNote === FaustWebAudioDspVoice.kLegatoVoice) {\n                // Play from current note and next note\n                voice.computeLegato(this.fBufferSize, this.fAudioInputs, this.fAudioMixing, this.fAudioMixingHalf);\n                // FadeOut on first half buffer\n                this.fInstance.mixerAPI.fadeOut(this.fBufferSize / 2, this.getNumOutputs(), this.fAudioMixing);\n                // Mix it in result\n                voice.fLevel = this.fInstance.mixerAPI.mixCheckVoice(this.fBufferSize, this.getNumOutputs(), this.fAudioMixing, this.fAudioOutputs);\n            } else if (voice.fCurNote !== FaustWebAudioDspVoice.kFreeVoice) {\n                // Compute current note\n                voice.compute(this.fBufferSize, this.fAudioInputs, this.fAudioMixing);\n                // Mix it in result\n                voice.fLevel = this.fInstance.mixerAPI.mixCheckVoice(this.fBufferSize, this.getNumOutputs(), this.fAudioMixing, this.fAudioOutputs);\n                // Check the level to possibly set the voice in kFreeVoice again\n                if ((voice.fCurNote == FaustWebAudioDspVoice.kReleaseVoice) && ((voice.fLevel < FaustWebAudioDspVoice.VOICE_STOP_LEVEL))) {\n                    voice.fCurNote = FaustWebAudioDspVoice.kFreeVoice;\n                }\n            }\n        });\n        if (this.fInstance.effectAPI) this.fInstance.effectAPI.compute(this.fEffect, this.fBufferSize, this.fAudioOutputs, this.fAudioOutputs);\n\n        // Update bargraph\n        this.updateOutputs();\n\n        if (output !== undefined) {\n            // Copy outputs\n            for (let chan = 0; chan < Math.min(this.getNumOutputs(), output.length); chan++) {\n                const dspOutput = this.fOutChannels[chan];\n                output[chan].set(dspOutput);\n            }\n\n            // PlotHandler handling \n            if (this.fPlotHandler) {\n                this.fPlotHandler(output, this.fBufferNum++, (this.fCachedEvents.length ? this.fCachedEvents : undefined));\n                this.fCachedEvents = [];\n            }\n        }\n\n        return true;\n    }\n\n    getNumInputs() {\n        return this.fInstance.voiceAPI.getNumInputs(0);\n    }\n    getNumOutputs() {\n        return this.fInstance.voiceAPI.getNumOutputs(0);\n    }\n\n    private static findPath(o: any, p: string) {\n        if (typeof o !== \"object\") {\n            return false;\n        } else if (o.address) {\n            return (o.address === p);\n        } else {\n            for (const k in o) {\n                if (FaustPolyWebAudioDsp.findPath(o[k], p)) return true;\n            }\n            return false;\n        }\n    }\n\n    setParamValue(path: string, value: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"param\", data: { path, value } });\n        if (this.fJSONEffect && FaustPolyWebAudioDsp.findPath(this.fJSONEffect.ui, path) && this.fInstance.effectAPI) {\n            this.fInstance.effectAPI.setParamValue(this.fEffect, this.fPathTable[path], value);\n        } else {\n            this.fVoiceTable.forEach(voice => voice.setParamValue(this.fPathTable[path], value));\n        }\n    }\n    getParamValue(path: string) {\n        if (this.fJSONEffect && FaustPolyWebAudioDsp.findPath(this.fJSONEffect.ui, path) && this.fInstance.effectAPI) {\n            return this.fInstance.effectAPI.getParamValue(this.fEffect, this.fPathTable[path]);\n        } else {\n            return this.fVoiceTable[0].getParamValue(this.fPathTable[path]);\n        }\n    }\n\n    getMeta() {\n        const o = this.fJSONDsp;\n        const e = this.fJSONEffect;\n        const r = { ...o };\n        if (e) {\n            r.ui = [{\n                type: \"tgroup\", label: \"Sequencer\", items: [\n                    { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                    { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                ]\n            }];\n        } else {\n            r.ui = [{\n                type: \"tgroup\", label: \"Polyphonic\", items: [\n                    { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                ]\n            }];\n        }\n        return r as FaustDspMeta;\n    }\n\n    getJSON() {\n        return JSON.stringify(this.getMeta());\n    }\n\n    getUI() {\n        return this.getMeta().ui;\n    }\n\n    getDescriptors() { return this.fDescriptor; }\n\n    midiMessage(data: number[] | Uint8Array) {\n        const cmd = data[0] >> 4;\n        const channel = data[0] & 0xf;\n        const data1 = data[1];\n        const data2 = data[2];\n        if (cmd === 8 || (cmd === 9 && data2 === 0)) return this.keyOff(channel, data1, data2);\n        else if (cmd === 9) return this.keyOn(channel, data1, data2);\n        else super.midiMessage(data);\n    };\n\n    ctrlChange(channel: number, ctrl: number, value: number) {\n        if (ctrl === 123 || ctrl === 120) {\n            this.allNotesOff(true);\n        } else {\n            super.ctrlChange(channel, ctrl, value);\n        }\n    }\n\n    keyOn(channel: number, pitch: number, velocity: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"keyOn\", data: [channel, pitch, velocity] });\n        const voice = this.getFreeVoice();\n        this.fVoiceTable[voice].keyOn(pitch, velocity, this.fVoiceTable[voice].fCurNote == FaustWebAudioDspVoice.kLegatoVoice);\n    }\n\n    keyOff(channel: number, pitch: number, velocity: number) {\n        if (this.fPlotHandler) this.fCachedEvents.push({ type: \"keyOff\", data: [channel, pitch, velocity] });\n        const voice = this.getPlayingVoice(pitch);\n        if (voice !== FaustWebAudioDspVoice.kNoVoice) {\n            this.fVoiceTable[voice].keyOff();\n        } else {\n            console.log(\"Playing pitch = %d not found\\n\", pitch);\n        }\n    }\n\n    allNotesOff(hard: boolean = true) {\n        this.fCachedEvents.push({ type: \"ctrlChange\", data: [0, 123, 0] });\n        this.fVoiceTable.forEach(voice => voice.keyOff(hard));\n    }\n}\n", "import { ComputeHandler, FaustBaseWebAudioDsp, FaustMonoWebAudioDsp, FaustPolyWebAudioDsp, IFaustBaseWebAudioDsp, IFaustMonoWebAudioDsp, IFaustPolyWebAudioDsp, MetadataHandler, OutputParamHandler, PlotHandler } from \"./FaustWebAudioDsp\";\nimport { AudioParamDescriptor, FaustUIItem } from \"./types\";\n\n/**\n *  For offline rendering.\n */\nexport interface IFaustOfflineProcessor extends IFaustBaseWebAudioDsp {\n    render(inputs?: Float32Array[], length?: number, onUpdate?: (sample: number) => any): Float32Array[];\n}\n\nexport interface IFaustMonoOfflineProcessor extends IFaustOfflineProcessor, IFaustMonoWebAudioDsp { }\nexport interface IFaustPolyOfflineProcessor extends IFaustOfflineProcessor, IFaustPolyWebAudioDsp { }\n\nexport class FaustOfflineProcessor<Poly extends boolean = false> {\n    protected fDSPCode!: Poly extends true ? FaustPolyWebAudioDsp : FaustMonoWebAudioDsp;\n\n    protected fBufferSize: number;\n    protected fInputs: Float32Array[];\n    protected fOutputs: Float32Array[];\n\n    constructor(instance: Poly extends true ? FaustPolyWebAudioDsp : FaustMonoWebAudioDsp, bufferSize: number) {\n        this.fDSPCode = instance;\n        this.fBufferSize = bufferSize;\n        this.fInputs = new Array(this.fDSPCode.getNumInputs()).fill(null).map(() => new Float32Array(bufferSize));\n        this.fOutputs = new Array(this.fDSPCode.getNumOutputs()).fill(null).map(() => new Float32Array(bufferSize));\n    }\n\n    // Public API\n\n    getParameterDescriptors() {\n        const params = [] as AudioParamDescriptor[];\n        // Analyse voice JSON to generate AudioParam parameters\n        const callback = (item: FaustUIItem) => {\n            let param: AudioParamDescriptor | null = null;\n            const polyKeywords = [\"/gate\", \"/freq\", \"/gain\", \"/key\", \"/vel\", \"/velocity\"];\n            const isPolyReserved = \"address\" in item && !!polyKeywords.find(k => item.address.endsWith(k));\n            if (this.fDSPCode instanceof FaustMonoWebAudioDsp || !isPolyReserved) {\n                if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"nentry\") {\n                    param = { name: item.address, defaultValue: item.init || 0, minValue: item.min || 0, maxValue: item.max || 0 };\n                } else if (item.type === \"button\" || item.type === \"checkbox\") {\n                    param = { name: item.address, defaultValue: item.init || 0, minValue: 0, maxValue: 1 };\n                }\n            }\n            if (param) params.push(param);\n        }\n        FaustBaseWebAudioDsp.parseUI(this.fDSPCode.getUI(), callback);\n        return params;\n    }\n    compute(input: Float32Array[], output: Float32Array[]) { return this.fDSPCode.compute(input, output); }\n\n    setOutputParamHandler(handler: OutputParamHandler) { this.fDSPCode.setOutputParamHandler(handler); }\n    getOutputParamHandler() { return this.fDSPCode.getOutputParamHandler(); }\n\n    setComputeHandler(handler: ComputeHandler) { this.fDSPCode.setComputeHandler(handler); }\n    getComputeHandler() { return this.fDSPCode.getComputeHandler(); }\n\n    setPlotHandler(handler: PlotHandler) { this.fDSPCode.setPlotHandler(handler); }\n    getPlotHandler() { return this.fDSPCode.getPlotHandler(); }\n\n    getNumInputs() { return this.fDSPCode.getNumInputs(); }\n    getNumOutputs() { return this.fDSPCode.getNumOutputs(); }\n\n    metadata(handler: MetadataHandler) { }\n\n    midiMessage(data: number[] | Uint8Array) { this.fDSPCode.midiMessage(data); }\n\n    ctrlChange(chan: number, ctrl: number, value: number) { this.fDSPCode.ctrlChange(chan, ctrl, value); }\n    pitchWheel(chan: number, value: number) { this.fDSPCode.pitchWheel(chan, value); }\n    keyOn(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOn(channel, pitch, velocity); }\n    keyOff(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOff(channel, pitch, velocity); }\n\n    setParamValue(path: string, value: number) { this.fDSPCode.setParamValue(path, value); }\n    getParamValue(path: string) { return this.fDSPCode.getParamValue(path); }\n    getParams() { return this.fDSPCode.getParams(); }\n\n    getMeta() { return this.fDSPCode.getMeta(); }\n    getJSON() { return this.fDSPCode.getJSON(); }\n    getDescriptors() { return this.fDSPCode.getDescriptors(); }\n    getUI() { return this.fDSPCode.getUI(); }\n\n    start() { this.fDSPCode.start(); }\n    stop() { this.fDSPCode.stop(); }\n\n    destroy() { this.fDSPCode.destroy(); }\n\n    get hasAccInput() { return this.fDSPCode.hasAccInput; }\n\n    propagateAcc(accelerationIncludingGravity: NonNullable<DeviceMotionEvent[\"accelerationIncludingGravity\"]>, invert: boolean = false) {\n        this.fDSPCode.propagateAcc(accelerationIncludingGravity, invert);\n    }\n\n    get hasGyrInput() { return this.fDSPCode.hasGyrInput; }\n\n    propagateGyr(event: Pick<DeviceOrientationEvent, \"alpha\" | \"beta\" | \"gamma\">) {\n        this.fDSPCode.propagateGyr(event);\n    }\n\n    startSensors(): void { }\n\n    stopSensors(): void { }\n\n    /**\n     * Render frames in an array.\n     *\n     * @param inputs - input signal\n     * @param length - the number of frames to render (default: bufferSize)\n     * @param onUpdate - a callback after each buffer calculated, with an argument \"current sample\"\n     * @return an array of Float32Array with the rendered frames\n     */\n    render(inputs: Float32Array[] = [], length = this.fBufferSize, onUpdate?: (sample: number) => any): Float32Array[] {\n        let l = 0;\n        const outputs = new Array(this.fDSPCode.getNumOutputs()).fill(null).map(() => new Float32Array(length));\n        // The node has to be started before rendering\n        this.fDSPCode.start();\n        while (l < length) {\n            const sliceLength = Math.min(length - l, this.fBufferSize);\n            for (let i = 0; i < this.fDSPCode.getNumInputs(); i++) {\n                let input: Float32Array;\n                if (inputs[i]) {\n                    if (inputs[i].length <= l) {\n                        input = new Float32Array(sliceLength);\n                    } else if (inputs[i].length > l + sliceLength) {\n                        input = inputs[i].subarray(l, l + sliceLength);\n                    } else {\n                        input = inputs[i].subarray(l, inputs[i].length);\n                    }\n                } else {\n                    input = new Float32Array(sliceLength);\n                }\n                this.fInputs[i] = input;\n            }\n            this.fDSPCode.compute(this.fInputs, this.fOutputs);\n            for (let i = 0; i < this.fDSPCode.getNumOutputs(); i++) {\n                const output = this.fOutputs[i];\n                if (sliceLength < this.fBufferSize) {\n                    outputs[i].set(output.subarray(0, sliceLength), l);\n                } else {\n                    outputs[i].set(output, l);\n                }\n            }\n            l += this.fBufferSize;\n            onUpdate?.(l);\n        }\n        // The node can be stopped after rendering\n        this.fDSPCode.stop();\n        return outputs;\n    }\n}\n\nexport class FaustMonoOfflineProcessor extends FaustOfflineProcessor<false> implements IFaustMonoWebAudioDsp {\n}\n\nexport class FaustPolyOfflineProcessor extends FaustOfflineProcessor<true> implements IFaustPolyWebAudioDsp {\n    keyOn(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOn(channel, pitch, velocity); }\n    keyOff(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOff(channel, pitch, velocity); }\n    allNotesOff(hard: boolean) { this.fDSPCode.allNotesOff(hard); }\n}\n\nexport default FaustOfflineProcessor;\n", "import type FaustCompiler from \"./FaustCompiler\";\n\ninterface IFaustSvgDiagrams {\n    /**\n     * Generates auxiliary files from Faust code. The output depends on the compiler options.\n     *\n     * @param name - the DSP's name\n     * @param code - Faust code\n     * @param args - compilation args\n     * @returns the svg diagrams as a filename - svg string map\n     */\n    from(name: string, code: string, args: string): Record<string, string>;\n}\n\nclass FaustSvgDiagrams implements IFaustSvgDiagrams {\n    private compiler: FaustCompiler;\n\n    constructor(compiler: FaustCompiler) {\n        this.compiler = compiler;\n    }\n\n    from(name: string, code: string, args: string) {\n        const fs = this.compiler.fs();\n        try {\n            const files: string[] = fs.readdir(`/${name}-svg/`);\n            files.filter(file => file !== \".\" && file !== \"..\").forEach(file => fs.unlink(`/${name}-svg/${file}`));\n        } catch { }\n        const success = this.compiler.generateAuxFiles(name, code, `-lang wasm -o binary -svg ${args}`);\n        if (!success) throw new Error(this.compiler.getErrorMessage());\n        const svgs: Record<string, string> = {};\n        const files: string[] = fs.readdir(`/${name}-svg/`);\n        files.filter(file => file !== \".\" && file !== \"..\").forEach(file => svgs[file] = fs.readFile(`/${name}-svg/${file}`, { encoding: \"utf8\" }) as string);\n        return svgs;\n    }\n}\n\nexport default FaustSvgDiagrams;\n", "import type FaustCompiler from \"./FaustCompiler\";\n\ninterface IFaustCmajor {\n    /**\n     * Generates auxiliary files from Faust code. The output depends on the compiler options.\n     *\n     * @param name - the DSP's name\n     * @param code - Faust code\n     * @param args - compilation args\n     * @returns the Cmajor compiled string\n     */\n    compile(name: string, code: string, args: string): string;\n}\n\nclass FaustCmajor implements IFaustCmajor {\n    private fCompiler: FaustCompiler;\n\n    constructor(compiler: FaustCompiler) {\n        this.fCompiler = compiler;\n    }\n\n    compile(name: string, code: string, args: string) {\n        const fs = this.fCompiler.fs();\n        const success = this.fCompiler.generateAuxFiles(name, code, `-lang cmajor-hybrid -cn ${name} -o ${name}.cmajor`);\n        return (success) ? fs.readFile(`${name}.cmajor`, { encoding: \"utf8\" }) as string : \"\";\n    }\n}\n\nexport default FaustCmajor;\n", "import type { FaustModule, LibFaustWasm, FaustInfoType } from \"./types\";\n\nexport interface ILibFaust extends LibFaustWasm {\n    module(): FaustModule;\n    fs(): typeof FS;\n}\n\nclass LibFaust implements ILibFaust {\n    private fModule: FaustModule;\n    private fCompiler: LibFaustWasm;\n    private fFileSystem: typeof FS;\n\n    constructor(module: FaustModule) {\n        this.fModule = module;\n        this.fCompiler = new module.libFaustWasm();\n        this.fFileSystem = this.fModule.FS;\n    }\n    module() {\n        return this.fModule;\n    }\n    fs() {\n        return this.fFileSystem;\n    }\n    version() {\n        return this.fCompiler.version();\n    }\n    createDSPFactory(name: string, code: string, args: string, useInternalMemory: boolean) {\n        return this.fCompiler.createDSPFactory(name, code, args, useInternalMemory);\n    }\n    deleteDSPFactory(cFactory: number) {\n        return this.fCompiler.deleteDSPFactory(cFactory);\n    }\n    expandDSP(name: string, code: string, args: string) {\n        return this.fCompiler.expandDSP(name, code, args);\n    }\n    generateAuxFiles(name: string, code: string, args: string) {\n        return this.fCompiler.generateAuxFiles(name, code, args);\n    }\n    deleteAllDSPFactories() {\n        return this.fCompiler.deleteAllDSPFactories();\n    }\n    getErrorAfterException() {\n        return this.fCompiler.getErrorAfterException();\n    }\n    cleanupAfterException() {\n        return this.fCompiler.cleanupAfterException();\n    }\n    getInfos(what: FaustInfoType) {\n        return this.fCompiler.getInfos(what);\n    }\n    toString() {\n        return `LibFaust module: ${this.fModule}, compiler: ${this.fCompiler}`;\n    }\n\n}\n\nexport default LibFaust;\n", "export interface WavEncoderOptions {\n    bitDepth: number;\n    float?: boolean;\n    symmetric?: boolean;\n    shared?: boolean;\n    sampleRate: number;\n}\ninterface Format {\n    formatId: number;\n    float: boolean;\n    symmetric: boolean;\n    numberOfChannels: number;\n    sampleRate: number;\n    length: number;\n    bitDepth: number;\n    byteDepth: number;\n}\n\n/**\n * Code from https://github.com/mohayonao/wav-encoder\n */\nclass WavEncoder {\n    static encode(audioBuffer: Float32Array[], options: WavEncoderOptions) {\n        const numberOfChannels = audioBuffer.length;\n        const length = audioBuffer[0].length;\n        const { shared, float } = options;\n        const bitDepth = float ? 32 : ((options.bitDepth | 0) || 16);\n        const byteDepth = bitDepth >> 3;\n        const byteLength = length * numberOfChannels * byteDepth;\n        // eslint-disable-next-line no-undef\n        const AB = shared ? (globalThis.SharedArrayBuffer || globalThis.ArrayBuffer) : globalThis.ArrayBuffer;\n        const ab = new AB((44 + byteLength) * Uint8Array.BYTES_PER_ELEMENT);\n        const dataView = new DataView(ab);\n        const writer = new Writer(dataView);\n        const format: Format = {\n            formatId: float ? 0x0003 : 0x0001,\n            float: !!float,\n            numberOfChannels,\n            sampleRate: options.sampleRate,\n            symmetric: !!options.symmetric,\n            length,\n            bitDepth,\n            byteDepth\n        };\n        this.writeHeader(writer, format);\n        this.writeData(writer, audioBuffer, format);\n        return ab;\n    }\n    private static writeHeader(writer: Writer, format: Format) {\n        const { formatId, sampleRate, bitDepth, numberOfChannels, length, byteDepth } = format;\n        writer.string(\"RIFF\");\n        writer.uint32(writer.dataView.byteLength - 8);\n        writer.string(\"WAVE\");\n        writer.string(\"fmt \");\n        writer.uint32(16);\n        writer.uint16(formatId);\n        writer.uint16(numberOfChannels);\n        writer.uint32(sampleRate);\n        writer.uint32(sampleRate * numberOfChannels * byteDepth);\n        writer.uint16(numberOfChannels * byteDepth);\n        writer.uint16(bitDepth);\n        writer.string(\"data\");\n        writer.uint32(length * numberOfChannels * byteDepth);\n        return writer.pos;\n    }\n    private static writeData(writer: Writer, audioBuffer: Float32Array[], format: Format) {\n        const { bitDepth, float, length, numberOfChannels, symmetric } = format;\n        if (bitDepth === 32 && float) {\n            const { dataView, pos } = writer;\n            const ab = dataView.buffer;\n            const f32View = new Float32Array(ab, pos);\n            if (numberOfChannels === 1) {\n                f32View.set(audioBuffer[0]);\n                return;\n            }\n            for (let ch = 0; ch < numberOfChannels; ch++) {\n                const channel = audioBuffer[ch];\n                for (let i = 0; i < length; i++) {\n                    f32View[i * numberOfChannels + ch] = channel[i];\n                }\n            }\n            return;\n        }\n        const encoderOption = float ? \"f\" : symmetric ? \"s\" : \"\";\n        const methodName = \"pcm\" + bitDepth + encoderOption;\n\n        if (!(writer as any)[methodName]) {\n            throw new TypeError(\"Not supported bit depth: \" + bitDepth);\n        }\n\n        const write: (value: number) => void = (writer as any)[methodName].bind(writer);\n\n        for (let i = 0; i < length; i++) {\n            for (let j = 0; j < numberOfChannels; j++) {\n                write(audioBuffer[j][i]);\n            }\n        }\n    }\n}\n\nclass Writer {\n    pos = 0;\n    dataView: DataView;\n    constructor(dataView: DataView) {\n        this.dataView = dataView;\n    }\n    int16(value: number) {\n        this.dataView.setInt16(this.pos, value, true);\n        this.pos += 2;\n    }\n    uint16(value: number) {\n        this.dataView.setUint16(this.pos, value, true);\n        this.pos += 2;\n    }\n    uint32(value: number) {\n        this.dataView.setUint32(this.pos, value, true);\n        this.pos += 4;\n    }\n    string(value: string) {\n        for (let i = 0, imax = value.length; i < imax; i++) {\n            this.dataView.setUint8(this.pos++, value.charCodeAt(i));\n        }\n    }\n    pcm8(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = (value * 0.5 + 0.5) * 255;\n        value = Math.round(value) | 0;\n        this.dataView.setUint8(this.pos, value/* , true*/);\n        this.pos += 1;\n    }\n    pcm8s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 128) + 128;\n        value = Math.max(0, Math.min(value, 255));\n        this.dataView.setUint8(this.pos, value/* , true*/);\n        this.pos += 1;\n    }\n    pcm16(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = value < 0 ? value * 32768 : value * 32767;\n        value = Math.round(value) | 0;\n        this.dataView.setInt16(this.pos, value, true);\n        this.pos += 2;\n    }\n    pcm16s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 32768);\n        value = Math.max(-32768, Math.min(value, 32767));\n        this.dataView.setInt16(this.pos, value, true);\n        this.pos += 2;\n    }\n    pcm24(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = value < 0 ? 0x1000000 + value * 8388608 : value * 8388607;\n        value = Math.round(value) | 0;\n\n        const x0 = (value >> 0) & 0xFF;\n        const x1 = (value >> 8) & 0xFF;\n        const x2 = (value >> 16) & 0xFF;\n\n        this.dataView.setUint8(this.pos + 0, x0);\n        this.dataView.setUint8(this.pos + 1, x1);\n        this.dataView.setUint8(this.pos + 2, x2);\n        this.pos += 3;\n    }\n    pcm24s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 8388608);\n        value = Math.max(-8388608, Math.min(value, 8388607));\n\n        const x0 = (value >> 0) & 0xFF;\n        const x1 = (value >> 8) & 0xFF;\n        const x2 = (value >> 16) & 0xFF;\n\n        this.dataView.setUint8(this.pos + 0, x0);\n        this.dataView.setUint8(this.pos + 1, x1);\n        this.dataView.setUint8(this.pos + 2, x2);\n        this.pos += 3;\n    }\n    pcm32(valueIn: number) {\n        let value = valueIn;\n        value = Math.max(-1, Math.min(value, +1));\n        value = value < 0 ? value * 2147483648 : value * 2147483647;\n        value = Math.round(value) | 0;\n        this.dataView.setInt32(this.pos, value, true);\n        this.pos += 4;\n    }\n    pcm32s(valueIn: number) {\n        let value = valueIn;\n        value = Math.round(value * 2147483648);\n        value = Math.max(-2147483648, Math.min(value, +2147483647));\n        this.dataView.setInt32(this.pos, value, true);\n        this.pos += 4;\n    }\n    pcm32f(value: number) {\n        this.dataView.setFloat32(this.pos, value, true);\n        this.pos += 4;\n    }\n}\n\nexport default WavEncoder;\n", "export interface WavDecoderOptions {\n    symmetric?: boolean;\n    shared?: boolean;\n}\ninterface Format {\n    formatId: number;\n    float: boolean;\n    numberOfChannels: number;\n    sampleRate: number;\n    byteRate: number;\n    blockSize: number;\n    bitDepth: number;\n}\n\n/**\n * Code from https://github.com/mohayonao/wav-decoder\n */\nclass WavDecoder {\n    static decode(buffer: ArrayBuffer, options?: WavDecoderOptions) {\n        const dataView = new DataView(buffer);\n        const reader = new Reader(dataView);\n        if (reader.string(4) !== \"RIFF\") {\n            throw new TypeError(\"Invalid WAV file\");\n        }\n        reader.uint32(); // skip file length\n        if (reader.string(4) !== \"WAVE\") {\n            throw new TypeError(\"Invalid WAV file\");\n        }\n        let format: Format | null = null;\n        let audioData: {\n            numberOfChannels: number;\n            length: number;\n            sampleRate: number;\n            channelData: Float32Array[];\n        } | null = null;\n        do {\n            const chunkType = reader.string(4);\n            const chunkSize = reader.uint32();\n            if (chunkType === \"fmt \") {\n                format = this.decodeFormat(reader, chunkSize);\n            } else if (chunkType === \"data\") {\n                audioData = this.decodeData(reader, chunkSize, format as Format, options || {});\n            } else {\n                reader.skip(chunkSize);\n            }\n        } while (audioData === null);\n        return audioData;\n    }\n    private static decodeFormat(reader: Reader, chunkSize: number) {\n        const formats = {\n            0x0001: \"lpcm\",\n            0x0003: \"lpcm\"\n        };\n        const formatId = reader.uint16();\n        if (!formats.hasOwnProperty(formatId)) {\n            throw new TypeError(\"Unsupported format in WAV file: 0x\" + formatId.toString(16));\n        }\n        const format: Format = {\n            formatId: formatId,\n            float: formatId === 0x0003,\n            numberOfChannels: reader.uint16(),\n            sampleRate: reader.uint32(),\n            byteRate: reader.uint32(),\n            blockSize: reader.uint16(),\n            bitDepth: reader.uint16()\n        };\n        reader.skip(chunkSize - 16);\n        return format;\n    }\n    private static decodeData(reader: Reader, chunkSizeIn: number, format: Format, options: WavDecoderOptions) {\n        const chunkSize = Math.min(chunkSizeIn, reader.remain());\n        const length = Math.floor(chunkSize / format.blockSize);\n        const numberOfChannels = format.numberOfChannels;\n        const sampleRate = format.sampleRate;\n        const channelData: Float32Array[] = new Array(numberOfChannels);\n        for (let ch = 0; ch < numberOfChannels; ch++) {\n            const AB = options.shared ? (globalThis.SharedArrayBuffer || globalThis.ArrayBuffer) : globalThis.ArrayBuffer;\n            const ab = new AB(length * Float32Array.BYTES_PER_ELEMENT);\n            channelData[ch] = new Float32Array(ab);\n        }\n        this.readPCM(reader, channelData, length, format, options);\n        return {\n            numberOfChannels,\n            length,\n            sampleRate,\n            channelData\n        };\n    }\n    private static readPCM(reader: Reader, channelData: Float32Array[], length: number, format: Format, options: WavDecoderOptions) {\n        const bitDepth = format.bitDepth;\n        const decoderOption = format.float ? \"f\" : options.symmetric ? \"s\" : \"\";\n        const methodName = \"pcm\" + bitDepth + decoderOption as `pcm${8 | 16 | 32}${\"f\" | \"s\" | \"\"}`;\n        if (!(reader as any)[methodName]) {\n            throw new TypeError(\"Not supported bit depth: \" + format.bitDepth);\n        }\n        const read: () => number = (reader as any)[methodName].bind(reader);\n        const numberOfChannels = format.numberOfChannels;\n        for (let i = 0; i < length; i++) {\n            for (let ch = 0; ch < numberOfChannels; ch++) {\n                channelData[ch][i] = read();\n            }\n        }\n    }\n}\n\nclass Reader {\n    pos = 0;\n    dataView: DataView;\n    constructor(dataView: DataView) {\n        this.dataView = dataView;\n    }\n    remain() {\n        return this.dataView.byteLength - this.pos;\n    }\n    skip(n: number) {\n        this.pos += n;\n    }\n    uint8() {\n        const data = this.dataView.getUint8(this.pos);\n        this.pos += 1;\n        return data;\n    }\n    int16() {\n        const data = this.dataView.getInt16(this.pos, true);\n        this.pos += 2;\n        return data;\n    }\n    uint16() {\n        const data = this.dataView.getUint16(this.pos, true);\n        this.pos += 2;\n        return data;\n    }\n    uint32() {\n        const data = this.dataView.getUint32(this.pos, true);\n        this.pos += 4;\n        return data;\n    }\n    string(n: number) {\n        let data = \"\";\n        for (let i = 0; i < n; i++) {\n            data += String.fromCharCode(this.uint8());\n        }\n        return data;\n    }\n    pcm8() {\n        const data = this.dataView.getUint8(this.pos) - 128;\n        this.pos += 1;\n        return data < 0 ? data / 128 : data / 127;\n    }\n    pcm8s() {\n        const data = this.dataView.getUint8(this.pos) - 127.5;\n        this.pos += 1;\n        return data / 127.5;\n    }\n    pcm16() {\n        const data = this.dataView.getInt16(this.pos, true);\n        this.pos += 2;\n        return data < 0 ? data / 32768 : data / 32767;\n    }\n    pcm16s() {\n        const data = this.dataView.getInt16(this.pos, true);\n        this.pos += 2;\n        return data / 32768;\n    }\n    pcm24() {\n        const x0 = this.dataView.getUint8(this.pos + 0);\n        const x1 = this.dataView.getUint8(this.pos + 1);\n        const x2 = this.dataView.getUint8(this.pos + 2);\n        const xx = (x0 + (x1 << 8) + (x2 << 16));\n\n        const data = xx > 0x800000 ? xx - 0x1000000 : xx;\n        this.pos += 3;\n        return data < 0 ? data / 8388608 : data / 8388607;\n    }\n    pcm24s() {\n        const x0 = this.dataView.getUint8(this.pos + 0);\n        const x1 = this.dataView.getUint8(this.pos + 1);\n        const x2 = this.dataView.getUint8(this.pos + 2);\n        const xx = (x0 + (x1 << 8) + (x2 << 16));\n\n        const data = xx > 0x800000 ? xx - 0x1000000 : xx;\n        this.pos += 3;\n        return data / 8388608;\n    }\n    pcm32() {\n        const data = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return data < 0 ? data / 2147483648 : data / 2147483647;\n    }\n    pcm32s() {\n        const data = this.dataView.getInt32(this.pos, true);\n        this.pos += 4;\n        return data / 2147483648;\n    }\n    pcm32f() {\n        const data = this.dataView.getFloat32(this.pos, true);\n        this.pos += 4;\n        return data;\n    }\n    pcm64f() {\n        const data = this.dataView.getFloat64(this.pos, true);\n        this.pos += 8;\n        return data;\n    }\n}\n\nexport default WavDecoder;\n", "import { FaustBaseWebAudioDsp } from \"./FaustWebAudioDsp\";\r\nimport type { AudioData, FaustDspMeta, FaustUIItem, LooseFaustDspFactory } from \"./types\";\r\n\r\n/** Read metadata and fetch soundfiles */\r\nclass SoundfileReader {\r\n\r\n    // Set the fallback paths\r\n    static get fallbackPaths() { return [location.href, this.getParentUrl(location.href), location.origin]; }\r\n\r\n    /**\r\n     * Extract the parent URL from an URL.\r\n     * @param url : the URL\r\n     * @returns : the parent URL\r\n     */\r\n    private static getParentUrl(url: string) {\r\n        return url.substring(0, url.lastIndexOf('/') + 1);\r\n    }\r\n\r\n    /**\r\n     * Convert an audio buffer to audio data.\r\n     * \r\n     * @param audioBuffer : the audio buffer to convert\r\n     * @returns : the audio data\r\n     */\r\n    private static toAudioData(audioBuffer: AudioBuffer): AudioData {\r\n        const { sampleRate, numberOfChannels } = audioBuffer;\r\n        return {\r\n            sampleRate,\r\n            audioBuffer: new Array(numberOfChannels).fill(null).map((v, i) => audioBuffer.getChannelData(i))\r\n        } as AudioData;\r\n    }\r\n\r\n    /**\r\n     * Extract the URLs from the metadata.\r\n     * \r\n     * @param dspMeta : the metadata\r\n     * @returns : the URLs\r\n     */\r\n    static findSoundfilesFromMeta(dspMeta: FaustDspMeta): LooseFaustDspFactory[\"soundfiles\"] {\r\n        const soundfiles: LooseFaustDspFactory[\"soundfiles\"] = {};\r\n        const callback = (item: FaustUIItem) => {\r\n            if (item.type === \"soundfile\") {\r\n                const urls = FaustBaseWebAudioDsp.splitSoundfileNames(item.url);\r\n                // soundfiles.map[item.label] = urls;\r\n                urls.forEach(url => soundfiles[url] = null);\r\n            }\r\n        };\r\n        FaustBaseWebAudioDsp.parseUI(dspMeta.ui, callback);\r\n        return soundfiles;\r\n    }\r\n    /**\r\n     * Check if the file exists.\r\n     * \r\n     * @param url : the url of the file to check\r\n     * @returns : true if the file exists, otherwise false\r\n     */\r\n    private static async checkFileExists(url: string): Promise<boolean> {\r\n        try {\r\n            console.log(`\"checkFileExists\" url: ${url}`);\r\n            // Fetch in \"HEAD\" mode does not properly work with the service-worker.js cache, so use \"GET\" mode for now\r\n            //const response = await fetch(url, { method: \"HEAD\" });\r\n            const response = await fetch(url);\r\n            console.log(`\"checkFileExists\" response.ok: ${response.ok}`);\r\n            return response.ok; // Will be true if the status code is 200-299\r\n        } catch (error) {\r\n            console.error('Fetch error:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetch the soundfile.\r\n     * \r\n     * @param url : the url of the soundfile\r\n     * @param audioCtx : the audio context\r\n     * @returns : the audio data\r\n     */\r\n    private static async fetchSoundfile(url: string, audioCtx: BaseAudioContext): Promise<AudioData> {\r\n        console.log(`Loading sound file from ${url}`);\r\n        const response = await fetch(url);\r\n        if (!response.ok) throw new Error(`Failed to load sound file from ${url}: ${response.statusText}`);\r\n        // Decode the audio data\r\n        const arrayBuffer = await response.arrayBuffer();\r\n        const audioBuffer = await audioCtx.decodeAudioData(arrayBuffer);\r\n        return this.toAudioData(audioBuffer);\r\n    }\r\n\r\n    /**\r\n     * Load the soundfile.\r\n     * \r\n     * @param filename : the filename\r\n     * @param metaUrls : the metadata URLs\r\n     * @param soundfiles : the soundfiles\r\n     * @param audioCtx : the audio context\r\n     */\r\n    private static async loadSoundfile(filename: string, metaUrls: string[], soundfiles: LooseFaustDspFactory[\"soundfiles\"], audioCtx: BaseAudioContext): Promise<void> {\r\n        if (soundfiles[filename]) return;\r\n        const urlsToCheck = [filename, ...[...metaUrls, ...this.fallbackPaths].map(path => new URL(filename, path.endsWith(\"/\") ? path : `${path}/`).href)];\r\n        const checkResults = await Promise.all(urlsToCheck.map(url => this.checkFileExists(url)));\r\n        const successIndex = checkResults.findIndex(r => !!r);\r\n        if (successIndex === -1) throw new Error(`Failed to load sound file ${filename}, all check failed.`);\r\n        soundfiles[filename] = await this.fetchSoundfile(urlsToCheck[successIndex], audioCtx);\r\n    }\r\n\r\n    /**\r\n     * Load the soundfiles, public API.\r\n     * \r\n     * @param dspMeta : the metadata\r\n     * @param soundfilesIn : the soundfiles\r\n     * @param audioCtx : the audio context\r\n     * @returns : the soundfiles\r\n     */\r\n    static async loadSoundfiles(dspMeta: FaustDspMeta, soundfilesIn: LooseFaustDspFactory[\"soundfiles\"], audioCtx: BaseAudioContext): Promise<LooseFaustDspFactory[\"soundfiles\"]> {\r\n        const metaUrls = FaustBaseWebAudioDsp.extractUrlsFromMeta(dspMeta);\r\n        const soundfiles = this.findSoundfilesFromMeta(dspMeta);\r\n        for (const id in soundfiles) {\r\n            if (soundfilesIn[id]) {\r\n                soundfiles[id] = soundfilesIn[id];\r\n                continue;\r\n            }\r\n            try {\r\n                await this.loadSoundfile(id, metaUrls, soundfiles, audioCtx);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        return soundfiles;\r\n    }\r\n}\r\n\r\nexport default SoundfileReader;\r\n", "\r\n/**\r\n * Layout:\r\n * \r\n * \r\n * invert-isAndroid (uint8)\r\n * new-acc-data-available (uint8)\r\n * new-gyr-data-available (uint8)\r\n * empty (uint8)\r\n * \r\n * acc.x, acc.y, acc.z (f32)\r\n * \r\n * gyr.alpha, gyr.beta, gyr.gamma (f32)\r\n */\r\nexport class FaustAudioWorkletCommunicator {\r\n    protected readonly port: MessagePort;\r\n    protected readonly supportSharedArrayBuffer: boolean;\r\n    protected readonly byteLength: number;\r\n    protected uin8Invert: Uint8ClampedArray;\r\n    protected uin8NewAccData: Uint8ClampedArray;\r\n    protected uin8NewGyrData: Uint8ClampedArray;\r\n    protected f32Acc: Float32Array;\r\n    protected f32Gyr: Float32Array;\r\n    constructor(port: MessagePort) {\r\n        this.port = port;\r\n        this.supportSharedArrayBuffer = !!globalThis.SharedArrayBuffer;\r\n        this.byteLength\r\n            = 4 * Uint8Array.BYTES_PER_ELEMENT\r\n            + 3 * Float32Array.BYTES_PER_ELEMENT\r\n            + 3 * Float32Array.BYTES_PER_ELEMENT;\r\n    }\r\n    initializeBuffer(ab: SharedArrayBuffer | ArrayBuffer) {\r\n        let ptr = 0;\r\n        this.uin8Invert = new Uint8ClampedArray(ab, ptr, 1);\r\n        ptr += Uint8ClampedArray.BYTES_PER_ELEMENT;\r\n        this.uin8NewAccData = new Uint8ClampedArray(ab, ptr, 1);\r\n        ptr += Uint8ClampedArray.BYTES_PER_ELEMENT;\r\n        this.uin8NewGyrData = new Uint8ClampedArray(ab, ptr, 1);\r\n        ptr += Uint8ClampedArray.BYTES_PER_ELEMENT;\r\n        ptr += Uint8ClampedArray.BYTES_PER_ELEMENT;; // empty\r\n        this.f32Acc = new Float32Array(ab, ptr, 3);\r\n        ptr += 3 * Float32Array.BYTES_PER_ELEMENT;\r\n        this.f32Gyr = new Float32Array(ab, ptr, 3);\r\n        ptr += 3 * Float32Array.BYTES_PER_ELEMENT;\r\n    }\r\n    setNewAccDataAvailable(value: boolean) {\r\n        if (!this.uin8NewAccData) return;\r\n        this.uin8NewAccData[0] = +value;\r\n    }\r\n    getNewAccDataAvailable() {\r\n        return !!this.uin8NewAccData?.[0];\r\n    }\r\n    setNewGyrDataAvailable(value: boolean) {\r\n        if (!this.uin8NewGyrData) return;\r\n        this.uin8NewGyrData[0] = +value;\r\n    }\r\n    getNewGyrDataAvailable() {\r\n        return !!this.uin8NewGyrData?.[0];\r\n    }\r\n    setAcc({ x, y, z }: { x: number, y: number, z: number }, invert = false) {\r\n        if (!this.supportSharedArrayBuffer) {\r\n            const e = { type: \"acc\", data: { x, y, z }, invert };\r\n            this.port.postMessage(e);\r\n        }\r\n        if (!this.uin8NewAccData) return;\r\n        this.uin8Invert[0] = +invert;\r\n        this.f32Acc[0] = x;\r\n        this.f32Acc[1] = y;\r\n        this.f32Acc[2] = z;\r\n        this.uin8NewAccData[0] = 1;\r\n    }\r\n    getAcc() {\r\n        if (!this.uin8NewAccData) return;\r\n        const invert = !!this.uin8Invert[0];\r\n        const [x, y, z] = this.f32Acc;\r\n        return { x, y, z, invert };\r\n    }\r\n    setGyr({ alpha, beta, gamma }: { alpha: number, beta: number, gamma: number }) {\r\n        if (!this.supportSharedArrayBuffer) {\r\n            const e = { type: \"gyr\", data: { alpha, beta, gamma } };\r\n            this.port.postMessage(e);\r\n        }\r\n        if (!this.uin8NewGyrData) return;\r\n        this.f32Gyr[0] = alpha;\r\n        this.f32Gyr[1] = beta;\r\n        this.f32Gyr[2] = gamma;\r\n        this.uin8NewGyrData[0] = 1;\r\n    }\r\n    getGyr() {\r\n        if (!this.uin8NewGyrData) return;\r\n        const [alpha, beta, gamma] = this.f32Gyr;\r\n        return { alpha, beta, gamma };\r\n    }\r\n}\r\n\r\nexport class FaustAudioWorkletNodeCommunicator extends FaustAudioWorkletCommunicator {\r\n    constructor(port: MessagePort) {\r\n        super(port);\r\n        if (this.supportSharedArrayBuffer) {\r\n            const sab = new SharedArrayBuffer(this.byteLength);\r\n            this.initializeBuffer(sab);\r\n            this.port.postMessage({ type: \"initSab\", sab });\r\n        } else {\r\n            const ab = new ArrayBuffer(this.byteLength);\r\n            this.initializeBuffer(ab);\r\n        }\r\n    }\r\n}\r\n\r\nexport class FaustAudioWorkletProcessorCommunicator extends FaustAudioWorkletCommunicator {\r\n    constructor(port: MessagePort) {\r\n        super(port);\r\n\r\n        if (this.supportSharedArrayBuffer) {\r\n            this.port.addEventListener(\"message\", (event) => {\r\n                const { data } = event;\r\n                if (data.type === \"initSab\") {\r\n                    this.initializeBuffer(data.sab);\r\n                }\r\n            });\r\n        } else {\r\n            const ab = new ArrayBuffer(this.byteLength);\r\n            this.initializeBuffer(ab);\r\n            this.port.addEventListener(\"message\", (event) => {\r\n                const msg = event.data;\r\n\r\n                switch (msg.type) {\r\n                    // Sensors messages\r\n                    case \"acc\": {\r\n                        this.setAcc(msg.data, msg.invert);\r\n                        break;\r\n                    }\r\n                    case \"gyr\": {\r\n                        this.setGyr(msg.data);\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n", "import { OutputParamHandler, ComputeHandler, PlotHandler, UIHandler, MetadataHandler, FaustBaseWebAudioDsp, IFaustMonoWebAudioDsp, IFaustPolyWebAudioDsp } from \"./FaustWebAudioDsp\";\nimport type { FaustAudioWorkletNodeOptions } from \"./FaustAudioWorkletProcessor\";\nimport type { LooseFaustDspFactory, FaustDspMeta, FaustUIInputItem, FaustUIItem } from \"./types\";\nimport { FaustAudioWorkletNodeCommunicator } from \"./FaustAudioWorkletCommunicator\";\n\n/**\n * Base class for Monophonic and Polyphonic AudioWorkletNode\n */\nexport class FaustAudioWorkletNode<Poly extends boolean = false> extends (globalThis.AudioWorkletNode || null) {\n\n    protected fJSONDsp: FaustDspMeta;\n    protected fJSON: string;\n    protected fInputsItems: string[];\n    protected fOutputHandler: OutputParamHandler | null;\n    protected fComputeHandler: ComputeHandler | null;\n    protected fPlotHandler: PlotHandler | null;\n    protected fUICallback: UIHandler;\n    protected fDescriptor: FaustUIInputItem[];\n    protected fCommunicator: FaustAudioWorkletNodeCommunicator;\n    #hasAccInput = false;\n    #hasGyrInput = false;\n\n    constructor(context: BaseAudioContext, name: string, factory: LooseFaustDspFactory, options: Partial<FaustAudioWorkletNodeOptions<Poly>> = {}) {\n\n        // Create JSON object\n        const JSONObj: FaustDspMeta = JSON.parse(factory.json);\n\n        // Create proxy FaustAudioWorkletProcessor\n        super(context, name, {\n            numberOfInputs: JSONObj.inputs > 0 ? 1 : 0,\n            numberOfOutputs: JSONObj.outputs > 0 ? 1 : 0,\n            channelCount: Math.max(1, JSONObj.inputs),\n            outputChannelCount: [JSONObj.outputs],\n            channelCountMode: \"explicit\",\n            channelInterpretation: \"speakers\",\n            processorOptions: options.processorOptions,\n            ...options\n        });\n\n        this.fJSONDsp = JSONObj;\n        this.fJSON = factory.json;\n        this.fOutputHandler = null;\n        this.fComputeHandler = null;\n        this.fPlotHandler = null;\n        this.fDescriptor = [];\n\n        // Parse UI\n        this.fInputsItems = [];\n        this.fUICallback = (item: FaustUIItem) => {\n            if (item.type === \"vslider\" || item.type === \"hslider\" || item.type === \"button\" || item.type === \"checkbox\" || item.type === \"nentry\") {\n                // Keep inputs adresses\n                this.fInputsItems.push(item.address);\n                this.fDescriptor.push(item);\n                if (!item.meta) return;\n                item.meta.forEach((meta) => {\n                    const { midi, acc, gyr } = meta;\n                    if (acc) this.#hasAccInput = true;\n                    if (gyr) this.#hasGyrInput = true;\n                });\n            }\n        }\n\n        FaustBaseWebAudioDsp.parseUI(this.fJSONDsp.ui, this.fUICallback);\n\n        this.fCommunicator = new FaustAudioWorkletNodeCommunicator(this.port);\n\n        // Patch it with additional functions\n        this.port.addEventListener(\"message\", this.handleMessageAux);\n        this.port.start();\n    }\n\n    protected handleMessageAux = (e: MessageEvent) => {\n        if (e.data.type === \"param\" && this.fOutputHandler) {\n            this.fOutputHandler(e.data.path, e.data.value);\n        } else if (e.data.type === \"plot\" && this.fPlotHandler) {\n            this.fPlotHandler(e.data.value, e.data.index, e.data.events);\n        }\n    };\n\n    // Accelerometer and gyroscope handlers\n    private handleDeviceMotion = ({ accelerationIncludingGravity }: DeviceMotionEvent) => {\n        const isAndroid: boolean = /Android/i.test(navigator.userAgent);\n        if (!accelerationIncludingGravity) return;\n        const { x, y, z } = accelerationIncludingGravity;\n        this.propagateAcc({ x, y, z }, isAndroid);\n    };\n\n    private handleDeviceOrientation = ({ alpha, beta, gamma }: DeviceOrientationEvent) => {\n        this.propagateGyr({ alpha, beta, gamma });\n    };\n\n    // Public API\n\n    /** Setup accelerometer and gyroscope handlers */\n    async startSensors() {\n        if (this.hasAccInput) {\n            if (window.DeviceMotionEvent) {\n                // iOS 13+ requires a user gesture to enable DeviceMotionEvent, to be done in the main thread\n                window.addEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n            } else {\n                // Browser doesn't support DeviceMotionEvent\n                console.log(\"Cannot set the accelerometer handler.\");\n            }\n        }\n        if (this.hasGyrInput) {\n            if (window.DeviceMotionEvent) {\n                // iOS 13+ requires a user gesture to enable DeviceMotionEvent, to be done in the main thread\n                window.addEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n            } else {\n                // Browser doesn't support DeviceMotionEvent\n                console.log(\"Cannot set the gyroscope handler.\");\n            }\n        }\n    }\n\n    stopSensors() {\n        if (this.hasAccInput) {\n            window.removeEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n        }\n        if (this.hasGyrInput) {\n            window.removeEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n        }\n    }\n\n    setOutputParamHandler(handler: OutputParamHandler | null) {\n        this.fOutputHandler = handler;\n    }\n    getOutputParamHandler() {\n        return this.fOutputHandler;\n    }\n\n    setComputeHandler(handler: ComputeHandler | null) {\n        this.fComputeHandler = handler;\n    }\n    getComputeHandler(): ComputeHandler | null {\n        return this.fComputeHandler;\n    }\n\n    setPlotHandler(handler: PlotHandler | null) {\n        this.fPlotHandler = handler;\n        // Set PlotHandler on processor side\n        if (this.fPlotHandler) {\n            this.port.postMessage({ type: \"setPlotHandler\", data: true });\n        } else {\n            this.port.postMessage({ type: \"setPlotHandler\", data: false });\n        }\n    }\n    getPlotHandler(): PlotHandler | null {\n        return this.fPlotHandler;\n    }\n\n    setupWamEventHandler() {\n        this.port.postMessage({ type: \"setupWamEventHandler\" });\n    }\n\n    getNumInputs() {\n        return this.fJSONDsp.inputs;\n    }\n    getNumOutputs() {\n        return this.fJSONDsp.outputs;\n    }\n\n    // Implemented in subclasses\n    compute(inputs: Float32Array[], outputs: Float32Array[]) {\n        return false;\n    }\n\n    metadata(handler: MetadataHandler) {\n        if (this.fJSONDsp.meta) {\n            this.fJSONDsp.meta.forEach(meta => handler(Object.keys(meta)[0], meta[Object.keys(meta)[0]]));\n        }\n    }\n\n    midiMessage(data: number[] | Uint8Array): void {\n        const cmd = data[0] >> 4;\n        const channel = data[0] & 0xf;\n        const data1 = data[1];\n        const data2 = data[2];\n        if (cmd === 11) this.ctrlChange(channel, data1, data2);\n        else if (cmd === 14) this.pitchWheel(channel, data2 * 128.0 + data1);\n        if (cmd === 8 || (cmd === 9 && data2 === 0)) this.keyOff(channel, data1, data2);\n        else if (cmd === 9) this.keyOn(channel, data1, data2);\n        else this.port.postMessage({ type: \"midi\", data: data });\n    }\n\n    ctrlChange(channel: number, ctrl: number, value: number) {\n        const e = { type: \"ctrlChange\", data: [channel, ctrl, value] };\n        this.port.postMessage(e);\n    }\n    pitchWheel(channel: number, wheel: number) {\n        const e = { type: \"pitchWheel\", data: [channel, wheel] };\n        this.port.postMessage(e);\n    }\n    keyOn(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOn\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n    keyOff(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOff\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n\n    get hasAccInput() { return this.#hasAccInput; }\n\n    propagateAcc(accelerationIncludingGravity: NonNullable<DeviceMotionEvent[\"accelerationIncludingGravity\"]>, invert: boolean = false) {\n        if (!accelerationIncludingGravity) return;\n        const { x, y, z } = accelerationIncludingGravity;\n        this.fCommunicator.setAcc({ x: x!, y: y!, z: z! }, invert);\n    }\n\n    get hasGyrInput() { return this.#hasGyrInput; }\n\n    propagateGyr(event: Pick<DeviceOrientationEvent, \"alpha\" | \"beta\" | \"gamma\">) {\n        if (!event) return;\n        const { alpha, beta, gamma } = event;\n        this.fCommunicator.setGyr({ alpha: alpha!, beta: beta!, gamma: gamma! });\n    }\n\n    setParamValue(path: string, value: number) {\n        const e = { type: \"param\", data: { path, value } };\n        this.port.postMessage(e);\n        // Set value on AudioParam (but this is not used on Processor side for now)\n        const param = this.parameters.get(path);\n        if (param) param.setValueAtTime(value, this.context.currentTime);\n\n    }\n    getParamValue(path: string) {\n        // Get value of AudioParam\n        const param = this.parameters.get(path);\n        return (param) ? param.value : 0;\n    }\n\n    getParams() { return this.fInputsItems; }\n    getMeta() { return this.fJSONDsp; }\n    getJSON() { return JSON.stringify(this.getMeta()); }\n    getUI() { return this.fJSONDsp.ui; }\n    getDescriptors() { return this.fDescriptor; }\n\n    start() {\n        this.port.postMessage({ type: \"start\" });\n    }\n\n    stop() {\n        this.port.postMessage({ type: \"stop\" });\n    }\n\n    destroy() {\n        this.port.postMessage({ type: \"destroy\" });\n        this.port.close();\n    }\n}\n\n/**\n * Monophonic AudioWorkletNode\n */\nexport class FaustMonoAudioWorkletNode extends FaustAudioWorkletNode<false> implements IFaustMonoWebAudioDsp {\n\n    onprocessorerror = (e: Event) => {\n        // console.error(\"Error from \" + this.fJSONDsp.name + \" FaustMonoAudioWorkletNode\");\n        throw e;\n    }\n\n    constructor(context: BaseAudioContext, options: Partial<FaustAudioWorkletNodeOptions<false>> & Pick<FaustAudioWorkletNodeOptions<false>, \"processorOptions\">) {\n        super(context, options.processorOptions.name, options.processorOptions.factory, options);\n    }\n}\n\n/**\n * Polyphonic AudioWorkletNode\n */\nexport class FaustPolyAudioWorkletNode extends FaustAudioWorkletNode<true> implements IFaustPolyWebAudioDsp {\n\n    private fJSONEffect: FaustDspMeta | null;\n\n    onprocessorerror = (e: Event) => {\n        // console.error(\"Error from \" + this.fJSONDsp.name + \" FaustPolyAudioWorkletNode\");\n        throw e;\n    }\n\n    constructor(context: BaseAudioContext, options: Partial<FaustAudioWorkletNodeOptions<true>> & Pick<FaustAudioWorkletNodeOptions<true>, \"processorOptions\">) {\n\n        super(\n            context,\n            options.processorOptions.name,\n            options.processorOptions.voiceFactory,\n            options\n        );\n\n        this.fJSONEffect = options.processorOptions.effectFactory ? JSON.parse(options.processorOptions.effectFactory.json) : null;\n\n        if (this.fJSONEffect) {\n            FaustBaseWebAudioDsp.parseUI(this.fJSONEffect.ui, this.fUICallback);\n        }\n    }\n\n    // Public API\n    keyOn(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOn\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n\n    keyOff(channel: number, pitch: number, velocity: number) {\n        const e = { type: \"keyOff\", data: [channel, pitch, velocity] };\n        this.port.postMessage(e);\n    }\n\n    allNotesOff(hard: boolean) {\n        const e = { type: \"ctrlChange\", data: [0, 123, 0] };\n        this.port.postMessage(e);\n    }\n\n    getMeta() {\n        const o = this.fJSONDsp;\n        const e = this.fJSONEffect;\n        const r = { ...o };\n        if (e) {\n            r.ui = [{\n                type: \"tgroup\", label: \"Sequencer\", items: [\n                    { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                    { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                ]\n            }];\n        } else {\n            r.ui = [{\n                type: \"tgroup\", label: \"Polyphonic\", items: [\n                    { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                ]\n            }];\n        }\n        return r as FaustDspMeta;\n    }\n\n    getJSON() {\n        return JSON.stringify(this.getMeta());\n    }\n\n    getUI() {\n        return this.getMeta().ui;\n    }\n}\n", "import type { ComputeHandler, FaustMonoWebAudioDsp, FaustPolyWebAudioDsp, IFaustMonoWebAudioDsp, IFaustPolyWebAudioDsp, MetadataHandler, OutputParamHandler, PlotHandler } from \"./FaustWebAudioDsp\";\n\n/**\n * Base class for Monophonic and Polyphonic ScriptProcessorNode\n */\nexport class FaustScriptProcessorNode<Poly extends boolean = false> extends (globalThis.ScriptProcessorNode || null) {\n    protected fDSPCode!: Poly extends true ? FaustPolyWebAudioDsp : FaustMonoWebAudioDsp;\n\n    // Needed for ScriptProcessorNode\n    protected fInputs!: Float32Array[];\n    protected fOutputs!: Float32Array[];\n    protected handleDeviceMotion = undefined as any;\n    protected handleDeviceOrientation = undefined as any;\n\n    init(instance: Poly extends true ? FaustPolyWebAudioDsp : FaustMonoWebAudioDsp) {\n        this.fDSPCode = instance;\n\n        this.fInputs = new Array(this.fDSPCode.getNumInputs());\n        this.fOutputs = new Array(this.fDSPCode.getNumOutputs());\n\n        // Accelerometer and gyroscope handlers\n        this.handleDeviceMotion = ({ accelerationIncludingGravity }: DeviceMotionEvent) => {\n            const isAndroid: boolean = /Android/i.test(navigator.userAgent);\n            if (!accelerationIncludingGravity) return;\n            const { x, y, z } = accelerationIncludingGravity;\n            this.propagateAcc({ x, y, z }, isAndroid);\n        };\n\n        this.handleDeviceOrientation = ({ alpha, beta, gamma }: DeviceOrientationEvent) => {\n            this.propagateGyr({ alpha, beta, gamma });\n        };\n\n        this.onaudioprocess = (e) => {\n\n            // Read inputs\n            for (let chan = 0; chan < this.fDSPCode.getNumInputs(); chan++) {\n                this.fInputs[chan] = e.inputBuffer.getChannelData(chan);\n            }\n\n            // Read outputs\n            for (let chan = 0; chan < this.fDSPCode.getNumOutputs(); chan++) {\n                this.fOutputs[chan] = e.outputBuffer.getChannelData(chan);\n            }\n\n            return this.fDSPCode.compute(this.fInputs, this.fOutputs);\n        }\n\n        this.start();\n    }\n\n    // Public API\n\n    /** Start accelerometer and gyroscope handlers */\n    async startSensors() {\n        if (this.hasAccInput) {\n            if (window.DeviceMotionEvent) {\n                // iOS 13+ requires a user gesture to enable DeviceMotionEvent, to be done in the main thread\n                window.addEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n            } else {\n                // Browser doesn't support DeviceMotionEvent\n                console.log(\"Cannot set the accelerometer handler.\");\n            }\n        }\n        if (this.hasGyrInput) {\n            if (window.DeviceMotionEvent) {\n                // iOS 13+ requires a user gesture to enable DeviceMotionEvent, to be done in the main thread\n                window.addEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n            } else {\n                // Browser doesn't support DeviceMotionEvent\n                console.log(\"Cannot set the gyroscope handler.\");\n            }\n        }\n    }\n\n    /** Stop accelerometer and gyroscope handlers */\n    stopSensors() {\n        if (this.hasAccInput) {\n            window.removeEventListener(\"devicemotion\", this.handleDeviceMotion, true);\n        }\n        if (this.hasGyrInput) {\n            window.removeEventListener(\"deviceorientation\", this.handleDeviceOrientation, true);\n        }\n    }\n\n    compute(input: Float32Array[], output: Float32Array[]) { return this.fDSPCode.compute(input, output); }\n\n    setOutputParamHandler(handler: OutputParamHandler) { this.fDSPCode.setOutputParamHandler(handler); }\n    getOutputParamHandler() { return this.fDSPCode.getOutputParamHandler(); }\n\n    setComputeHandler(handler: ComputeHandler) { this.fDSPCode.setComputeHandler(handler); }\n    getComputeHandler() { return this.fDSPCode.getComputeHandler(); }\n\n    setPlotHandler(handler: PlotHandler) { this.fDSPCode.setPlotHandler(handler); }\n    getPlotHandler() { return this.fDSPCode.getPlotHandler(); }\n\n    getNumInputs() { return this.fDSPCode.getNumInputs(); }\n    getNumOutputs() { return this.fDSPCode.getNumOutputs(); }\n\n    metadata(handler: MetadataHandler) { }\n\n    midiMessage(data: number[] | Uint8Array) { this.fDSPCode.midiMessage(data); }\n\n    ctrlChange(chan: number, ctrl: number, value: number) { this.fDSPCode.ctrlChange(chan, ctrl, value); }\n    pitchWheel(chan: number, value: number) { this.fDSPCode.pitchWheel(chan, value); }\n    keyOn(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOn(channel, pitch, velocity); }\n    keyOff(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOff(channel, pitch, velocity); }\n\n    setParamValue(path: string, value: number) { this.fDSPCode.setParamValue(path, value); }\n    getParamValue(path: string) { return this.fDSPCode.getParamValue(path); }\n    getParams() { return this.fDSPCode.getParams(); }\n\n    getMeta() { return this.fDSPCode.getMeta(); }\n    getJSON() { return this.fDSPCode.getJSON(); }\n    getDescriptors() { return this.fDSPCode.getDescriptors(); }\n    getUI() { return this.fDSPCode.getUI(); }\n\n    start() { this.fDSPCode.start(); }\n    stop() { this.fDSPCode.stop(); }\n\n    destroy() { this.fDSPCode.destroy(); }\n\n    get hasAccInput() { return this.fDSPCode.hasAccInput; }\n\n    propagateAcc(accelerationIncludingGravity: NonNullable<DeviceMotionEvent[\"accelerationIncludingGravity\"]>, invert: boolean = false) {\n        this.fDSPCode.propagateAcc(accelerationIncludingGravity, invert);\n    }\n\n    get hasGyrInput() { return this.fDSPCode.hasGyrInput; }\n\n    propagateGyr(event: Pick<DeviceOrientationEvent, \"alpha\" | \"beta\" | \"gamma\">) {\n        this.fDSPCode.propagateGyr(event);\n    }\n}\n\nexport class FaustMonoScriptProcessorNode extends FaustScriptProcessorNode<false> implements IFaustMonoWebAudioDsp {\n}\n\nexport class FaustPolyScriptProcessorNode extends FaustScriptProcessorNode<true> implements IFaustPolyWebAudioDsp {\n    keyOn(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOn(channel, pitch, velocity); }\n    keyOff(channel: number, pitch: number, velocity: number) { this.fDSPCode.keyOff(channel, pitch, velocity); }\n    allNotesOff(hard: boolean) { this.fDSPCode.allNotesOff(hard); }\n}\n", "import { FaustMonoAudioWorkletNode, FaustPolyAudioWorkletNode } from \"./FaustAudioWorkletNode\";\nimport getFaustAudioWorkletProcessor, { FaustData } from \"./FaustAudioWorkletProcessor\";\nimport getFaustFFTAudioWorkletProcessor, { FaustFFTData, FaustFFTOptionsData } from \"./FaustFFTAudioWorkletProcessor\";\nimport { FaustDspInstance } from \"./FaustDspInstance\";\nimport FaustWasmInstantiator from \"./FaustWasmInstantiator\";\nimport { FaustMonoOfflineProcessor, FaustPolyOfflineProcessor, IFaustMonoOfflineProcessor, IFaustPolyOfflineProcessor } from \"./FaustOfflineProcessor\";\nimport { FaustMonoScriptProcessorNode, FaustPolyScriptProcessorNode } from \"./FaustScriptProcessorNode\";\nimport { FaustBaseWebAudioDsp, FaustMonoWebAudioDsp, FaustPolyWebAudioDsp, FaustWebAudioDspVoice, IFaustMonoWebAudioNode, IFaustPolyWebAudioNode, Soundfile, WasmAllocator } from \"./FaustWebAudioDsp\";\nimport SoundfileReader from \"./SoundfileReader\";\nimport FaustSensors from \"./FaustSensors\";\nimport type { IFaustCompiler } from \"./FaustCompiler\";\nimport type { FaustDspFactory, FaustUIDescriptor, FaustDspMeta, FFTUtils, LooseFaustDspFactory, AudioData } from \"./types\";\nimport { FaustAudioWorkletCommunicator, FaustAudioWorkletProcessorCommunicator } from \"./FaustAudioWorkletCommunicator\";\n\n\nexport interface GeneratorSupportingSoundfiles {\n    /**\n     * Attach a map of id - audio data, call after `compile()` before `createNode()`\n     * \n     * @param soundfileMap a map of id - `AudioData` as an object where `AudioData` contains channel data as `audioBuffer: Float32Array[]` and `sampleRate: number`\n     */\n    addSoundfiles(soundfileMap: Record<string, AudioData>): void;\n\n    /**\n     * Get a list of soundfiles needed, call after `compile()`\n     */\n    getSoundfileList(): string[];\n}\n\nexport interface IFaustMonoDspGenerator extends GeneratorSupportingSoundfiles {\n    /**\n     * Compile a monophonic DSP factory from given code.\n     * \n     * @param compiler - the Faust compiler\n     * @param name - the DSP name\n     * @param code - the DSP code\n     * @param args - the compilation parameters\n     * @returns the compiled factory or 'null' if failure\n     */\n    compile(compiler: IFaustCompiler, name: string, code: string, args: string): Promise<{\n        factory: FaustDspFactory | null;\n        name?: string;\n        meta?: FaustDspMeta;\n    } | null>;\n\n\n    /**\n     * Create a monophonic WebAudio node (either ScriptProcessorNode or AudioWorkletNode).\n     *\n     * @param context - the WebAudio context\n     * @param name - DSP name, can be used for processorName\n     * @param factory - default is the compiled factory\n     * @param sp - whether to compile a ScriptProcessorNode or an AudioWorkletNode\n     * @param bufferSize - the buffer size in frames to be used in ScriptProcessorNode only, since AudioWorkletNode always uses 128 frames\n     * @param processorName - AudioWorklet Processor name\n     * @param processorOptions - Additional AudioWorklet Processor options\n     * @returns the compiled WebAudio node or 'null' if failure\n     */\n    createNode(\n        context: BaseAudioContext,\n        name?: string,\n        factory?: LooseFaustDspFactory,\n        sp?: boolean,\n        bufferSize?: number,\n        processorName?: string,\n        processorOptions?: Record<string, any>\n    ): Promise<IFaustMonoWebAudioNode | null>;\n\n    /**\n     * Create a monophonic WebAudio node (either ScriptProcessorNode or AudioWorkletNode).\n     *\n     * @param context - the WebAudio context\n     * @param fftUtils - should be an anonymous class with static methods, without any import from outside\n     * @param name - DSP name, can be used for processorName\n     * @param factory - default is the compiled factory\n     * @param fftOptions - initial FFT options\n     * @param processorName - AudioWorklet Processor name\n     * @param processorOptions - Additional AudioWorklet Processor options\n     * @returns the compiled WebAudio node or 'null' if failure\n     */\n    createFFTNode(\n        context: BaseAudioContext,\n        fftUtils: typeof FFTUtils,\n        name?: string,\n        factory?: LooseFaustDspFactory,\n        fftOptions?: Partial<FaustFFTOptionsData>,\n        processorName?: string,\n        processorOptions?: Record<string, any>\n    ): Promise<FaustMonoAudioWorkletNode | null>;\n\n    /**\n     * Create a monophonic Offline processor.\n     *\n     * @param sampleRate - the sample rate in Hz\n     * @param bufferSize - the buffer size in frames\n     * @param factory - default is the compiled factory\n     * @param context - if this exists, will be used to fetch soundfiles online\n     * @returns the compiled processor or 'null' if failure\n     */\n    createOfflineProcessor(\n        sampleRate: number,\n        bufferSize: number,\n        factory?: LooseFaustDspFactory,\n        context?: BaseAudioContext\n    ): Promise<IFaustMonoOfflineProcessor | null>;\n\n    /**\n     * Get DSP JSON description with its UI and metadata as object.\n     *\n     * @return the DSP JSON description as object\n     */\n    getMeta(): FaustDspMeta;\n\n    /**\n     * Get DSP JSON description with its UI and metadata.\n     *\n     * @return the DSP JSON description\n     */\n    getJSON(): string;\n\n    /**\n     * Get DSP UI description.\n     *\n     * @return the DSP UI description\n     */\n    getUI(): FaustUIDescriptor;\n}\n\nexport interface IFaustPolyDspGenerator extends GeneratorSupportingSoundfiles {\n    /**\n     * Compile a monophonic DSP factory from given code.\n     * \n     * @param compiler - the Faust compiler\n     * @param name - the DSP name\n     * @param dspCode - the DSP code ('dspCode' can possibly contain an integrated effect)\n     * @param args - the compilation parameters\n     * @param effectCode - optional effect DSP code\n     * @returns the compiled factory or 'null' if failure\n     */\n    compile(compiler: IFaustCompiler, name: string, dspCode: string, args: string, effectCode?: string): Promise<{\n        voiceFactory: FaustDspFactory | null;\n        effectFactory?: FaustDspFactory | null;\n    } | null>;\n\n    /**\n     * Create a polyphonic WebAudio node (either ScriptProcessorNode or AudioWorkletNode).\n     *\n     * @param context the WebAudio context\n     * @param voices - the number of voices\n     * @param name - AudioWorklet Processor name\n     * @param voiceFactory - the Faust factory for voices, either obtained with a compiler (createDSPFactory) or loaded from files (loadDSPFactory)\n     * @param mixerModule - the wasm Mixer module (loaded from 'mixer32.wasm' or 'mixer64.wasm' files located in the 'faustwasm' package)\n     * @param effectFactory - the Faust factory for the effect, either obtained with a compiler (createDSPFactory) or loaded from files (loadDSPFactory)\n     * @param sp - whether to compile a ScriptProcessorNode or an AudioWorkletNode\n     * @param bufferSize - the buffer size in frames to be used in ScriptProcessorNode only, since AudioWorkletNode always uses 128 frames\n     * @param processorOptions - Additional AudioWorklet Processor options\n     * @returns the compiled WebAudio node or 'null' if failure\n     */\n    createNode(\n        context: BaseAudioContext,\n        voices: number,\n        name?: string,\n        voiceFactory?: LooseFaustDspFactory,\n        mixerModule?: WebAssembly.Module,\n        effectFactory?: LooseFaustDspFactory | null,\n        sp?: boolean,\n        bufferSize?: number,\n        processorName?: string,\n        processorOptions?: Record<string, any>\n    ): Promise<IFaustPolyWebAudioNode | null>;\n\n    /**\n     * Create a monophonic Offline processor.\n     *\n     * @param sampleRate - the sample rate in Hz\n     * @param bufferSize - the buffer size in frames\n     * @param voiceFactory - the Faust factory for voices, either obtained with a compiler (createDSPFactory) or loaded from files (loadDSPFactory)\n     * @param mixerModule - the wasm Mixer module (loaded from 'mixer32.wasm' or 'mixer64.wasm' files)\n     * @param effectFactory - the Faust factory for the effect, either obtained with a compiler (createDSPFactory) or loaded from files (loadDSPFactory)\n     * @param context - if this exists, will be used to fetch soundfiles online\n     * @returns the compiled processor or 'null' if failure\n     */\n    createOfflineProcessor(\n        sampleRate: number,\n        bufferSize: number,\n        voices: number,\n        voiceFactory?: LooseFaustDspFactory,\n        mixerModule?: WebAssembly.Module,\n        effectFactory?: LooseFaustDspFactory | null,\n        context?: BaseAudioContext\n    ): Promise<IFaustPolyOfflineProcessor | null>;\n\n    /**\n     * Get DSP JSON description with its UI and metadata as object.\n     *\n     * @return the DSP JSON description as object\n     */\n    getMeta(): FaustDspMeta;\n\n    /**\n     * Get DSP JSON description with its UI and metadata.\n     *\n     * @return the DSP JSON description\n     */\n    getJSON(): string;\n\n    /**\n     * Get DSP UI description.\n     *\n     * @return the DSP UI description\n     */\n    getUI(): FaustUIDescriptor;\n}\n\nexport class FaustMonoDspGenerator implements IFaustMonoDspGenerator {\n    // Set of all created WorkletProcessors, each of them has to be unique\n    private static gWorkletProcessors: Map<BaseAudioContext, Set<string>> = new Map();\n\n    name: string;\n    factory!: FaustDspFactory | null;\n\n    constructor() {\n        this.factory = null;\n    }\n    async compile(compiler: IFaustCompiler, name: string, code: string, args: string) {\n        this.factory = await compiler.createMonoDSPFactory(name, code, args);\n        if (this.factory) {\n            this.name = name;\n            return this;\n        } else {\n            return null;\n        }\n    }\n\n    addSoundfiles(soundfileMap: Record<string, AudioData>) {\n        if (!this.factory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n        for (const id in soundfileMap) {\n            this.factory.soundfiles[id] = soundfileMap[id];\n        }\n    }\n    getSoundfileList() {\n        if (!this.factory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n        const meta = JSON.parse(this.factory.json);\n        const map = SoundfileReader.findSoundfilesFromMeta(meta);\n        return Object.keys(map);\n    }\n\n    async createNode<SP extends boolean = false>(\n        context: BaseAudioContext,\n        name = this.name,\n        factory = this.factory as LooseFaustDspFactory,\n        sp = false as SP,\n        bufferSize = 1024,\n        processorName = factory?.shaKey || name,\n        processorOptions: Record<string, any> = {}\n    ): Promise<SP extends true ? FaustMonoScriptProcessorNode | null : FaustMonoAudioWorkletNode | null> {\n        if (!factory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const meta = JSON.parse(factory.json);\n        const sampleSize = meta.compile_options.match(\"-double\") ? 8 : 4;\n        factory.soundfiles = await SoundfileReader.loadSoundfiles(meta, factory.soundfiles || {}, context);\n        if (sp) {\n            const instance = await FaustWasmInstantiator.createAsyncMonoDSPInstance(factory);\n            const monoDsp = new FaustMonoWebAudioDsp(instance, context.sampleRate, sampleSize, bufferSize, factory.soundfiles);\n\n            const sp = context.createScriptProcessor(bufferSize, monoDsp.getNumInputs(), monoDsp.getNumOutputs()) as FaustMonoScriptProcessorNode;\n            Object.setPrototypeOf(sp, FaustMonoScriptProcessorNode.prototype);\n            sp.init(monoDsp);\n            return sp as SP extends true ? FaustMonoScriptProcessorNode : FaustMonoAudioWorkletNode;\n        } else {\n            // Dynamically create AudioWorkletProcessor if code not yet created\n            if (!FaustMonoDspGenerator.gWorkletProcessors.has(context)) FaustMonoDspGenerator.gWorkletProcessors.set(context, new Set());\n            if (!FaustMonoDspGenerator.gWorkletProcessors.get(context)?.has(processorName)) {\n                try {\n                    const processorCode = `\n// DSP name and JSON string for DSP are generated\nconst faustData = ${JSON.stringify({\n                        processorName,\n                        dspName: name,\n                        dspMeta: meta,\n                        poly: false\n                    } as FaustData)};\n// Implementation needed classes of functions\nvar ${FaustDspInstance.name} = ${FaustDspInstance.toString()}\nvar FaustDspInstance = ${FaustDspInstance.name};\nvar ${FaustBaseWebAudioDsp.name} = ${FaustBaseWebAudioDsp.toString()}\nvar FaustBaseWebAudioDsp = ${FaustBaseWebAudioDsp.name};\nvar ${FaustMonoWebAudioDsp.name} = ${FaustMonoWebAudioDsp.toString()}\nvar FaustMonoWebAudioDsp = ${FaustMonoWebAudioDsp.name};\nvar ${FaustWasmInstantiator.name} = ${FaustWasmInstantiator.toString()}\nvar FaustWasmInstantiator = ${FaustWasmInstantiator.name};\nvar ${Soundfile.name} = ${Soundfile.toString()}\nvar Soundfile = ${Soundfile.name};\nvar ${WasmAllocator.name} = ${WasmAllocator.toString()}\nvar WasmAllocator = ${WasmAllocator.name};\nvar ${FaustSensors.name} = ${FaustSensors.toString()}\nvar FaustSensors = ${FaustSensors.name};\nvar ${FaustAudioWorkletCommunicator.name} = ${FaustAudioWorkletCommunicator.toString()}\nvar FaustAudioWorkletCommunicator = ${FaustAudioWorkletCommunicator.name};\nvar ${FaustAudioWorkletProcessorCommunicator.name} = ${FaustAudioWorkletProcessorCommunicator.toString()}\nvar FaustAudioWorkletProcessorCommunicator = ${FaustAudioWorkletProcessorCommunicator.name};\n// Put them in dependencies\nconst dependencies = {\n    FaustBaseWebAudioDsp,\n    FaustMonoWebAudioDsp,\n    FaustWasmInstantiator,\n    FaustAudioWorkletProcessorCommunicator\n};\n// Generate the actual AudioWorkletProcessor code\n(${getFaustAudioWorkletProcessor.toString()})(dependencies, faustData);\n`;\n                    const url = URL.createObjectURL(new Blob([processorCode], { type: \"text/javascript\" }));\n                    await context.audioWorklet.addModule(url);\n                    // Keep the DSP name\n                    FaustMonoDspGenerator.gWorkletProcessors.get(context)?.add(processorName);\n                } catch (e) {\n                    // console.error(`=> exception raised while running createMonoNode: ${e}`);\n                    // console.error(`=> check that your page is served using https.${e}`);\n                    throw e;\n                }\n            }\n            // Create the AWN\n            const node = new FaustMonoAudioWorkletNode(context, { processorOptions: { name: processorName, factory, sampleSize, ...processorOptions } });\n\n            return node as SP extends true ? FaustMonoScriptProcessorNode : FaustMonoAudioWorkletNode;\n        }\n    }\n\n    async createFFTNode(\n        context: BaseAudioContext,\n        fftUtils: typeof FFTUtils,\n        name = this.name,\n        factory = this.factory as LooseFaustDspFactory,\n        fftOptions: Partial<FaustFFTOptionsData> = {},\n        processorName = factory?.shaKey ? `${factory.shaKey}_fft` : name,\n        processorOptions: Record<string, any> = {}\n    ): Promise<FaustMonoAudioWorkletNode | null> {\n        if (!factory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const meta: FaustDspMeta = JSON.parse(factory.json);\n        const sampleSize = meta.compile_options.match(\"-double\") ? 8 : 4;\n        factory.soundfiles = await SoundfileReader.loadSoundfiles(meta, factory.soundfiles || {}, context);\n        // Dynamically create AudioWorkletProcessor if code not yet created\n        if (!FaustMonoDspGenerator.gWorkletProcessors.has(context)) FaustMonoDspGenerator.gWorkletProcessors.set(context, new Set());\n        if (!FaustMonoDspGenerator.gWorkletProcessors.get(context)?.has(processorName)) {\n            try {\n                const processorCode = `\n// DSP name and JSON string for DSP are generated\nconst faustData = ${JSON.stringify({\n                    processorName,\n                    dspName: name,\n                    dspMeta: meta,\n                    fftOptions\n                } as FaustFFTData)};\n// Implementation needed classes of functions\nvar ${FaustDspInstance.name} = ${FaustDspInstance.toString()}\nvar FaustDspInstance = ${FaustDspInstance.name};\nvar ${FaustBaseWebAudioDsp.name} = ${FaustBaseWebAudioDsp.toString()}\nvar FaustBaseWebAudioDsp = ${FaustBaseWebAudioDsp.name};\nvar ${FaustMonoWebAudioDsp.name} = ${FaustMonoWebAudioDsp.toString()}\nvar FaustMonoWebAudioDsp = ${FaustMonoWebAudioDsp.name};\nvar ${FaustWasmInstantiator.name} = ${FaustWasmInstantiator.toString()}\nvar FaustWasmInstantiator = ${FaustWasmInstantiator.name};\nvar ${Soundfile.name} = ${Soundfile.toString()}\nvar Soundfile = ${Soundfile.name};\nvar ${WasmAllocator.name} = ${WasmAllocator.toString()}\nvar WasmAllocator = ${WasmAllocator.name};\nvar ${FaustSensors.name} = ${FaustSensors.toString()}\nvar FaustSensors = ${FaustSensors.name};\nvar ${FaustAudioWorkletCommunicator.name} = ${FaustAudioWorkletCommunicator.toString()}\nvar FaustAudioWorkletCommunicator = ${FaustAudioWorkletCommunicator.name};\nvar ${FaustAudioWorkletProcessorCommunicator.name} = ${FaustAudioWorkletProcessorCommunicator.toString()}\nvar FaustAudioWorkletProcessorCommunicator = ${FaustAudioWorkletProcessorCommunicator.name};\nvar FFTUtils = ${fftUtils.toString()}\n// Put them in dependencies\nconst dependencies = {\n    FaustBaseWebAudioDsp,\n    FaustMonoWebAudioDsp,\n    FaustWasmInstantiator,\n    FaustAudioWorkletProcessorCommunicator,\n    FFTUtils\n};\n// Generate the actual AudioWorkletProcessor code\n(${getFaustFFTAudioWorkletProcessor.toString()})(dependencies, faustData);\n`;\n                const url = URL.createObjectURL(new Blob([processorCode], { type: \"text/javascript\" }));\n                await context.audioWorklet.addModule(url);\n                // Keep the DSP name\n                FaustMonoDspGenerator.gWorkletProcessors.get(context)?.add(processorName);\n            } catch (e) {\n                // console.error(`=> exception raised while running createMonoNode: ${e}`);\n                // console.error(`=> check that your page is served using https.${e}`);\n                throw e;\n            }\n        }\n        // Create the AWN\n        const node = new FaustMonoAudioWorkletNode(context, { channelCount: Math.max(1, Math.ceil(meta.inputs / 3)), outputChannelCount: [Math.ceil(meta.outputs / 2)], processorOptions: { name: processorName, factory, sampleSize, ...processorOptions } });\n        if (fftOptions.fftSize) {\n            const param = node.parameters.get(\"fftSize\");\n            if (param) param.value = fftOptions.fftSize;\n        }\n        if (fftOptions.fftOverlap) {\n            const param = node.parameters.get(\"fftOverlap\");\n            if (param) param.value = fftOptions.fftOverlap;\n        }\n        if (typeof fftOptions.defaultWindowFunction === \"number\") {\n            const param = node.parameters.get(\"windowFunction\");\n            if (param) param.value = fftOptions.defaultWindowFunction + 1;\n        }\n        if (typeof fftOptions.noIFFT === \"boolean\") {\n            const param = node.parameters.get(\"noIFFT\");\n            if (param) param.value = +fftOptions.noIFFT;\n        }\n        return node;\n    }\n\n    async createAudioWorkletProcessor(\n        name = this.name,\n        factory = this.factory as LooseFaustDspFactory,\n        processorName = factory?.shaKey || name\n    ) {\n        if (!factory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const meta = JSON.parse(factory.json);\n        const dependencies = {\n            FaustBaseWebAudioDsp,\n            FaustMonoWebAudioDsp,\n            FaustWasmInstantiator,\n            FaustAudioWorkletProcessorCommunicator,\n            FaustPolyWebAudioDsp: undefined,\n            FaustWebAudioDspVoice: undefined,\n        }\n        // const sampleSize = meta.compile_options.match(\"-double\") ? 8 : 4;\n        // Dynamically create AudioWorkletProcessor if code not yet created\n        try {\n            // DSP name and JSON string for DSP are generated\n            const faustData = {\n                processorName,\n                dspName: name,\n                dspMeta: meta,\n                poly: false\n            } as FaustData;\n            // Generate the actual AudioWorkletProcessor code\n            const Processor = getFaustAudioWorkletProcessor(dependencies, faustData);\n            return Processor;\n        } catch (e) {\n            // console.error(`=> exception raised while running createMonoNode: ${e}`);\n            // console.error(`=> check that your page is served using https.${e}`);\n            throw e;\n        }\n    }\n\n    async createOfflineProcessor(\n        sampleRate: number,\n        bufferSize: number,\n        factory = this.factory as LooseFaustDspFactory,\n        context?: BaseAudioContext\n    ) {\n        if (!factory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const meta = JSON.parse(factory.json);\n        const instance = await FaustWasmInstantiator.createAsyncMonoDSPInstance(factory);\n        const sampleSize = meta.compile_options.match(\"-double\") ? 8 : 4;\n        if (context) factory.soundfiles = await SoundfileReader.loadSoundfiles(meta, factory.soundfiles || {}, context);\n        const monoDsp = new FaustMonoWebAudioDsp(instance, sampleRate, sampleSize, bufferSize, factory.soundfiles);\n        return new FaustMonoOfflineProcessor(monoDsp, bufferSize);\n    }\n\n    getMeta() { return JSON.parse(this.factory!.json); }\n    getJSON() { return JSON.stringify(this.getMeta()); }\n    getUI() { return this.getMeta().ui; }\n}\n\nexport class FaustPolyDspGenerator implements IFaustPolyDspGenerator {\n    // Set of all created WorkletProcessors, each of them has to be unique\n    private static gWorkletProcessors: Map<BaseAudioContext, Set<string>> = new Map();\n\n    name: string;\n    voiceFactory!: FaustDspFactory | null;\n    effectFactory!: FaustDspFactory | null;\n    mixerBuffer!: Uint8Array;\n    mixerModule!: WebAssembly.Module;\n\n    constructor() {\n        this.voiceFactory = null;\n        this.effectFactory = null;\n    }\n    async compile(\n        compiler: IFaustCompiler,\n        name: string,\n        dspCodeAux: string,\n        args: string,\n        // The ${dspCode} has to be added with wrapping new lines to make it properly formatted and ready to compile  \n        effectCodeAux = `dsp_code = environment{\n                ${dspCodeAux}\n            };\n            process = dsp_code.effect;`\n    ) {\n        // Try to compile effect, possibly failing\n        try {\n            this.effectFactory = await compiler.createPolyDSPFactory(name, effectCodeAux, args);\n            // Since the effect is processing the same buffers for inputs and outputs (in place processing), \n            // the voice and effect are adapted, possibly clearing buffers\n            if (this.effectFactory) {\n                const effectJSON = JSON.parse(this.effectFactory.json);\n                const dspCode = `\\\n// Voice output is forced to 2, when DSP is stereo or effect has 2 ins or 2 outs,\n// so that the effect can process the 2 channels of the voice\nadaptOut(1,1,1) = _;\nadaptOut(1,1,2) = _ <: _,0;  // The left channel only is kept\nadaptOut(1,2,1) = _ <: _,_;\nadaptOut(1,2,2) = _ <: _,_;\nadaptOut(2,1,1) = _,_;\nadaptOut(2,1,2) = _,_;\nadaptOut(2,2,1) = _,_;\nadaptOut(2,2,2) = _,_;\nadaptor(F) = adaptOut(outputs(F),${effectJSON.inputs},${effectJSON.outputs});\ndsp_code = environment{\n    ${dspCodeAux}\n};\nprocess = dsp_code.process : adaptor(dsp_code.process);\n`;\n                const effectCode = `\\\n// Inputs\nadaptIn(1,1,1) = _;\nadaptIn(1,1,2) = _,_ :> _;  \nadaptIn(1,2,1) = _,_;\nadaptIn(1,2,2) = _,_;\nadaptIn(2,1,1) = _,_ :> _;\nadaptIn(2,1,2) = _,_ :> _;\nadaptIn(2,2,1) = _,_;\nadaptIn(2,2,2) = _,_;\n// Outputs\nadaptOut(1,1) = _ <: _,0;   // The left channel only is kept\nadaptOut(1,2) = _,_;\nadaptOut(2,1) = _ <: _,0;   // The left channel only is kept\nadaptOut(2,2) = _,_;\nadaptorIns(F) = adaptIn(outputs(F),${effectJSON.inputs},${effectJSON.outputs});\nadaptorOuts = adaptOut(${effectJSON.inputs},${effectJSON.outputs});\ndsp_code = environment{\n    ${dspCodeAux}\n};\nprocess = adaptorIns(dsp_code.process) : dsp_code.effect : adaptorOuts;\n`;\n                this.voiceFactory = await compiler.createPolyDSPFactory(name, dspCode, args);\n                try {\n                    // Effect is processing same buffers for inputs and outputs, so has to use -inpl option\n                    this.effectFactory = await compiler.createPolyDSPFactory(name, effectCode, args + \" -inpl\");\n                } catch (e) {\n                    console.warn(e);\n                }\n            }\n        } catch (e) {\n            console.warn(e);\n            this.voiceFactory = await compiler.createPolyDSPFactory(name, dspCodeAux, args);\n        }\n\n        if (this.voiceFactory) {\n            this.name = name;\n            const voiceMeta = JSON.parse(this.voiceFactory.json);\n            const isDouble = voiceMeta.compile_options.match(\"-double\");\n            const { mixerBuffer, mixerModule } = await compiler.getAsyncInternalMixerModule(!!isDouble);\n            this.mixerBuffer = mixerBuffer;\n            this.mixerModule = mixerModule;\n            return this;\n        } else {\n            return null;\n        }\n    }\n\n    addSoundfiles(soundfileMap: Record<string, AudioData>) {\n        if (!this.voiceFactory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n        for (const id in soundfileMap) {\n            this.voiceFactory.soundfiles[id] = soundfileMap[id];\n        }\n    }\n    getSoundfileList() {\n        if (!this.voiceFactory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n        const meta = JSON.parse(this.voiceFactory.json);\n        const map = SoundfileReader.findSoundfilesFromMeta(meta);\n        if (!this.effectFactory) return Object.keys(map);\n        const effectMeta = JSON.parse(this.effectFactory.json);\n        const effectMap = SoundfileReader.findSoundfilesFromMeta(effectMeta);\n        return Object.keys({ ...effectMap, ...map });\n    }\n\n    async createNode<SP extends boolean = false>(\n        context: BaseAudioContext,\n        voices: number,\n        name = this.name,\n        voiceFactory = this.voiceFactory as LooseFaustDspFactory,\n        mixerModule = this.mixerModule,\n        effectFactory = this.effectFactory as LooseFaustDspFactory | null,\n        sp = false as SP,\n        bufferSize = 1024,\n        processorName = ((voiceFactory?.shaKey || \"\") + (effectFactory?.shaKey || \"\")) || `${name}_poly`,\n        processorOptions = {}\n    ): Promise<SP extends true ? FaustPolyScriptProcessorNode | null : FaustPolyAudioWorkletNode | null> {\n        if (!voiceFactory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const voiceMeta = JSON.parse(voiceFactory.json);\n        const effectMeta = effectFactory ? JSON.parse(effectFactory.json) : undefined;\n        const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n        voiceFactory.soundfiles = await SoundfileReader.loadSoundfiles(voiceMeta, voiceFactory.soundfiles || {}, context);\n        if (effectFactory) effectFactory.soundfiles = await SoundfileReader.loadSoundfiles(effectMeta, effectFactory.soundfiles || {}, context);\n        if (sp) {\n            const instance = await FaustWasmInstantiator.createAsyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory || undefined);\n            const soundfiles = { ...effectFactory?.soundfiles, ...voiceFactory.soundfiles };\n            const polyDsp = new FaustPolyWebAudioDsp(instance, context.sampleRate, sampleSize, bufferSize, soundfiles);\n\n            const sp = context.createScriptProcessor(bufferSize, polyDsp.getNumInputs(), polyDsp.getNumOutputs()) as FaustPolyScriptProcessorNode;\n            Object.setPrototypeOf(sp, FaustPolyScriptProcessorNode.prototype);\n            sp.init(polyDsp);\n            return sp as SP extends true ? FaustPolyScriptProcessorNode : FaustPolyAudioWorkletNode;\n        } else {\n            // Dynamically create AudioWorkletProcessor if code not yet created\n            if (!FaustPolyDspGenerator.gWorkletProcessors.has(context)) FaustPolyDspGenerator.gWorkletProcessors.set(context, new Set());\n            if (!FaustPolyDspGenerator.gWorkletProcessors.get(context)?.has(processorName)) {\n                try {\n                    const processorCode = `\n// DSP name and JSON string for DSP are generated\nconst faustData = ${JSON.stringify({\n                        processorName,\n                        dspName: name,\n                        dspMeta: voiceMeta,\n                        poly: true,\n                        effectMeta\n                    } as FaustData)};\n// Implementation needed classes of functions\nvar ${FaustDspInstance.name} = ${FaustDspInstance.toString()}\nvar FaustDspInstance = ${FaustDspInstance.name};\nvar ${FaustBaseWebAudioDsp.name} = ${FaustBaseWebAudioDsp.toString()}\nvar FaustBaseWebAudioDsp = ${FaustBaseWebAudioDsp.name};\nvar ${FaustPolyWebAudioDsp.name} = ${FaustPolyWebAudioDsp.toString()}\nvar FaustPolyWebAudioDsp = ${FaustPolyWebAudioDsp.name};\nvar ${FaustWebAudioDspVoice.name} = ${FaustWebAudioDspVoice.toString()}\nvar FaustWebAudioDspVoice = ${FaustWebAudioDspVoice.name};\nvar ${FaustWasmInstantiator.name} = ${FaustWasmInstantiator.toString()}\nvar FaustWasmInstantiator = ${FaustWasmInstantiator.name};\nvar ${Soundfile.name} = ${Soundfile.toString()}\nvar Soundfile = ${Soundfile.name};\nvar ${WasmAllocator.name} = ${WasmAllocator.toString()}\nvar WasmAllocator = ${WasmAllocator.name};\nvar ${FaustSensors.name} = ${FaustSensors.toString()}\nvar FaustSensors = ${FaustSensors.name};\nvar ${FaustAudioWorkletCommunicator.name} = ${FaustAudioWorkletCommunicator.toString()}\nvar FaustAudioWorkletCommunicator = ${FaustAudioWorkletCommunicator.name};\nvar ${FaustAudioWorkletProcessorCommunicator.name} = ${FaustAudioWorkletProcessorCommunicator.toString()}\nvar FaustAudioWorkletProcessorCommunicator = ${FaustAudioWorkletProcessorCommunicator.name};\n// Put them in dependencies\nconst dependencies = {\n    FaustBaseWebAudioDsp,\n    FaustPolyWebAudioDsp,\n    FaustWasmInstantiator,\n    FaustAudioWorkletProcessorCommunicator\n};\n// Generate the actual AudioWorkletProcessor code\n(${getFaustAudioWorkletProcessor.toString()})(dependencies, faustData);\n`;\n                    const url = URL.createObjectURL(new Blob([processorCode], { type: \"text/javascript\" }));\n                    await context.audioWorklet.addModule(url);\n                    // Keep the DSP name\n                    FaustPolyDspGenerator.gWorkletProcessors.get(context)?.add(processorName);\n                } catch (e) {\n                    // console.error(`=> exception raised while running createPolyNode: ${e}`);\n                    // console.error(`=> check that your page is served using https.${e}`);\n                    throw e;\n                }\n            }\n            // Create the AWN\n            const node = new FaustPolyAudioWorkletNode(context, { processorOptions: { name: processorName, voiceFactory, mixerModule, voices, sampleSize, effectFactory: effectFactory || undefined, ...processorOptions } });\n\n            return node as SP extends true ? FaustPolyScriptProcessorNode : FaustPolyAudioWorkletNode;\n        }\n    }\n\n    async createAudioWorkletProcessor(\n        name = this.name,\n        voiceFactory = this.voiceFactory as LooseFaustDspFactory,\n        effectFactory = this.effectFactory as LooseFaustDspFactory | null,\n        processorName = ((voiceFactory?.shaKey || \"\") + (effectFactory?.shaKey || \"\")) || `${name}_poly`\n    ) {\n        if (!voiceFactory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const voiceMeta = JSON.parse(voiceFactory.json);\n        const effectMeta = effectFactory ? JSON.parse(effectFactory.json) : undefined;\n        const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n        // Dynamically create AudioWorkletProcessor if code not yet created\n        try {\n            const dependencies = {\n                FaustBaseWebAudioDsp,\n                FaustMonoWebAudioDsp: undefined,\n                FaustWasmInstantiator,\n                FaustPolyWebAudioDsp,\n                FaustWebAudioDspVoice,\n                FaustAudioWorkletProcessorCommunicator\n            };\n            // DSP name and JSON string for DSP are generated\n            const faustData = {\n                processorName,\n                dspName: name,\n                dspMeta: voiceMeta,\n                poly: true,\n                effectMeta\n            } as FaustData;\n            // Generate the actual AudioWorkletProcessor code\n            const Processor = getFaustAudioWorkletProcessor<true>(dependencies, faustData);\n            return Processor;\n        } catch (e) {\n            // console.error(`=> exception raised while running createPolyNode: ${e}`);\n            // console.error(`=> check that your page is served using https.${e}`);\n            throw e;\n        }\n    }\n\n    async createOfflineProcessor(\n        sampleRate: number,\n        bufferSize: number,\n        voices: number,\n        voiceFactory = this.voiceFactory as LooseFaustDspFactory,\n        mixerModule = this.mixerModule,\n        effectFactory = this.effectFactory as LooseFaustDspFactory | null,\n        context?: BaseAudioContext\n    ) {\n        if (!voiceFactory) throw new Error(\"Code is not compiled, please define the factory or call `await this.compile()` first.\");\n\n        const voiceMeta = JSON.parse(voiceFactory.json);\n        const effectMeta = effectFactory ? JSON.parse(effectFactory.json) : undefined;\n        const instance = await FaustWasmInstantiator.createAsyncPolyDSPInstance(voiceFactory, mixerModule, voices, effectFactory || undefined);\n        const sampleSize = voiceMeta.compile_options.match(\"-double\") ? 8 : 4;\n        if (context) {\n            voiceFactory.soundfiles = await SoundfileReader.loadSoundfiles(voiceMeta, voiceFactory.soundfiles || {}, context);\n            if (effectFactory) effectFactory.soundfiles = await SoundfileReader.loadSoundfiles(effectMeta, effectFactory.soundfiles || {}, context);\n        }\n        const soundfiles = { ...effectFactory?.soundfiles, ...voiceFactory.soundfiles };\n        const polyDsp = new FaustPolyWebAudioDsp(instance, sampleRate, sampleSize, bufferSize, soundfiles);\n        return new FaustPolyOfflineProcessor(polyDsp, bufferSize);\n    }\n\n    getMeta() {\n        const o = (this.voiceFactory) ? JSON.parse(this.voiceFactory.json) : null;\n        const e = (this.effectFactory) ? JSON.parse(this.effectFactory.json) : null;\n        const r = { ...o };\n        if (e) {\n            r.ui = [{\n                type: \"tgroup\", label: \"Sequencer\", items: [\n                    { type: \"vgroup\", label: \"Instrument\", items: o.ui },\n                    { type: \"vgroup\", label: \"Effect\", items: e.ui }\n                ]\n            }];\n        } else {\n            r.ui = [{\n                type: \"tgroup\", label: \"Polyphonic\", items: [\n                    { type: \"vgroup\", label: \"Voices\", items: o.ui }\n                ]\n            }];\n        }\n        return r as FaustDspMeta;\n    }\n\n    getJSON() {\n        return JSON.stringify(this.getMeta());\n    }\n\n    getUI() {\n        return this.getMeta().ui;\n    }\n}\n", "import * as faustwasm from \"./exports-bundle\";\n// export default faustwasm;\n// Bug with dts-bundle-generator\n\nexport * from \"./exports-bundle\";\n\n(globalThis as any).faustwasm = faustwasm;\n"],
  "mappings": "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",
  "names": ["FaustModule", "err", "assert", "files", "i", "readBinary", "readAsync", "asm", "module", "exports", "errno", "xhr", "lazyArray", "byteArray", "fd", "typeConverters", "fieldTypes", "handle", "rv", "argTypes", "date", "factoryFn", "libfaust_wasm_default", "FaustBaseWebAudioDsp", "FaustWasmInstantiator", "FaustAudioWorkletProcessorCommunicator", "FaustMonoWebAudioDsp", "FaustPolyWebAudioDsp", "FaustBaseWebAudioDsp", "FaustWasmInstantiator", "FaustMonoWebAudioDsp", "FaustAudioWorkletProcessorCommunicator", "RawSha256", "fromUtf8", "Sha256", "sha256", "item", "ctrl", "files", "read", "sp"]
}
